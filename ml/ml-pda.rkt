#lang racket

(require "../../pda-to-pda-risc/macro-glue.rkt")

(provide (all-defined-out))

(define ml-pda-risc
  (pda->pda-risc
   (TOKENS SEMICOLON ID TYVAR INT INT0 WORD REAL STRING CHAR ABSTYPE BAR CASE
           DATATYPE DOTDOTDOT END EQUALOP EQTYPE EXCEPTION DOT FN FUN FUNCTOR
           HASH IF IN INCLUDE INFIX INFIXR LAZY LET LOCAL NONFIX OF OP OPEN
           OVERLOAD REC SHARING SIG SIGNATURE STRUCT STRUCTURE THEN TYPE VAL
           WHERE WHILE WILD WITH ASTERISK COLONGT COMMA LBRACE LBRACKET LPAREN
           RBRACE RBRACKET RPAREN FUNSIG VECTORSTART BEGINQ ENDQ OBJL AQID
           WITHTYPE AND ARROW DARROW DO ELSE RAISE HANDLE ORELSE ANDALSO AS
           COLON EOF)
    (EOS EOF)
    (START s0)
    (RULE r1 *start (_ _) #f)
    (RULE r2 *start (_ _) #f)
    (RULE r3 int (INT) #f)
    (RULE r4 int (INT0) #f)
    (RULE r5 id (ID) #f)
    (RULE r6 id (ASTERISK) #f)
    (RULE r7 ident (ID) #f)
    (RULE r8 ident (ASTERISK) #f)
    (RULE r9 ident (EQUALOP) #f)
    (RULE r10 op_op (OP) #f)
    (RULE r11 op_op () #f)
    (RULE r12 qid (ID DOT qid) #f)
    (RULE r13 qid (ident) #f)
    (RULE r14 selector (id) #f)
    (RULE r15 selector (INT) #f)
    (RULE r16 tycon (ID DOT tycon) #f)
    (RULE r17 tycon (ID) #f)
    (RULE r18 tlabel (selector COLON ty) #f)
    (RULE r19 tlabels (tlabel COMMA tlabels) #f)
    (RULE r20 tlabels (tlabel) #f)
    (RULE r21 ty_prime (TYVAR) #f)
    (RULE r22 ty_prime (LBRACE tlabels RBRACE) #f)
    (RULE r23 ty_prime (LBRACE RBRACE) #f)
    (RULE r24 ty_prime (LPAREN ty0_pc RPAREN tycon) #f)
    (RULE r25 ty_prime (LPAREN ty RPAREN) #f)
    (RULE r26 ty_prime (ty_prime tycon) #f)
    (RULE r27 ty_prime (tycon) #f)
    (RULE r28 tuple_ty (ty_prime ASTERISK tuple_ty) #f)
    (RULE r29 tuple_ty (ty_prime-1 ASTERISK ty_prime-2) #f)
    (RULE r30 ty (tuple_ty) #f)
    (RULE r31 ty (ty-1 ARROW ty-2) #f)
    (RULE r32 ty (ty_prime) #f)
    (RULE r33 ty0_pc (ty-1 COMMA ty-2) #f)
    (RULE r34 ty0_pc (ty COMMA ty0_pc) #f)
    (RULE r35 match (rule) #f)
    (RULE r36 match (rule BAR match) #f)
    (RULE r37 rule (pat DARROW exp) #f)
    (RULE r38 elabel (selector EQUALOP exp) #f)
    (RULE r39 elabels (elabel COMMA elabels) #f)
    (RULE r40 elabels (elabel) #f)
    (RULE r41 exp_ps (exp) #f)
    (RULE r42 exp_ps (exp SEMICOLON exp_ps) #f)
    (RULE r43 exp (exp HANDLE match) #f)
    (RULE r44 exp (exp-1 ORELSE exp-2) #f)
    (RULE r45 exp (exp-1 ANDALSO exp-2) #f)
    (RULE r46 exp (exp COLON ty) #f)
    (RULE r47 exp (app_exp) #f)
    (RULE r48 exp (FN match) #f)
    (RULE r49 exp (CASE exp OF match) #f)
    (RULE r50 exp (WHILE exp-1 DO exp-2) #f)
    (RULE r51 exp (IF exp-1 THEN exp-2 ELSE exp-3) #f)
    (RULE r52 exp (RAISE exp) #f)
    (RULE r53 app_exp (aexp) #f)
    (RULE r54 app_exp (ident) #f)
    (RULE r55 app_exp (aexp app_exp) #f)
    (RULE r56 app_exp (ident app_exp) #f)
    (RULE r57 aexp (OP ident) #f)
    (RULE r58 aexp (ID DOT qid) #f)
    (RULE r59 aexp (int) #f)
    (RULE r60 aexp (WORD) #f)
    (RULE r61 aexp (REAL) #f)
    (RULE r62 aexp (STRING) #f)
    (RULE r63 aexp (CHAR) #f)
    (RULE r64 aexp (HASH selector) #f)
    (RULE r65 aexp (LBRACE elabels RBRACE) #f)
    (RULE r66 aexp (LBRACE RBRACE) #f)
    (RULE r67 aexp (LPAREN RPAREN) #f)
    (RULE r68 aexp (LPAREN exp_ps RPAREN) #f)
    (RULE r69 aexp (LPAREN exp_2c RPAREN) #f)
    (RULE r70 aexp (LBRACKET exp_list RBRACKET) #f)
    (RULE r71 aexp (LBRACKET RBRACKET) #f)
    (RULE r72 aexp (VECTORSTART exp_list RBRACKET) #f)
    (RULE r73 aexp (VECTORSTART RBRACKET) #f)
    (RULE r74 aexp (LET ldecs IN exp_ps END) #f)
    (RULE r75 aexp (AQID) #f)
    (RULE r76 aexp (quote) #f)
    (RULE r77 quote (BEGINQ ENDQ) #f)
    (RULE r78 quote (BEGINQ ot_list ENDQ) #f)
    (RULE r79 ot_list (OBJL aexp) #f)
    (RULE r80 ot_list (OBJL aexp ot_list) #f)
    (RULE r81 exp_2c (exp COMMA exp_2c) #f)
    (RULE r82 exp_2c (exp-1 COMMA exp-2) #f)
    (RULE r83 exp_list (exp) #f)
    (RULE r84 exp_list (exp COMMA exp_list) #f)
    (RULE r85 pat (pat-1 AS pat-2) #f)
    (RULE r86 pat (pat COLON ty) #f)
    (RULE r87 pat (apats) #f)
    (RULE r88 apat (apat_prime) #f)
    (RULE r89 apat (LPAREN pat RPAREN) #f)
    (RULE r90 apat (id) #f)
    (RULE r91 apat (LPAREN RPAREN) #f)
    (RULE r92 apat (LPAREN pat COMMA pat_list RPAREN) #f)
    (RULE r93 apat (LPAREN pat BAR or_pat_list RPAREN) #f)
    (RULE r94 apat_prime (OP ident) #f)
    (RULE r95 apat_prime (ID DOT qid) #f)
    (RULE r96 apat_prime (int) #f)
    (RULE r97 apat_prime (WORD) #f)
    (RULE r98 apat_prime (STRING) #f)
    (RULE r99 apat_prime (CHAR) #f)
    (RULE r100 apat_prime (WILD) #f)
    (RULE r101 apat_prime (LBRACKET RBRACKET) #f)
    (RULE r102 apat_prime (LBRACKET pat_list RBRACKET) #f)
    (RULE r103 apat_prime (VECTORSTART RBRACKET) #f)
    (RULE r104 apat_prime (VECTORSTART pat_list RBRACKET) #f)
    (RULE r105 apat_prime (LBRACE RBRACE) #f)
    (RULE r106 apat_prime (LBRACE plabels RBRACE) #f)
    (RULE r107 plabel (selector EQUALOP pat) #f)
    (RULE r108 plabel (ID) #f)
    (RULE r109 plabel (ID AS pat) #f)
    (RULE r110 plabel (ID COLON ty) #f)
    (RULE r111 plabel (ID COLON ty AS pat) #f)
    (RULE r112 plabels (plabel COMMA plabels) #f)
    (RULE r113 plabels (plabel) #f)
    (RULE r114 plabels (DOTDOTDOT) #f)
    (RULE r115 pat_list (pat) #f)
    (RULE r116 pat_list (pat COMMA pat_list) #f)
    (RULE r117 or_pat_list (pat) #f)
    (RULE r118 or_pat_list (pat BAR or_pat_list) #f)
    (RULE r119 vb (vb-1 AND vb-2) #f)
    (RULE r120 vb (LAZY pat EQUALOP exp) #f)
    (RULE r121 vb (pat EQUALOP exp) #f)
    (RULE r122 constraint () #f)
    (RULE r123 constraint (COLON ty) #f)
    (RULE r124 rvb (id constraint EQUALOP exp) #f)
    (RULE r125 rvb (OP id constraint EQUALOP exp) #f)
    (RULE r126 rvb (rvb-1 AND rvb-2) #f)
    (RULE r127 rvb (LAZY id constraint EQUALOP exp) #f)
    (RULE r128 rvb (LAZY OP id constraint EQUALOP exp) #f)
    (RULE r129 fb_prime (clause) #f)
    (RULE r130 fb_prime (clause BAR fb_prime) #f)
    (RULE r131 fb (fb_prime) #f)
    (RULE r132 fb (LAZY fb_prime) #f)
    (RULE r133 fb (fb_prime AND fb) #f)
    (RULE r134 fb (LAZY fb_prime AND fb) #f)
    (RULE r135 apats (apat) #f)
    (RULE r136 apats (apat apats) #f)
    (RULE r137 clause (apats constraint EQUALOP exp) #f)
    (RULE r138 tb (tyvars ID EQUALOP ty) #f)
    (RULE r139 tb (tb-1 AND tb-2) #f)
    (RULE r140 tyvars (TYVAR) #f)
    (RULE r141 tyvars (LPAREN tyvar_pc RPAREN) #f)
    (RULE r142 tyvars () #f)
    (RULE r143 tyvarseq (TYVAR) #f)
    (RULE r144 tyvarseq (LPAREN tyvar_pc RPAREN) #f)
    (RULE r145 tyvar_pc (TYVAR) #f)
    (RULE r146 tyvar_pc (TYVAR COMMA tyvar_pc) #f)
    (RULE r147 dtrepl (ID EQUALOP DATATYPE tycon) #f)
    (RULE r148 dbs (db) #f)
    (RULE r149 dbs (db AND dbs) #f)
    (RULE r150 db (ID EQUALOP constrs) #f)
    (RULE r151 db (tyvarseq ID EQUALOP constrs) #f)
    (RULE r152 db (LAZY tyvars ID EQUALOP constrs) #f)
    (RULE r153 constrs (constr) #f)
    (RULE r154 constrs (constr BAR constrs) #f)
    (RULE r155 constr (op_op ident) #f)
    (RULE r156 constr (op_op ident OF ty) #f)
    (RULE r157 eb (op_op ident) #f)
    (RULE r158 eb (op_op ident OF ty) #f)
    (RULE r159 eb (op_op ident EQUALOP qid) #f)
    (RULE r160 eb (eb-1 AND eb-2) #f)
    (RULE r161 qid_p (qid) #f)
    (RULE r162 qid_p (qid qid_p) #f)
    (RULE r163 fixity (INFIX) #f)
    (RULE r164 fixity (INFIX int) #f)
    (RULE r165 fixity (INFIXR) #f)
    (RULE r166 fixity (INFIXR int) #f)
    (RULE r167 fixity (NONFIX) #f)
    (RULE r168 ldec (VAL vb) #f)
    (RULE r169 ldec (VAL tyvarseq vb) #f)
    (RULE r170 ldec (VAL REC rvb) #f)
    (RULE r171 ldec (VAL REC tyvarseq rvb) #f)
    (RULE r172 ldec (FUN fb) #f)
    (RULE r173 ldec (FUN tyvarseq fb) #f)
    (RULE r174 ldec (TYPE tb) #f)
    (RULE r175 ldec (DATATYPE dtrepl) #f)
    (RULE r176 ldec (DATATYPE dbs) #f)
    (RULE r177 ldec (DATATYPE dbs WITHTYPE tb) #f)
    (RULE r178 ldec (ABSTYPE dbs WITH ldecs END) #f)
    (RULE r179 ldec (ABSTYPE dbs WITHTYPE tb WITH ldecs END) #f)
    (RULE r180 ldec (EXCEPTION eb) #f)
    (RULE r181 ldec (OPEN qid_p) #f)
    (RULE r182 ldec (fixity ops) #f)
    (RULE r183 ldec (OVERLOAD ident COLON ty AS exp_pa) #f)
    (RULE r184 exp_pa (exp) #f)
    (RULE r185 exp_pa (exp AND exp_pa) #f)
    (RULE r186 ldecs () #f)
    (RULE r187 ldecs (ldec ldecs) #f)
    (RULE r188 ldecs (SEMICOLON ldecs) #f)
    (RULE r189 ldecs (LOCAL ldecs-1 IN ldecs-2 END ldecs-3) #f)
    (RULE r190 ops (ident) #f)
    (RULE r191 ops (ident ops) #f)
    (RULE r192 spec_s () #f)
    (RULE r193 spec_s (spec spec_s) #f)
    (RULE r194 spec_s (SEMICOLON spec_s) #f)
    (RULE r195 spec (STRUCTURE strspec) #f)
    (RULE r196 spec (FUNCTOR fctspec) #f)
    (RULE r197 spec (DATATYPE dtrepl) #f)
    (RULE r198 spec (DATATYPE dbs) #f)
    (RULE r199 spec (DATATYPE dbs WITHTYPE tb) #f)
    (RULE r200 spec (TYPE tyspec) #f)
    (RULE r201 spec (EQTYPE tyspec) #f)
    (RULE r202 spec (VAL valspec) #f)
    (RULE r203 spec (EXCEPTION exnspec) #f)
    (RULE r204 spec (SHARING sharespec) #f)
    (RULE r205 spec (INCLUDE sign) #f)
    (RULE r206 spec (INCLUDE ident idents) #f)
    (RULE r207 idents (ident) #f)
    (RULE r208 idents (ident idents) #f)
    (RULE r209 strspec (strspec-1 AND strspec-2) #f)
    (RULE r210 strspec (ident COLON sign) #f)
    (RULE r211 strspec (ident COLON sign EQUALOP qid) #f)
    (RULE r212 fctspec (fctspec-1 AND fctspec-2) #f)
    (RULE r213 fctspec (ident fsig) #f)
    (RULE r214 tyspec (tyspec-1 AND tyspec-2) #f)
    (RULE r215 tyspec (tyvars ID) #f)
    (RULE r216 tyspec (tyvars ID EQUALOP ty) #f)
    (RULE r217 valspec (valspec-1 AND valspec-2) #f)
    (RULE r218 valspec (op_op ident COLON ty) #f)
    (RULE r219 exnspec (exnspec-1 AND exnspec-2) #f)
    (RULE r220 exnspec (ident) #f)
    (RULE r221 exnspec (ident OF ty) #f)
    (RULE r222 sharespec (sharespec-1 AND sharespec-2) #f)
    (RULE r223 sharespec (TYPE patheqn) #f)
    (RULE r224 sharespec (patheqn) #f)
    (RULE r225 patheqn (qid-1 EQUALOP qid-2) #f)
    (RULE r226 patheqn (qid EQUALOP patheqn) #f)
    (RULE r227 whspec (whspec-1 AND whspec-2) #f)
    (RULE r228 whspec (TYPE tyvars qid EQUALOP ty) #f)
    (RULE r229 whspec (qid-1 EQUALOP qid-2) #f)
    (RULE r230 sign (ident) #f)
    (RULE r231 sign (SIG spec_s END) #f)
    (RULE r232 sign (sign WHERE whspec) #f)
    (RULE r233 sigconstraint_op () #f)
    (RULE r234 sigconstraint_op (COLON sign) #f)
    (RULE r235 sigconstraint_op (COLONGT sign) #f)
    (RULE r236 fsigconstraint_op () #f)
    (RULE r237 fsigconstraint_op (COLON ident) #f)
    (RULE r238 fsigconstraint_op (COLONGT ident) #f)
    (RULE r239 sigb (sigb-1 AND sigb-2) #f)
    (RULE r240 sigb (ident EQUALOP sign) #f)
    (RULE r241 fsigb (fsigb-1 AND fsigb-2) #f)
    (RULE r242 fsigb (ident fparamList EQUALOP sign) #f)
    (RULE r243 fsig (COLON ident) #f)
    (RULE r244 fsig (fparamList COLON sign) #f)
    (RULE r245 str (qid) #f)
    (RULE r246 str (STRUCT strdecs END) #f)
    (RULE r247 str (qid arg_fct) #f)
    (RULE r248 str (LET strdecs IN str END) #f)
    (RULE r249 str (str COLON sign) #f)
    (RULE r250 str (str COLONGT sign) #f)
    (RULE r251 arg_fct (LPAREN strdecs RPAREN arg_fct) #f)
    (RULE r252 arg_fct (LPAREN str RPAREN arg_fct) #f)
    (RULE r253 arg_fct (LPAREN str RPAREN) #f)
    (RULE r254 arg_fct (LPAREN strdecs RPAREN) #f)
    (RULE r255 strdecs (strdec strdecs) #f)
    (RULE r256 strdecs (SEMICOLON strdecs) #f)
    (RULE r257 strdecs () #f)
    (RULE r258 sdecs (sdec sdecs) #f)
    (RULE r259 sdecs (SEMICOLON sdecs) #f)
    (RULE r260 sdecs () #f)
    (RULE r261 sdecs_prime (sdec sdecs_prime) #f)
    (RULE r262 sdecs_prime (sdec) #f)
    (RULE r263 strdec (STRUCTURE strb) #f)
    (RULE r264 strdec (FUNCTOR fctb) #f)
    (RULE r265 strdec (LOCAL strdecs-1 IN strdecs-2 END) #f)
    (RULE r266 strdec (ldec) #f)
    (RULE r267 sdec (STRUCTURE strb) #f)
    (RULE r268 sdec (SIGNATURE sigb) #f)
    (RULE r269 sdec (FUNSIG fsigb) #f)
    (RULE r270 sdec (FUNCTOR fctb) #f)
    (RULE r271 sdec (LOCAL sdecs-1 IN sdecs-2 END) #f)
    (RULE r272 sdec (ldec) #f)
    (RULE r273 strb (ident sigconstraint_op EQUALOP str) #f)
    (RULE r274 strb (strb-1 AND strb-2) #f)
    (RULE r275 fparam (ID COLON sign) #f)
    (RULE r276 fparam (spec_s) #f)
    (RULE r277 fparamList (LPAREN fparam RPAREN) #f)
    (RULE r278 fparamList (LPAREN fparam RPAREN fparamList) #f)
    (RULE r279 fctb (ident fparamList sigconstraint_op EQUALOP str) #f)
    (RULE r280 fctb (ident fsigconstraint_op EQUALOP fct_exp) #f)
    (RULE r281 fctb (fctb-1 AND fctb-2) #f)
    (RULE r282 fct_exp (qid) #f)
    (RULE r283 fct_exp (qid arg_fct) #f)
    (RULE r284 fct_exp (LET strdecs IN fct_exp END) #f)
    (RULE r285 interdec (sdecs_prime) #f)
    (RULE r286 interdec (exp) #f)
    (STATE s0 (COMMENT interdec "=>" "." exp) (COMMENT interdec "=>" "." sdecs_prime) (COMMENT sdec "=>" "." ldec) (COMMENT sdec "=>" "." LOCAL sdecs IN sdecs END) (COMMENT sdec "=>" "." FUNCTOR fctb) (COMMENT sdec "=>" "." FUNSIG fsigb) (COMMENT sdec "=>" "." SIGNATURE sigb) (COMMENT sdec "=>" "." STRUCTURE strb) (COMMENT sdecs_prime "=>" "." sdec) (COMMENT sdecs_prime "=>" "." sdec sdecs_prime) (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (COMMENT *start "=>" "." interdec SEMICOLON) (COMMENT *start "=>" "." interdec EOF) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (ABSTYPE) s19) (SHIFT (CASE) s20) (SHIFT (DATATYPE) s21) (SHIFT (EQUALOP) s22) (SHIFT (EXCEPTION) s23) (SHIFT (FN) s24) (SHIFT (FUN) s25) (SHIFT (FUNCTOR) s26) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LET) s31) (SHIFT (LOCAL) s32) (SHIFT (NONFIX) s33) (SHIFT (OP) s34) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (SIGNATURE) s37) (SHIFT (STRUCTURE) s38) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (FUNSIG) s46) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s3) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6) (GOTO fixity s7) (GOTO ldec s8) (GOTO sdecs_prime s9) (GOTO sdec s10) (GOTO interdec s11))
    (STATE s1 (COMMENT aexp "=>" int ".") (REDUCE () r59))
    (STATE s2 (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" ident "." app_exp) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" ident ".") (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (REDUCE (SEMICOLON) r54) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (REDUCE (ABSTYPE) r54) (REDUCE (BAR) r54) (REDUCE (DATATYPE) r54) (REDUCE (END) r54) (SHIFT (EQUALOP) s22) (REDUCE (EXCEPTION) r54) (REDUCE (FUN) r54) (REDUCE (FUNCTOR) r54) (SHIFT (HASH) s27) (REDUCE (IN) r54) (REDUCE (INFIX) r54) (REDUCE (INFIXR) r54) (SHIFT (LET) s31) (REDUCE (LOCAL) r54) (REDUCE (NONFIX) r54) (REDUCE (OF) r54) (SHIFT (OP) s34) (REDUCE (OPEN) r54) (REDUCE (OVERLOAD) r54) (REDUCE (SIGNATURE) r54) (REDUCE (STRUCTURE) r54) (REDUCE (THEN) r54) (REDUCE (TYPE) r54) (REDUCE (VAL) r54) (SHIFT (ASTERISK) s42) (REDUCE (COMMA) r54) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (REDUCE (RBRACE) r54) (REDUCE (RBRACKET) r54) (REDUCE (RPAREN) r54) (REDUCE (FUNSIG) r54) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (REDUCE (AND) r54) (REDUCE (DO) r54) (REDUCE (ELSE) r54) (REDUCE (HANDLE) r54) (REDUCE (ORELSE) r54) (REDUCE (ANDALSO) r54) (REDUCE (COLON) r54) (REDUCE (EOF) r54) (GOTO int s1) (GOTO ident s2) (GOTO app_exp s563) (GOTO aexp s5) (GOTO quote s6))
    (STATE s3 (COMMENT interdec "=>" exp ".") (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (REDUCE (SEMICOLON) r286) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (SHIFT (ANDALSO) s54) (SHIFT (COLON) s55) (REDUCE (EOF) r286))
    (STATE s4 (COMMENT exp "=>" app_exp ".") (REDUCE () r47))
    (STATE s5 (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" aexp "." app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" aexp ".") (COMMENT app_exp "=>" "." aexp) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (REDUCE (SEMICOLON) r53) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (REDUCE (ABSTYPE) r53) (REDUCE (BAR) r53) (REDUCE (DATATYPE) r53) (REDUCE (END) r53) (SHIFT (EQUALOP) s22) (REDUCE (EXCEPTION) r53) (REDUCE (FUN) r53) (REDUCE (FUNCTOR) r53) (SHIFT (HASH) s27) (REDUCE (IN) r53) (REDUCE (INFIX) r53) (REDUCE (INFIXR) r53) (SHIFT (LET) s31) (REDUCE (LOCAL) r53) (REDUCE (NONFIX) r53) (REDUCE (OF) r53) (SHIFT (OP) s34) (REDUCE (OPEN) r53) (REDUCE (OVERLOAD) r53) (REDUCE (SIGNATURE) r53) (REDUCE (STRUCTURE) r53) (REDUCE (THEN) r53) (REDUCE (TYPE) r53) (REDUCE (VAL) r53) (SHIFT (ASTERISK) s42) (REDUCE (COMMA) r53) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (REDUCE (RBRACE) r53) (REDUCE (RBRACKET) r53) (REDUCE (RPAREN) r53) (REDUCE (FUNSIG) r53) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (REDUCE (AND) r53) (REDUCE (DO) r53) (REDUCE (ELSE) r53) (REDUCE (HANDLE) r53) (REDUCE (ORELSE) r53) (REDUCE (ANDALSO) r53) (REDUCE (COLON) r53) (REDUCE (EOF) r53) (GOTO int s1) (GOTO ident s2) (GOTO app_exp s562) (GOTO aexp s5) (GOTO quote s6))
    (STATE s6 (COMMENT aexp "=>" quote ".") (REDUCE () r76))
    (STATE s7 (COMMENT ops "=>" "." ident ops) (COMMENT ops "=>" "." ident) (COMMENT ldec "=>" fixity "." ops) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s559) (GOTO ops s560))
    (STATE s8 (COMMENT sdec "=>" ldec ".") (REDUCE () r272))
    (STATE s9 (COMMENT interdec "=>" sdecs_prime ".") (REDUCE () r285))
    (STATE s10 (COMMENT sdec "=>" "." ldec) (COMMENT sdec "=>" "." LOCAL sdecs IN sdecs END) (COMMENT sdec "=>" "." FUNCTOR fctb) (COMMENT sdec "=>" "." FUNSIG fsigb) (COMMENT sdec "=>" "." SIGNATURE sigb) (COMMENT sdec "=>" "." STRUCTURE strb) (COMMENT sdecs_prime "=>" sdec ".") (COMMENT sdecs_prime "=>" "." sdec) (COMMENT sdecs_prime "=>" sdec "." sdecs_prime) (COMMENT sdecs_prime "=>" "." sdec sdecs_prime) (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (REDUCE (SEMICOLON) r262) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (SHIFT (FUNCTOR) s26) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s32) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (SIGNATURE) s37) (SHIFT (STRUCTURE) s38) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (SHIFT (FUNSIG) s46) (REDUCE (EOF) r262) (GOTO fixity s7) (GOTO ldec s8) (GOTO sdecs_prime s558) (GOTO sdec s10))
    (STATE s11 (COMMENT *start "=>" interdec "." SEMICOLON) (COMMENT *start "=>" interdec "." EOF) (ACCEPT (SEMICOLON)) (ACCEPT (EOF)))
    (STATE s12 (COMMENT aexp "=>" ID "." DOT qid) (COMMENT ident "=>" ID ".") (REDUCE (SEMICOLON) r7) (REDUCE (ID) r7) (REDUCE (INT) r7) (REDUCE (INT0) r7) (REDUCE (WORD) r7) (REDUCE (REAL) r7) (REDUCE (STRING) r7) (REDUCE (CHAR) r7) (REDUCE (ABSTYPE) r7) (REDUCE (BAR) r7) (REDUCE (DATATYPE) r7) (REDUCE (END) r7) (REDUCE (EQUALOP) r7) (REDUCE (EXCEPTION) r7) (SHIFT (DOT) s173) (REDUCE (FUN) r7) (REDUCE (FUNCTOR) r7) (REDUCE (HASH) r7) (REDUCE (IN) r7) (REDUCE (INFIX) r7) (REDUCE (INFIXR) r7) (REDUCE (LET) r7) (REDUCE (LOCAL) r7) (REDUCE (NONFIX) r7) (REDUCE (OF) r7) (REDUCE (OP) r7) (REDUCE (OPEN) r7) (REDUCE (OVERLOAD) r7) (REDUCE (SIGNATURE) r7) (REDUCE (STRUCTURE) r7) (REDUCE (THEN) r7) (REDUCE (TYPE) r7) (REDUCE (VAL) r7) (REDUCE (ASTERISK) r7) (REDUCE (COMMA) r7) (REDUCE (LBRACE) r7) (REDUCE (LBRACKET) r7) (REDUCE (LPAREN) r7) (REDUCE (RBRACE) r7) (REDUCE (RBRACKET) r7) (REDUCE (RPAREN) r7) (REDUCE (FUNSIG) r7) (REDUCE (VECTORSTART) r7) (REDUCE (BEGINQ) r7) (REDUCE (AQID) r7) (REDUCE (AND) r7) (REDUCE (DO) r7) (REDUCE (ELSE) r7) (REDUCE (HANDLE) r7) (REDUCE (ORELSE) r7) (REDUCE (ANDALSO) r7) (REDUCE (COLON) r7) (REDUCE (EOF) r7))
    (STATE s13 (COMMENT int "=>" INT ".") (REDUCE () r3))
    (STATE s14 (COMMENT int "=>" INT0 ".") (REDUCE () r4))
    (STATE s15 (COMMENT aexp "=>" WORD ".") (REDUCE () r60))
    (STATE s16 (COMMENT aexp "=>" REAL ".") (REDUCE () r61))
    (STATE s17 (COMMENT aexp "=>" STRING ".") (REDUCE () r62))
    (STATE s18 (COMMENT aexp "=>" CHAR ".") (REDUCE () r63))
    (STATE s19 (COMMENT ldec "=>" ABSTYPE "." dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" ABSTYPE "." dbs WITH ldecs END) (COMMENT db "=>" "." LAZY tyvars ID EQUALOP constrs) (COMMENT db "=>" "." tyvarseq ID EQUALOP constrs) (COMMENT db "=>" "." ID EQUALOP constrs) (COMMENT dbs "=>" "." db AND dbs) (COMMENT dbs "=>" "." db) (COMMENT tyvarseq "=>" "." LPAREN tyvar_pc RPAREN) (COMMENT tyvarseq "=>" "." TYVAR) (SHIFT (ID) s308) (SHIFT (TYVAR) s286) (SHIFT (LAZY) s287) (SHIFT (LPAREN) s288) (GOTO tyvarseq s281) (GOTO dbs s547) (GOTO db s284))
    (STATE s20 (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" CASE "." exp OF match) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s544) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6))
    (STATE s21 (COMMENT ldec "=>" DATATYPE "." dbs WITHTYPE tb) (COMMENT ldec "=>" DATATYPE "." dbs) (COMMENT ldec "=>" DATATYPE "." dtrepl) (COMMENT db "=>" "." LAZY tyvars ID EQUALOP constrs) (COMMENT db "=>" "." tyvarseq ID EQUALOP constrs) (COMMENT db "=>" "." ID EQUALOP constrs) (COMMENT dbs "=>" "." db AND dbs) (COMMENT dbs "=>" "." db) (COMMENT dtrepl "=>" "." ID EQUALOP DATATYPE tycon) (COMMENT tyvarseq "=>" "." LPAREN tyvar_pc RPAREN) (COMMENT tyvarseq "=>" "." TYVAR) (SHIFT (ID) s285) (SHIFT (TYVAR) s286) (SHIFT (LAZY) s287) (SHIFT (LPAREN) s288) (GOTO tyvarseq s281) (GOTO dtrepl s540) (GOTO dbs s541) (GOTO db s284))
    (STATE s22 (COMMENT ident "=>" EQUALOP ".") (REDUCE () r9))
    (STATE s23 (COMMENT ldec "=>" EXCEPTION "." eb) (COMMENT eb "=>" "." eb AND eb) (COMMENT eb "=>" "." op_op ident EQUALOP qid) (COMMENT eb "=>" "." op_op ident OF ty) (COMMENT eb "=>" "." op_op ident) (COMMENT op_op "=>" ".") (COMMENT op_op "=>" "." OP) (REDUCE (ID) r11) (REDUCE (EQUALOP) r11) (SHIFT (OP) s205) (REDUCE (ASTERISK) r11) (GOTO op_op s531) (GOTO eb s532))
    (STATE s24 (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" "." pat AS pat) (COMMENT exp "=>" FN "." match) (COMMENT rule "=>" "." pat DARROW exp) (COMMENT match "=>" "." rule BAR match) (COMMENT match "=>" "." rule) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO match s530) (GOTO rule s98) (GOTO pat s99) (GOTO apat s100) (GOTO apat_prime s101) (GOTO apats s102))
    (STATE s25 (COMMENT ldec "=>" FUN "." tyvarseq fb) (COMMENT ldec "=>" FUN "." fb) (COMMENT tyvarseq "=>" "." LPAREN tyvar_pc RPAREN) (COMMENT tyvarseq "=>" "." TYVAR) (COMMENT clause "=>" "." apats constraint EQUALOP exp) (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT fb "=>" "." LAZY fb_prime AND fb) (COMMENT fb "=>" "." fb_prime AND fb) (COMMENT fb "=>" "." LAZY fb_prime) (COMMENT fb "=>" "." fb_prime) (COMMENT fb_prime "=>" "." clause BAR fb_prime) (COMMENT fb_prime "=>" "." clause) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (TYVAR) s286) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (LAZY) s518) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s361) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO apat s100) (GOTO apat_prime s101) (GOTO fb_prime s513) (GOTO fb s514) (GOTO apats s515) (GOTO clause s516) (GOTO tyvarseq s517))
    (STATE s26 (COMMENT fctb "=>" "." fctb AND fctb) (COMMENT fctb "=>" "." ident fsigconstraint_op EQUALOP fct_exp) (COMMENT fctb "=>" "." ident fparamList sigconstraint_op EQUALOP str) (COMMENT sdec "=>" FUNCTOR "." fctb) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s423) (GOTO fctb s512))
    (STATE s27 (COMMENT aexp "=>" HASH "." selector) (COMMENT selector "=>" "." INT) (COMMENT selector "=>" "." id) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (SHIFT (ID) s78) (SHIFT (INT) s79) (SHIFT (ASTERISK) s80) (GOTO id s74) (GOTO selector s511))
    (STATE s28 (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" IF "." exp THEN exp ELSE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s506) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6))
    (STATE s29 (COMMENT fixity "=>" INFIX "." int) (COMMENT fixity "=>" INFIX ".") (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (REDUCE (ID) r163) (SHIFT (INT) s13) (SHIFT (INT0) s14) (REDUCE (EQUALOP) r163) (REDUCE (ASTERISK) r163) (GOTO int s505))
    (STATE s30 (COMMENT fixity "=>" INFIXR "." int) (COMMENT fixity "=>" INFIXR ".") (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (REDUCE (ID) r165) (SHIFT (INT) s13) (SHIFT (INT0) s14) (REDUCE (EQUALOP) r165) (REDUCE (ASTERISK) r165) (GOTO int s504))
    (STATE s31 (COMMENT ldecs "=>" "." LOCAL ldecs IN ldecs END ldecs) (COMMENT ldecs "=>" "." SEMICOLON ldecs) (COMMENT ldecs "=>" "." ldec ldecs) (COMMENT ldecs "=>" ".") (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (COMMENT aexp "=>" LET "." ldecs IN exp_ps END) (SHIFT (SEMICOLON) s492) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (REDUCE (IN) r186) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s493) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (GOTO fixity s7) (GOTO ldec s490) (GOTO ldecs s491))
    (STATE s32 (COMMENT sdec "=>" "." ldec) (COMMENT sdec "=>" LOCAL "." sdecs IN sdecs END) (COMMENT sdec "=>" "." LOCAL sdecs IN sdecs END) (COMMENT sdec "=>" "." FUNCTOR fctb) (COMMENT sdec "=>" "." FUNSIG fsigb) (COMMENT sdec "=>" "." SIGNATURE sigb) (COMMENT sdec "=>" "." STRUCTURE strb) (COMMENT sdecs "=>" ".") (COMMENT sdecs "=>" "." SEMICOLON sdecs) (COMMENT sdecs "=>" "." sdec sdecs) (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (SHIFT (SEMICOLON) s484) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (SHIFT (FUNCTOR) s26) (REDUCE (IN) r260) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s32) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (SIGNATURE) s37) (SHIFT (STRUCTURE) s38) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (SHIFT (FUNSIG) s46) (GOTO fixity s7) (GOTO ldec s8) (GOTO sdecs s482) (GOTO sdec s483))
    (STATE s33 (COMMENT fixity "=>" NONFIX ".") (REDUCE () r167))
    (STATE s34 (COMMENT aexp "=>" OP "." ident) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s481))
    (STATE s35 (COMMENT ldec "=>" OPEN "." qid_p) (COMMENT qid_p "=>" "." qid qid_p) (COMMENT qid_p "=>" "." qid) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s160) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s158) (GOTO qid s478) (GOTO qid_p s479))
    (STATE s36 (COMMENT ldec "=>" OVERLOAD "." ident COLON ty AS exp_pa) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s470))
    (STATE s37 (COMMENT sdec "=>" SIGNATURE "." sigb) (COMMENT sigb "=>" "." ident EQUALOP sign) (COMMENT sigb "=>" "." sigb AND sigb) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s464) (GOTO sigb s465))
    (STATE s38 (COMMENT strb "=>" "." strb AND strb) (COMMENT strb "=>" "." ident sigconstraint_op EQUALOP str) (COMMENT sdec "=>" STRUCTURE "." strb) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s397) (GOTO strb s398))
    (STATE s39 (COMMENT ldec "=>" TYPE "." tb) (COMMENT tyvars "=>" ".") (COMMENT tyvars "=>" "." LPAREN tyvar_pc RPAREN) (COMMENT tyvars "=>" "." TYVAR) (COMMENT tb "=>" "." tb AND tb) (COMMENT tb "=>" "." tyvars ID EQUALOP ty) (REDUCE (ID) r142) (SHIFT (TYVAR) s213) (SHIFT (LPAREN) s214) (GOTO tb s396) (GOTO tyvars s312))
    (STATE s40 (COMMENT ldec "=>" VAL "." REC tyvarseq rvb) (COMMENT ldec "=>" VAL "." REC rvb) (COMMENT ldec "=>" VAL "." tyvarseq vb) (COMMENT ldec "=>" VAL "." vb) (COMMENT tyvarseq "=>" "." LPAREN tyvar_pc RPAREN) (COMMENT tyvarseq "=>" "." TYVAR) (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT vb "=>" "." pat EQUALOP exp) (COMMENT vb "=>" "." LAZY pat EQUALOP exp) (COMMENT vb "=>" "." vb AND vb) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" "." pat AS pat) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (TYVAR) s286) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (LAZY) s359) (SHIFT (OP) s107) (SHIFT (REC) s360) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s361) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO pat s356) (GOTO apat s100) (GOTO apat_prime s101) (GOTO vb s357) (GOTO apats s102) (GOTO tyvarseq s358))
    (STATE s41 (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" WHILE "." exp DO exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s353) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6))
    (STATE s42 (COMMENT ident "=>" ASTERISK ".") (REDUCE () r8))
    (STATE s43 (COMMENT aexp "=>" LBRACE "." RBRACE) (COMMENT aexp "=>" LBRACE "." elabels RBRACE) (COMMENT elabels "=>" "." elabel) (COMMENT elabels "=>" "." elabel COMMA elabels) (COMMENT elabel "=>" "." selector EQUALOP exp) (COMMENT selector "=>" "." INT) (COMMENT selector "=>" "." id) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (SHIFT (ID) s78) (SHIFT (INT) s79) (SHIFT (ASTERISK) s80) (SHIFT (RBRACE) s347) (GOTO id s74) (GOTO selector s344) (GOTO elabel s345) (GOTO elabels s346))
    (STATE s44 (COMMENT exp_list "=>" "." exp COMMA exp_list) (COMMENT exp_list "=>" "." exp) (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" LBRACKET "." RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" LBRACKET "." exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (RBRACKET) s342) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s177) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6) (GOTO exp_list s341))
    (STATE s45 (COMMENT exp_2c "=>" "." exp COMMA exp) (COMMENT exp_2c "=>" "." exp COMMA exp_2c) (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" LPAREN "." exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" LPAREN "." exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" LPAREN "." RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT exp_ps "=>" "." exp SEMICOLON exp_ps) (COMMENT exp_ps "=>" "." exp) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (RPAREN) s332) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp_ps s329) (GOTO exp s330) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6) (GOTO exp_2c s331))
    (STATE s46 (COMMENT sdec "=>" FUNSIG "." fsigb) (COMMENT fsigb "=>" "." ident fparamList EQUALOP sign) (COMMENT fsigb "=>" "." fsigb AND fsigb) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s183) (GOTO fsigb s184))
    (STATE s47 (COMMENT exp_list "=>" "." exp COMMA exp_list) (COMMENT exp_list "=>" "." exp) (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" VECTORSTART "." RBRACKET) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" VECTORSTART "." exp_list RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (RBRACKET) s179) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s177) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6) (GOTO exp_list s178))
    (STATE s48 (COMMENT ot_list "=>" "." OBJL aexp ot_list) (COMMENT ot_list "=>" "." OBJL aexp) (COMMENT quote "=>" BEGINQ "." ot_list ENDQ) (COMMENT quote "=>" BEGINQ "." ENDQ) (SHIFT (ENDQ) s169) (SHIFT (OBJL) s170) (GOTO ot_list s168))
    (STATE s49 (COMMENT aexp "=>" AQID ".") (REDUCE () r75))
    (STATE s50 (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" RAISE "." exp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s51) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6))
    (STATE s51 (COMMENT exp "=>" RAISE exp ".") (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (REDUCE (SEMICOLON) r52) (REDUCE (ABSTYPE) r52) (REDUCE (BAR) r52) (REDUCE (DATATYPE) r52) (REDUCE (END) r52) (REDUCE (EXCEPTION) r52) (REDUCE (FUN) r52) (REDUCE (FUNCTOR) r52) (REDUCE (IN) r52) (REDUCE (INFIX) r52) (REDUCE (INFIXR) r52) (REDUCE (LOCAL) r52) (REDUCE (NONFIX) r52) (REDUCE (OF) r52) (REDUCE (OPEN) r52) (REDUCE (OVERLOAD) r52) (REDUCE (SIGNATURE) r52) (REDUCE (STRUCTURE) r52) (REDUCE (THEN) r52) (REDUCE (TYPE) r52) (REDUCE (VAL) r52) (REDUCE (COMMA) r52) (REDUCE (RBRACE) r52) (REDUCE (RBRACKET) r52) (REDUCE (RPAREN) r52) (REDUCE (FUNSIG) r52) (REDUCE (AND) r52) (REDUCE (DO) r52) (REDUCE (ELSE) r52) (REDUCE (HANDLE) r52) (REDUCE (ORELSE) r52) (REDUCE (ANDALSO) r52) (REDUCE (COLON) r52) (REDUCE (EOF) r52))
    (STATE s52 (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" "." pat AS pat) (COMMENT exp "=>" exp HANDLE "." match) (COMMENT rule "=>" "." pat DARROW exp) (COMMENT match "=>" "." rule BAR match) (COMMENT match "=>" "." rule) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO match s97) (GOTO rule s98) (GOTO pat s99) (GOTO apat s100) (GOTO apat_prime s101) (GOTO apats s102))
    (STATE s53 (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" exp ORELSE "." exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s94) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6))
    (STATE s54 (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" exp ANDALSO "." exp) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s93) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6))
    (STATE s55 (COMMENT exp "=>" exp COLON "." ty) (COMMENT ty "=>" "." ty_prime) (COMMENT ty "=>" "." ty ARROW ty) (COMMENT ty "=>" "." tuple_ty) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK ty_prime) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK tuple_ty) (COMMENT ty_prime "=>" "." tycon) (COMMENT ty_prime "=>" "." ty_prime tycon) (COMMENT ty_prime "=>" "." LPAREN ty RPAREN) (COMMENT ty_prime "=>" "." LPAREN ty0_pc RPAREN tycon) (COMMENT ty_prime "=>" "." LBRACE RBRACE) (COMMENT ty_prime "=>" "." LBRACE tlabels RBRACE) (COMMENT ty_prime "=>" "." TYVAR) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (SHIFT (TYVAR) s61) (SHIFT (LBRACE) s62) (SHIFT (LPAREN) s63) (GOTO tycon s56) (GOTO ty_prime s57) (GOTO tuple_ty s58) (GOTO ty s59))
    (STATE s56 (COMMENT ty_prime "=>" tycon ".") (REDUCE () r27))
    (STATE s57 (COMMENT ty "=>" ty_prime ".") (COMMENT tuple_ty "=>" ty_prime "." ASTERISK ty_prime) (COMMENT tuple_ty "=>" ty_prime "." ASTERISK tuple_ty) (COMMENT ty_prime "=>" ty_prime "." tycon) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (REDUCE (SEMICOLON) r32) (SHIFT (ID) s60) (REDUCE (ABSTYPE) r32) (REDUCE (BAR) r32) (REDUCE (DATATYPE) r32) (REDUCE (END) r32) (REDUCE (EQUALOP) r32) (REDUCE (EQTYPE) r32) (REDUCE (EXCEPTION) r32) (REDUCE (FUN) r32) (REDUCE (FUNCTOR) r32) (REDUCE (IN) r32) (REDUCE (INCLUDE) r32) (REDUCE (INFIX) r32) (REDUCE (INFIXR) r32) (REDUCE (LOCAL) r32) (REDUCE (NONFIX) r32) (REDUCE (OF) r32) (REDUCE (OPEN) r32) (REDUCE (OVERLOAD) r32) (REDUCE (SHARING) r32) (REDUCE (SIGNATURE) r32) (REDUCE (STRUCTURE) r32) (REDUCE (THEN) r32) (REDUCE (TYPE) r32) (REDUCE (VAL) r32) (REDUCE (WHERE) r32) (REDUCE (WITH) r32) (SHIFT (ASTERISK) s90) (REDUCE (COLONGT) r32) (REDUCE (COMMA) r32) (REDUCE (RBRACE) r32) (REDUCE (RBRACKET) r32) (REDUCE (RPAREN) r32) (REDUCE (FUNSIG) r32) (REDUCE (WITHTYPE) r32) (REDUCE (AND) r32) (REDUCE (ARROW) r32) (REDUCE (DARROW) r32) (REDUCE (DO) r32) (REDUCE (ELSE) r32) (REDUCE (HANDLE) r32) (REDUCE (ORELSE) r32) (REDUCE (ANDALSO) r32) (REDUCE (AS) r32) (REDUCE (COLON) r32) (REDUCE (EOF) r32) (GOTO tycon s89))
    (STATE s58 (COMMENT ty "=>" tuple_ty ".") (REDUCE () r30))
    (STATE s59 (COMMENT exp "=>" exp COLON ty ".") (COMMENT ty "=>" ty "." ARROW ty) (REDUCE (SEMICOLON) r46) (REDUCE (ABSTYPE) r46) (REDUCE (BAR) r46) (REDUCE (DATATYPE) r46) (REDUCE (END) r46) (REDUCE (EXCEPTION) r46) (REDUCE (FUN) r46) (REDUCE (FUNCTOR) r46) (REDUCE (IN) r46) (REDUCE (INFIX) r46) (REDUCE (INFIXR) r46) (REDUCE (LOCAL) r46) (REDUCE (NONFIX) r46) (REDUCE (OF) r46) (REDUCE (OPEN) r46) (REDUCE (OVERLOAD) r46) (REDUCE (SIGNATURE) r46) (REDUCE (STRUCTURE) r46) (REDUCE (THEN) r46) (REDUCE (TYPE) r46) (REDUCE (VAL) r46) (REDUCE (COMMA) r46) (REDUCE (RBRACE) r46) (REDUCE (RBRACKET) r46) (REDUCE (RPAREN) r46) (REDUCE (FUNSIG) r46) (REDUCE (AND) r46) (SHIFT (ARROW) s70) (REDUCE (DO) r46) (REDUCE (ELSE) r46) (REDUCE (HANDLE) r46) (REDUCE (ORELSE) r46) (REDUCE (ANDALSO) r46) (REDUCE (COLON) r46) (REDUCE (EOF) r46))
    (STATE s60 (COMMENT tycon "=>" ID ".") (COMMENT tycon "=>" ID "." DOT tycon) (REDUCE (SEMICOLON) r17) (REDUCE (ID) r17) (REDUCE (ABSTYPE) r17) (REDUCE (BAR) r17) (REDUCE (DATATYPE) r17) (REDUCE (END) r17) (REDUCE (EQUALOP) r17) (REDUCE (EQTYPE) r17) (REDUCE (EXCEPTION) r17) (SHIFT (DOT) s87) (REDUCE (FUN) r17) (REDUCE (FUNCTOR) r17) (REDUCE (IN) r17) (REDUCE (INCLUDE) r17) (REDUCE (INFIX) r17) (REDUCE (INFIXR) r17) (REDUCE (LOCAL) r17) (REDUCE (NONFIX) r17) (REDUCE (OF) r17) (REDUCE (OPEN) r17) (REDUCE (OVERLOAD) r17) (REDUCE (SHARING) r17) (REDUCE (SIGNATURE) r17) (REDUCE (STRUCTURE) r17) (REDUCE (THEN) r17) (REDUCE (TYPE) r17) (REDUCE (VAL) r17) (REDUCE (WHERE) r17) (REDUCE (WITH) r17) (REDUCE (ASTERISK) r17) (REDUCE (COLONGT) r17) (REDUCE (COMMA) r17) (REDUCE (RBRACE) r17) (REDUCE (RBRACKET) r17) (REDUCE (RPAREN) r17) (REDUCE (FUNSIG) r17) (REDUCE (WITHTYPE) r17) (REDUCE (AND) r17) (REDUCE (ARROW) r17) (REDUCE (DARROW) r17) (REDUCE (DO) r17) (REDUCE (ELSE) r17) (REDUCE (HANDLE) r17) (REDUCE (ORELSE) r17) (REDUCE (ANDALSO) r17) (REDUCE (AS) r17) (REDUCE (COLON) r17) (REDUCE (EOF) r17))
    (STATE s61 (COMMENT ty_prime "=>" TYVAR ".") (REDUCE () r21))
    (STATE s62 (COMMENT ty_prime "=>" LBRACE "." RBRACE) (COMMENT ty_prime "=>" LBRACE "." tlabels RBRACE) (COMMENT tlabels "=>" "." tlabel) (COMMENT tlabels "=>" "." tlabel COMMA tlabels) (COMMENT tlabel "=>" "." selector COLON ty) (COMMENT selector "=>" "." INT) (COMMENT selector "=>" "." id) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (SHIFT (ID) s78) (SHIFT (INT) s79) (SHIFT (ASTERISK) s80) (SHIFT (RBRACE) s81) (GOTO id s74) (GOTO selector s75) (GOTO tlabel s76) (GOTO tlabels s77))
    (STATE s63 (COMMENT ty0_pc "=>" "." ty COMMA ty0_pc) (COMMENT ty0_pc "=>" "." ty COMMA ty) (COMMENT ty "=>" "." ty_prime) (COMMENT ty "=>" "." ty ARROW ty) (COMMENT ty "=>" "." tuple_ty) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK ty_prime) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK tuple_ty) (COMMENT ty_prime "=>" "." tycon) (COMMENT ty_prime "=>" "." ty_prime tycon) (COMMENT ty_prime "=>" LPAREN "." ty RPAREN) (COMMENT ty_prime "=>" "." LPAREN ty RPAREN) (COMMENT ty_prime "=>" LPAREN "." ty0_pc RPAREN tycon) (COMMENT ty_prime "=>" "." LPAREN ty0_pc RPAREN tycon) (COMMENT ty_prime "=>" "." LBRACE RBRACE) (COMMENT ty_prime "=>" "." LBRACE tlabels RBRACE) (COMMENT ty_prime "=>" "." TYVAR) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (SHIFT (TYVAR) s61) (SHIFT (LBRACE) s62) (SHIFT (LPAREN) s63) (GOTO tycon s56) (GOTO ty_prime s57) (GOTO tuple_ty s58) (GOTO ty s64) (GOTO ty0_pc s65))
    (STATE s64 (COMMENT ty0_pc "=>" ty "." COMMA ty0_pc) (COMMENT ty0_pc "=>" ty "." COMMA ty) (COMMENT ty "=>" ty "." ARROW ty) (COMMENT ty_prime "=>" LPAREN ty "." RPAREN) (SHIFT (COMMA) s68) (SHIFT (RPAREN) s69) (SHIFT (ARROW) s70))
    (STATE s65 (COMMENT ty_prime "=>" LPAREN ty0_pc "." RPAREN tycon) (SHIFT (RPAREN) s66))
    (STATE s66 (COMMENT ty_prime "=>" LPAREN ty0_pc RPAREN "." tycon) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (GOTO tycon s67))
    (STATE s67 (COMMENT ty_prime "=>" LPAREN ty0_pc RPAREN tycon ".") (REDUCE () r24))
    (STATE s68 (COMMENT ty0_pc "=>" ty COMMA "." ty0_pc) (COMMENT ty0_pc "=>" "." ty COMMA ty0_pc) (COMMENT ty0_pc "=>" ty COMMA "." ty) (COMMENT ty0_pc "=>" "." ty COMMA ty) (COMMENT ty "=>" "." ty_prime) (COMMENT ty "=>" "." ty ARROW ty) (COMMENT ty "=>" "." tuple_ty) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK ty_prime) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK tuple_ty) (COMMENT ty_prime "=>" "." tycon) (COMMENT ty_prime "=>" "." ty_prime tycon) (COMMENT ty_prime "=>" "." LPAREN ty RPAREN) (COMMENT ty_prime "=>" "." LPAREN ty0_pc RPAREN tycon) (COMMENT ty_prime "=>" "." LBRACE RBRACE) (COMMENT ty_prime "=>" "." LBRACE tlabels RBRACE) (COMMENT ty_prime "=>" "." TYVAR) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (SHIFT (TYVAR) s61) (SHIFT (LBRACE) s62) (SHIFT (LPAREN) s63) (GOTO tycon s56) (GOTO ty_prime s57) (GOTO tuple_ty s58) (GOTO ty s72) (GOTO ty0_pc s73))
    (STATE s69 (COMMENT ty_prime "=>" LPAREN ty RPAREN ".") (REDUCE () r25))
    (STATE s70 (COMMENT ty "=>" "." ty_prime) (COMMENT ty "=>" ty ARROW "." ty) (COMMENT ty "=>" "." ty ARROW ty) (COMMENT ty "=>" "." tuple_ty) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK ty_prime) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK tuple_ty) (COMMENT ty_prime "=>" "." tycon) (COMMENT ty_prime "=>" "." ty_prime tycon) (COMMENT ty_prime "=>" "." LPAREN ty RPAREN) (COMMENT ty_prime "=>" "." LPAREN ty0_pc RPAREN tycon) (COMMENT ty_prime "=>" "." LBRACE RBRACE) (COMMENT ty_prime "=>" "." LBRACE tlabels RBRACE) (COMMENT ty_prime "=>" "." TYVAR) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (SHIFT (TYVAR) s61) (SHIFT (LBRACE) s62) (SHIFT (LPAREN) s63) (GOTO tycon s56) (GOTO ty_prime s57) (GOTO tuple_ty s58) (GOTO ty s71))
    (STATE s71 (COMMENT ty "=>" ty ARROW ty ".") (COMMENT ty "=>" ty "." ARROW ty) (REDUCE (SEMICOLON) r31) (REDUCE (ABSTYPE) r31) (REDUCE (BAR) r31) (REDUCE (DATATYPE) r31) (REDUCE (END) r31) (REDUCE (EQUALOP) r31) (REDUCE (EQTYPE) r31) (REDUCE (EXCEPTION) r31) (REDUCE (FUN) r31) (REDUCE (FUNCTOR) r31) (REDUCE (IN) r31) (REDUCE (INCLUDE) r31) (REDUCE (INFIX) r31) (REDUCE (INFIXR) r31) (REDUCE (LOCAL) r31) (REDUCE (NONFIX) r31) (REDUCE (OF) r31) (REDUCE (OPEN) r31) (REDUCE (OVERLOAD) r31) (REDUCE (SHARING) r31) (REDUCE (SIGNATURE) r31) (REDUCE (STRUCTURE) r31) (REDUCE (THEN) r31) (REDUCE (TYPE) r31) (REDUCE (VAL) r31) (REDUCE (WHERE) r31) (REDUCE (WITH) r31) (REDUCE (COLONGT) r31) (REDUCE (COMMA) r31) (REDUCE (RBRACE) r31) (REDUCE (RBRACKET) r31) (REDUCE (RPAREN) r31) (REDUCE (FUNSIG) r31) (REDUCE (WITHTYPE) r31) (REDUCE (AND) r31) (SHIFT (ARROW) s70) (REDUCE (DARROW) r31) (REDUCE (DO) r31) (REDUCE (ELSE) r31) (REDUCE (HANDLE) r31) (REDUCE (ORELSE) r31) (REDUCE (ANDALSO) r31) (REDUCE (AS) r31) (REDUCE (COLON) r31) (REDUCE (EOF) r31))
    (STATE s72 (COMMENT ty0_pc "=>" ty "." COMMA ty0_pc) (COMMENT ty0_pc "=>" ty COMMA ty ".") (COMMENT ty0_pc "=>" ty "." COMMA ty) (COMMENT ty "=>" ty "." ARROW ty) (SHIFT (COMMA) s68) (REDUCE (RPAREN) r33) (SHIFT (ARROW) s70))
    (STATE s73 (COMMENT ty0_pc "=>" ty COMMA ty0_pc ".") (REDUCE () r34))
    (STATE s74 (COMMENT selector "=>" id ".") (REDUCE () r14))
    (STATE s75 (COMMENT tlabel "=>" selector "." COLON ty) (SHIFT (COLON) s85))
    (STATE s76 (COMMENT tlabels "=>" tlabel ".") (COMMENT tlabels "=>" tlabel "." COMMA tlabels) (SHIFT (COMMA) s83) (REDUCE (RBRACE) r20))
    (STATE s77 (COMMENT ty_prime "=>" LBRACE tlabels "." RBRACE) (SHIFT (RBRACE) s82))
    (STATE s78 (COMMENT id "=>" ID ".") (REDUCE () r5))
    (STATE s79 (COMMENT selector "=>" INT ".") (REDUCE () r15))
    (STATE s80 (COMMENT id "=>" ASTERISK ".") (REDUCE () r6))
    (STATE s81 (COMMENT ty_prime "=>" LBRACE RBRACE ".") (REDUCE () r23))
    (STATE s82 (COMMENT ty_prime "=>" LBRACE tlabels RBRACE ".") (REDUCE () r22))
    (STATE s83 (COMMENT tlabels "=>" "." tlabel) (COMMENT tlabels "=>" tlabel COMMA "." tlabels) (COMMENT tlabels "=>" "." tlabel COMMA tlabels) (COMMENT tlabel "=>" "." selector COLON ty) (COMMENT selector "=>" "." INT) (COMMENT selector "=>" "." id) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (SHIFT (ID) s78) (SHIFT (INT) s79) (SHIFT (ASTERISK) s80) (GOTO id s74) (GOTO selector s75) (GOTO tlabel s76) (GOTO tlabels s84))
    (STATE s84 (COMMENT tlabels "=>" tlabel COMMA tlabels ".") (REDUCE () r19))
    (STATE s85 (COMMENT ty "=>" "." ty_prime) (COMMENT ty "=>" "." ty ARROW ty) (COMMENT ty "=>" "." tuple_ty) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK ty_prime) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK tuple_ty) (COMMENT ty_prime "=>" "." tycon) (COMMENT ty_prime "=>" "." ty_prime tycon) (COMMENT ty_prime "=>" "." LPAREN ty RPAREN) (COMMENT ty_prime "=>" "." LPAREN ty0_pc RPAREN tycon) (COMMENT ty_prime "=>" "." LBRACE RBRACE) (COMMENT ty_prime "=>" "." LBRACE tlabels RBRACE) (COMMENT ty_prime "=>" "." TYVAR) (COMMENT tlabel "=>" selector COLON "." ty) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (SHIFT (TYVAR) s61) (SHIFT (LBRACE) s62) (SHIFT (LPAREN) s63) (GOTO tycon s56) (GOTO ty_prime s57) (GOTO tuple_ty s58) (GOTO ty s86))
    (STATE s86 (COMMENT ty "=>" ty "." ARROW ty) (COMMENT tlabel "=>" selector COLON ty ".") (REDUCE (COMMA) r18) (REDUCE (RBRACE) r18) (SHIFT (ARROW) s70))
    (STATE s87 (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" ID DOT "." tycon) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (GOTO tycon s88))
    (STATE s88 (COMMENT tycon "=>" ID DOT tycon ".") (REDUCE () r16))
    (STATE s89 (COMMENT ty_prime "=>" ty_prime tycon ".") (REDUCE () r26))
    (STATE s90 (COMMENT tuple_ty "=>" ty_prime ASTERISK "." ty_prime) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK ty_prime) (COMMENT tuple_ty "=>" ty_prime ASTERISK "." tuple_ty) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK tuple_ty) (COMMENT ty_prime "=>" "." tycon) (COMMENT ty_prime "=>" "." ty_prime tycon) (COMMENT ty_prime "=>" "." LPAREN ty RPAREN) (COMMENT ty_prime "=>" "." LPAREN ty0_pc RPAREN tycon) (COMMENT ty_prime "=>" "." LBRACE RBRACE) (COMMENT ty_prime "=>" "." LBRACE tlabels RBRACE) (COMMENT ty_prime "=>" "." TYVAR) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (SHIFT (TYVAR) s61) (SHIFT (LBRACE) s62) (SHIFT (LPAREN) s63) (GOTO tycon s56) (GOTO ty_prime s91) (GOTO tuple_ty s92))
    (STATE s91 (COMMENT tuple_ty "=>" ty_prime ASTERISK ty_prime ".") (COMMENT tuple_ty "=>" ty_prime "." ASTERISK ty_prime) (COMMENT tuple_ty "=>" ty_prime "." ASTERISK tuple_ty) (COMMENT ty_prime "=>" ty_prime "." tycon) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (REDUCE (SEMICOLON) r29) (SHIFT (ID) s60) (REDUCE (ABSTYPE) r29) (REDUCE (BAR) r29) (REDUCE (DATATYPE) r29) (REDUCE (END) r29) (REDUCE (EQUALOP) r29) (REDUCE (EQTYPE) r29) (REDUCE (EXCEPTION) r29) (REDUCE (FUN) r29) (REDUCE (FUNCTOR) r29) (REDUCE (IN) r29) (REDUCE (INCLUDE) r29) (REDUCE (INFIX) r29) (REDUCE (INFIXR) r29) (REDUCE (LOCAL) r29) (REDUCE (NONFIX) r29) (REDUCE (OF) r29) (REDUCE (OPEN) r29) (REDUCE (OVERLOAD) r29) (REDUCE (SHARING) r29) (REDUCE (SIGNATURE) r29) (REDUCE (STRUCTURE) r29) (REDUCE (THEN) r29) (REDUCE (TYPE) r29) (REDUCE (VAL) r29) (REDUCE (WHERE) r29) (REDUCE (WITH) r29) (SHIFT (ASTERISK) s90) (REDUCE (COLONGT) r29) (REDUCE (COMMA) r29) (REDUCE (RBRACE) r29) (REDUCE (RBRACKET) r29) (REDUCE (RPAREN) r29) (REDUCE (FUNSIG) r29) (REDUCE (WITHTYPE) r29) (REDUCE (AND) r29) (REDUCE (ARROW) r29) (REDUCE (DARROW) r29) (REDUCE (DO) r29) (REDUCE (ELSE) r29) (REDUCE (HANDLE) r29) (REDUCE (ORELSE) r29) (REDUCE (ANDALSO) r29) (REDUCE (AS) r29) (REDUCE (COLON) r29) (REDUCE (EOF) r29) (GOTO tycon s89))
    (STATE s92 (COMMENT tuple_ty "=>" ty_prime ASTERISK tuple_ty ".") (REDUCE () r28))
    (STATE s93 (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp ANDALSO exp ".") (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (REDUCE (SEMICOLON) r45) (REDUCE (ABSTYPE) r45) (REDUCE (BAR) r45) (REDUCE (DATATYPE) r45) (REDUCE (END) r45) (REDUCE (EXCEPTION) r45) (REDUCE (FUN) r45) (REDUCE (FUNCTOR) r45) (REDUCE (IN) r45) (REDUCE (INFIX) r45) (REDUCE (INFIXR) r45) (REDUCE (LOCAL) r45) (REDUCE (NONFIX) r45) (REDUCE (OF) r45) (REDUCE (OPEN) r45) (REDUCE (OVERLOAD) r45) (REDUCE (SIGNATURE) r45) (REDUCE (STRUCTURE) r45) (REDUCE (THEN) r45) (REDUCE (TYPE) r45) (REDUCE (VAL) r45) (REDUCE (COMMA) r45) (REDUCE (RBRACE) r45) (REDUCE (RBRACKET) r45) (REDUCE (RPAREN) r45) (REDUCE (FUNSIG) r45) (REDUCE (AND) r45) (REDUCE (DO) r45) (REDUCE (ELSE) r45) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (SHIFT (ANDALSO) s54) (REDUCE (COLON) r45) (REDUCE (EOF) r45))
    (STATE s94 (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp ORELSE exp ".") (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (REDUCE (SEMICOLON) r44) (REDUCE (ABSTYPE) r44) (REDUCE (BAR) r44) (REDUCE (DATATYPE) r44) (REDUCE (END) r44) (REDUCE (EXCEPTION) r44) (REDUCE (FUN) r44) (REDUCE (FUNCTOR) r44) (REDUCE (IN) r44) (REDUCE (INFIX) r44) (REDUCE (INFIXR) r44) (REDUCE (LOCAL) r44) (REDUCE (NONFIX) r44) (REDUCE (OF) r44) (REDUCE (OPEN) r44) (REDUCE (OVERLOAD) r44) (REDUCE (SIGNATURE) r44) (REDUCE (STRUCTURE) r44) (REDUCE (THEN) r44) (REDUCE (TYPE) r44) (REDUCE (VAL) r44) (REDUCE (COMMA) r44) (REDUCE (RBRACE) r44) (REDUCE (RBRACKET) r44) (REDUCE (RPAREN) r44) (REDUCE (FUNSIG) r44) (REDUCE (AND) r44) (REDUCE (DO) r44) (REDUCE (ELSE) r44) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (REDUCE (ANDALSO) r44) (REDUCE (COLON) r44) (REDUCE (EOF) r44))
    (STATE s95 (COMMENT apat_prime "=>" int ".") (REDUCE () r96))
    (STATE s96 (COMMENT apat "=>" id ".") (REDUCE () r90))
    (STATE s97 (COMMENT exp "=>" exp HANDLE match ".") (REDUCE () r43))
    (STATE s98 (COMMENT match "=>" rule "." BAR match) (COMMENT match "=>" rule ".") (REDUCE (SEMICOLON) r35) (REDUCE (ABSTYPE) r35) (COMMENT (REDUCE (BAR) r35)) (SHIFT (BAR) s166) (REDUCE (DATATYPE) r35) (REDUCE (END) r35) (REDUCE (EXCEPTION) r35) (REDUCE (FUN) r35) (REDUCE (FUNCTOR) r35) (REDUCE (IN) r35) (REDUCE (INFIX) r35) (REDUCE (INFIXR) r35) (REDUCE (LOCAL) r35) (REDUCE (NONFIX) r35) (REDUCE (OF) r35) (REDUCE (OPEN) r35) (REDUCE (OVERLOAD) r35) (REDUCE (SIGNATURE) r35) (REDUCE (STRUCTURE) r35) (REDUCE (THEN) r35) (REDUCE (TYPE) r35) (REDUCE (VAL) r35) (REDUCE (COMMA) r35) (REDUCE (RBRACE) r35) (REDUCE (RBRACKET) r35) (REDUCE (RPAREN) r35) (REDUCE (FUNSIG) r35) (REDUCE (AND) r35) (REDUCE (DO) r35) (REDUCE (ELSE) r35) (REDUCE (HANDLE) r35) (REDUCE (ORELSE) r35) (REDUCE (ANDALSO) r35) (REDUCE (COLON) r35) (REDUCE (EOF) r35))
    (STATE s99 (COMMENT pat "=>" pat "." COLON ty) (COMMENT pat "=>" pat "." AS pat) (COMMENT rule "=>" pat "." DARROW exp) (SHIFT (DARROW) s164) (SHIFT (AS) s118) (SHIFT (COLON) s119))
    (STATE s100 (COMMENT apats "=>" apat "." apats) (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" apat ".") (COMMENT apats "=>" "." apat) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (REDUCE (BAR) r135) (REDUCE (EQUALOP) r135) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (REDUCE (COMMA) r135) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (REDUCE (RBRACE) r135) (REDUCE (RBRACKET) r135) (REDUCE (RPAREN) r135) (SHIFT (VECTORSTART) s112) (REDUCE (DARROW) r135) (REDUCE (AS) r135) (REDUCE (COLON) r135) (GOTO int s95) (GOTO id s96) (GOTO apat s100) (GOTO apat_prime s101) (GOTO apats s163))
    (STATE s101 (COMMENT apat "=>" apat_prime ".") (REDUCE () r88))
    (STATE s102 (COMMENT pat "=>" apats ".") (REDUCE () r87))
    (STATE s103 (COMMENT apat_prime "=>" ID "." DOT qid) (COMMENT id "=>" ID ".") (REDUCE (ID) r5) (REDUCE (INT) r5) (REDUCE (INT0) r5) (REDUCE (WORD) r5) (REDUCE (STRING) r5) (REDUCE (CHAR) r5) (REDUCE (BAR) r5) (REDUCE (EQUALOP) r5) (SHIFT (DOT) s157) (REDUCE (OP) r5) (REDUCE (WILD) r5) (REDUCE (ASTERISK) r5) (REDUCE (COMMA) r5) (REDUCE (LBRACE) r5) (REDUCE (LBRACKET) r5) (REDUCE (LPAREN) r5) (REDUCE (RBRACE) r5) (REDUCE (RBRACKET) r5) (REDUCE (RPAREN) r5) (REDUCE (VECTORSTART) r5) (REDUCE (DARROW) r5) (REDUCE (AS) r5) (REDUCE (COLON) r5))
    (STATE s104 (COMMENT apat_prime "=>" WORD ".") (REDUCE () r97))
    (STATE s105 (COMMENT apat_prime "=>" STRING ".") (REDUCE () r98))
    (STATE s106 (COMMENT apat_prime "=>" CHAR ".") (REDUCE () r99))
    (STATE s107 (COMMENT apat_prime "=>" OP "." ident) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s155))
    (STATE s108 (COMMENT apat_prime "=>" WILD ".") (REDUCE () r100))
    (STATE s109 (COMMENT plabels "=>" "." DOTDOTDOT) (COMMENT plabels "=>" "." plabel) (COMMENT plabels "=>" "." plabel COMMA plabels) (COMMENT plabel "=>" "." ID COLON ty AS pat) (COMMENT plabel "=>" "." ID COLON ty) (COMMENT plabel "=>" "." ID AS pat) (COMMENT plabel "=>" "." ID) (COMMENT plabel "=>" "." selector EQUALOP pat) (COMMENT apat_prime "=>" LBRACE "." plabels RBRACE) (COMMENT apat_prime "=>" LBRACE "." RBRACE) (COMMENT selector "=>" "." INT) (COMMENT selector "=>" "." id) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (SHIFT (ID) s141) (SHIFT (INT) s79) (SHIFT (DOTDOTDOT) s142) (SHIFT (ASTERISK) s80) (SHIFT (RBRACE) s143) (GOTO id s74) (GOTO selector s138) (GOTO plabel s139) (GOTO plabels s140))
    (STATE s110 (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT pat_list "=>" "." pat COMMA pat_list) (COMMENT pat_list "=>" "." pat) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" LBRACKET "." pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" LBRACKET "." RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" "." pat AS pat) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (RBRACKET) s136) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO pat s113) (GOTO apat s100) (GOTO apat_prime s101) (GOTO pat_list s135) (GOTO apats s102))
    (STATE s111 (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" LPAREN "." pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" LPAREN "." pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" LPAREN "." RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" LPAREN "." pat RPAREN) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" "." pat AS pat) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (RPAREN) s124) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO pat s123) (GOTO apat s100) (GOTO apat_prime s101) (GOTO apats s102))
    (STATE s112 (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT pat_list "=>" "." pat COMMA pat_list) (COMMENT pat_list "=>" "." pat) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" VECTORSTART "." pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" VECTORSTART "." RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" "." pat AS pat) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (RBRACKET) s115) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO pat s113) (GOTO apat s100) (GOTO apat_prime s101) (GOTO pat_list s114) (GOTO apats s102))
    (STATE s113 (COMMENT pat_list "=>" pat "." COMMA pat_list) (COMMENT pat_list "=>" pat ".") (COMMENT pat "=>" pat "." COLON ty) (COMMENT pat "=>" pat "." AS pat) (SHIFT (COMMA) s117) (REDUCE (RBRACKET) r115) (REDUCE (RPAREN) r115) (SHIFT (AS) s118) (SHIFT (COLON) s119))
    (STATE s114 (COMMENT apat_prime "=>" VECTORSTART pat_list "." RBRACKET) (SHIFT (RBRACKET) s116))
    (STATE s115 (COMMENT apat_prime "=>" VECTORSTART RBRACKET ".") (REDUCE () r103))
    (STATE s116 (COMMENT apat_prime "=>" VECTORSTART pat_list RBRACKET ".") (REDUCE () r104))
    (STATE s117 (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT pat_list "=>" pat COMMA "." pat_list) (COMMENT pat_list "=>" "." pat COMMA pat_list) (COMMENT pat_list "=>" "." pat) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" "." pat AS pat) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO pat s113) (GOTO apat s100) (GOTO apat_prime s101) (GOTO pat_list s122) (GOTO apats s102))
    (STATE s118 (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" pat AS "." pat) (COMMENT pat "=>" "." pat AS pat) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO pat s121) (GOTO apat s100) (GOTO apat_prime s101) (GOTO apats s102))
    (STATE s119 (COMMENT pat "=>" pat COLON "." ty) (COMMENT ty "=>" "." ty_prime) (COMMENT ty "=>" "." ty ARROW ty) (COMMENT ty "=>" "." tuple_ty) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK ty_prime) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK tuple_ty) (COMMENT ty_prime "=>" "." tycon) (COMMENT ty_prime "=>" "." ty_prime tycon) (COMMENT ty_prime "=>" "." LPAREN ty RPAREN) (COMMENT ty_prime "=>" "." LPAREN ty0_pc RPAREN tycon) (COMMENT ty_prime "=>" "." LBRACE RBRACE) (COMMENT ty_prime "=>" "." LBRACE tlabels RBRACE) (COMMENT ty_prime "=>" "." TYVAR) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (SHIFT (TYVAR) s61) (SHIFT (LBRACE) s62) (SHIFT (LPAREN) s63) (GOTO tycon s56) (GOTO ty_prime s57) (GOTO tuple_ty s58) (GOTO ty s120))
    (STATE s120 (COMMENT pat "=>" pat COLON ty ".") (COMMENT ty "=>" ty "." ARROW ty) (REDUCE (BAR) r86) (REDUCE (EQUALOP) r86) (REDUCE (COMMA) r86) (REDUCE (RBRACE) r86) (REDUCE (RBRACKET) r86) (REDUCE (RPAREN) r86) (SHIFT (ARROW) s70) (REDUCE (DARROW) r86) (REDUCE (AS) r86) (REDUCE (COLON) r86))
    (STATE s121 (COMMENT pat "=>" pat "." COLON ty) (COMMENT pat "=>" pat AS pat ".") (COMMENT pat "=>" pat "." AS pat) (REDUCE (BAR) r85) (REDUCE (EQUALOP) r85) (REDUCE (COMMA) r85) (REDUCE (RBRACE) r85) (REDUCE (RBRACKET) r85) (REDUCE (RPAREN) r85) (REDUCE (DARROW) r85) (SHIFT (AS) s118) (REDUCE (COLON) r85))
    (STATE s122 (COMMENT pat_list "=>" pat COMMA pat_list ".") (REDUCE () r116))
    (STATE s123 (COMMENT apat "=>" LPAREN pat "." BAR or_pat_list RPAREN) (COMMENT apat "=>" LPAREN pat "." COMMA pat_list RPAREN) (COMMENT apat "=>" LPAREN pat "." RPAREN) (COMMENT pat "=>" pat "." COLON ty) (COMMENT pat "=>" pat "." AS pat) (SHIFT (BAR) s125) (SHIFT (COMMA) s126) (SHIFT (RPAREN) s127) (SHIFT (AS) s118) (SHIFT (COLON) s119))
    (STATE s124 (COMMENT apat "=>" LPAREN RPAREN ".") (REDUCE () r91))
    (STATE s125 (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT or_pat_list "=>" "." pat BAR or_pat_list) (COMMENT or_pat_list "=>" "." pat) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" LPAREN pat BAR "." or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" "." pat AS pat) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO pat s130) (GOTO apat s100) (GOTO apat_prime s101) (GOTO or_pat_list s131) (GOTO apats s102))
    (STATE s126 (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT pat_list "=>" "." pat COMMA pat_list) (COMMENT pat_list "=>" "." pat) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" LPAREN pat COMMA "." pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" "." pat AS pat) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO pat s113) (GOTO apat s100) (GOTO apat_prime s101) (GOTO pat_list s128) (GOTO apats s102))
    (STATE s127 (COMMENT apat "=>" LPAREN pat RPAREN ".") (REDUCE () r89))
    (STATE s128 (COMMENT apat "=>" LPAREN pat COMMA pat_list "." RPAREN) (SHIFT (RPAREN) s129))
    (STATE s129 (COMMENT apat "=>" LPAREN pat COMMA pat_list RPAREN ".") (REDUCE () r92))
    (STATE s130 (COMMENT or_pat_list "=>" pat "." BAR or_pat_list) (COMMENT or_pat_list "=>" pat ".") (COMMENT pat "=>" pat "." COLON ty) (COMMENT pat "=>" pat "." AS pat) (SHIFT (BAR) s133) (REDUCE (RPAREN) r117) (SHIFT (AS) s118) (SHIFT (COLON) s119))
    (STATE s131 (COMMENT apat "=>" LPAREN pat BAR or_pat_list "." RPAREN) (SHIFT (RPAREN) s132))
    (STATE s132 (COMMENT apat "=>" LPAREN pat BAR or_pat_list RPAREN ".") (REDUCE () r93))
    (STATE s133 (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT or_pat_list "=>" pat BAR "." or_pat_list) (COMMENT or_pat_list "=>" "." pat BAR or_pat_list) (COMMENT or_pat_list "=>" "." pat) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" "." pat AS pat) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO pat s130) (GOTO apat s100) (GOTO apat_prime s101) (GOTO or_pat_list s134) (GOTO apats s102))
    (STATE s134 (COMMENT or_pat_list "=>" pat BAR or_pat_list ".") (REDUCE () r118))
    (STATE s135 (COMMENT apat_prime "=>" LBRACKET pat_list "." RBRACKET) (SHIFT (RBRACKET) s137))
    (STATE s136 (COMMENT apat_prime "=>" LBRACKET RBRACKET ".") (REDUCE () r101))
    (STATE s137 (COMMENT apat_prime "=>" LBRACKET pat_list RBRACKET ".") (REDUCE () r102))
    (STATE s138 (COMMENT plabel "=>" selector "." EQUALOP pat) (SHIFT (EQUALOP) s153))
    (STATE s139 (COMMENT plabels "=>" plabel ".") (COMMENT plabels "=>" plabel "." COMMA plabels) (SHIFT (COMMA) s151) (REDUCE (RBRACE) r113))
    (STATE s140 (COMMENT apat_prime "=>" LBRACE plabels "." RBRACE) (SHIFT (RBRACE) s150))
    (STATE s141 (COMMENT plabel "=>" ID "." COLON ty AS pat) (COMMENT plabel "=>" ID "." COLON ty) (COMMENT plabel "=>" ID "." AS pat) (COMMENT plabel "=>" ID ".") (COMMENT id "=>" ID ".") (REDUCE (EQUALOP) r5) (REDUCE (COMMA) r108) (REDUCE (RBRACE) r108) (SHIFT (AS) s144) (SHIFT (COLON) s145))
    (STATE s142 (COMMENT plabels "=>" DOTDOTDOT ".") (REDUCE () r114))
    (STATE s143 (COMMENT apat_prime "=>" LBRACE RBRACE ".") (REDUCE () r105))
    (STATE s144 (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT plabel "=>" ID AS "." pat) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" "." pat AS pat) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO pat s149) (GOTO apat s100) (GOTO apat_prime s101) (GOTO apats s102))
    (STATE s145 (COMMENT plabel "=>" ID COLON "." ty AS pat) (COMMENT plabel "=>" ID COLON "." ty) (COMMENT ty "=>" "." ty_prime) (COMMENT ty "=>" "." ty ARROW ty) (COMMENT ty "=>" "." tuple_ty) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK ty_prime) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK tuple_ty) (COMMENT ty_prime "=>" "." tycon) (COMMENT ty_prime "=>" "." ty_prime tycon) (COMMENT ty_prime "=>" "." LPAREN ty RPAREN) (COMMENT ty_prime "=>" "." LPAREN ty0_pc RPAREN tycon) (COMMENT ty_prime "=>" "." LBRACE RBRACE) (COMMENT ty_prime "=>" "." LBRACE tlabels RBRACE) (COMMENT ty_prime "=>" "." TYVAR) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (SHIFT (TYVAR) s61) (SHIFT (LBRACE) s62) (SHIFT (LPAREN) s63) (GOTO tycon s56) (GOTO ty_prime s57) (GOTO tuple_ty s58) (GOTO ty s146))
    (STATE s146 (COMMENT plabel "=>" ID COLON ty "." AS pat) (COMMENT plabel "=>" ID COLON ty ".") (COMMENT ty "=>" ty "." ARROW ty) (REDUCE (COMMA) r110) (REDUCE (RBRACE) r110) (SHIFT (ARROW) s70) (SHIFT (AS) s147))
    (STATE s147 (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT plabel "=>" ID COLON ty AS "." pat) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" "." pat AS pat) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO pat s148) (GOTO apat s100) (GOTO apat_prime s101) (GOTO apats s102))
    (STATE s148 (COMMENT plabel "=>" ID COLON ty AS pat ".") (COMMENT pat "=>" pat "." COLON ty) (COMMENT pat "=>" pat "." AS pat) (REDUCE (COMMA) r111) (REDUCE (RBRACE) r111) (SHIFT (AS) s118) (SHIFT (COLON) s119))
    (STATE s149 (COMMENT plabel "=>" ID AS pat ".") (COMMENT pat "=>" pat "." COLON ty) (COMMENT pat "=>" pat "." AS pat) (REDUCE (COMMA) r109) (REDUCE (RBRACE) r109) (SHIFT (AS) s118) (SHIFT (COLON) s119))
    (STATE s150 (COMMENT apat_prime "=>" LBRACE plabels RBRACE ".") (REDUCE () r106))
    (STATE s151 (COMMENT plabels "=>" "." DOTDOTDOT) (COMMENT plabels "=>" "." plabel) (COMMENT plabels "=>" plabel COMMA "." plabels) (COMMENT plabels "=>" "." plabel COMMA plabels) (COMMENT plabel "=>" "." ID COLON ty AS pat) (COMMENT plabel "=>" "." ID COLON ty) (COMMENT plabel "=>" "." ID AS pat) (COMMENT plabel "=>" "." ID) (COMMENT plabel "=>" "." selector EQUALOP pat) (COMMENT selector "=>" "." INT) (COMMENT selector "=>" "." id) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (SHIFT (ID) s141) (SHIFT (INT) s79) (SHIFT (DOTDOTDOT) s142) (SHIFT (ASTERISK) s80) (GOTO id s74) (GOTO selector s138) (GOTO plabel s139) (GOTO plabels s152))
    (STATE s152 (COMMENT plabels "=>" plabel COMMA plabels ".") (REDUCE () r112))
    (STATE s153 (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT plabel "=>" selector EQUALOP "." pat) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" "." pat AS pat) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO pat s154) (GOTO apat s100) (GOTO apat_prime s101) (GOTO apats s102))
    (STATE s154 (COMMENT plabel "=>" selector EQUALOP pat ".") (COMMENT pat "=>" pat "." COLON ty) (COMMENT pat "=>" pat "." AS pat) (REDUCE (COMMA) r107) (REDUCE (RBRACE) r107) (SHIFT (AS) s118) (SHIFT (COLON) s119))
    (STATE s155 (COMMENT apat_prime "=>" OP ident ".") (REDUCE () r94))
    (STATE s156 (COMMENT ident "=>" ID ".") (REDUCE () r7))
    (STATE s157 (COMMENT apat_prime "=>" ID DOT "." qid) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s160) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s158) (GOTO qid s159))
    (STATE s158 (COMMENT qid "=>" ident ".") (REDUCE () r13))
    (STATE s159 (COMMENT apat_prime "=>" ID DOT qid ".") (REDUCE () r95))
    (STATE s160 (COMMENT qid "=>" ID "." DOT qid) (COMMENT ident "=>" ID ".") (REDUCE (SEMICOLON) r7) (REDUCE (ID) r7) (REDUCE (INT) r7) (REDUCE (INT0) r7) (REDUCE (WORD) r7) (REDUCE (REAL) r7) (REDUCE (STRING) r7) (REDUCE (CHAR) r7) (REDUCE (ABSTYPE) r7) (REDUCE (BAR) r7) (REDUCE (DATATYPE) r7) (REDUCE (END) r7) (REDUCE (EQUALOP) r7) (REDUCE (EQTYPE) r7) (REDUCE (EXCEPTION) r7) (SHIFT (DOT) s161) (REDUCE (FUN) r7) (REDUCE (FUNCTOR) r7) (REDUCE (HASH) r7) (REDUCE (IN) r7) (REDUCE (INCLUDE) r7) (REDUCE (INFIX) r7) (REDUCE (INFIXR) r7) (REDUCE (LET) r7) (REDUCE (LOCAL) r7) (REDUCE (NONFIX) r7) (REDUCE (OF) r7) (REDUCE (OP) r7) (REDUCE (OPEN) r7) (REDUCE (OVERLOAD) r7) (REDUCE (SHARING) r7) (REDUCE (SIGNATURE) r7) (REDUCE (STRUCTURE) r7) (REDUCE (THEN) r7) (REDUCE (TYPE) r7) (REDUCE (VAL) r7) (REDUCE (WHERE) r7) (REDUCE (WILD) r7) (REDUCE (ASTERISK) r7) (REDUCE (COLONGT) r7) (REDUCE (COMMA) r7) (REDUCE (LBRACE) r7) (REDUCE (LBRACKET) r7) (REDUCE (LPAREN) r7) (REDUCE (RBRACE) r7) (REDUCE (RBRACKET) r7) (REDUCE (RPAREN) r7) (REDUCE (FUNSIG) r7) (REDUCE (VECTORSTART) r7) (REDUCE (BEGINQ) r7) (REDUCE (ENDQ) r7) (REDUCE (OBJL) r7) (REDUCE (AQID) r7) (REDUCE (AND) r7) (REDUCE (DARROW) r7) (REDUCE (DO) r7) (REDUCE (ELSE) r7) (REDUCE (HANDLE) r7) (REDUCE (ORELSE) r7) (REDUCE (ANDALSO) r7) (REDUCE (AS) r7) (REDUCE (COLON) r7) (REDUCE (EOF) r7))
    (STATE s161 (COMMENT qid "=>" "." ident) (COMMENT qid "=>" ID DOT "." qid) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s160) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s158) (GOTO qid s162))
    (STATE s162 (COMMENT qid "=>" ID DOT qid ".") (REDUCE () r12))
    (STATE s163 (COMMENT apats "=>" apat apats ".") (REDUCE () r136))
    (STATE s164 (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT rule "=>" pat DARROW "." exp) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s165) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6))
    (STATE s165 (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (COMMENT rule "=>" pat DARROW exp ".") (REDUCE (SEMICOLON) r37) (REDUCE (ABSTYPE) r37) (REDUCE (BAR) r37) (REDUCE (DATATYPE) r37) (REDUCE (END) r37) (REDUCE (EXCEPTION) r37) (REDUCE (FUN) r37) (REDUCE (FUNCTOR) r37) (REDUCE (IN) r37) (REDUCE (INFIX) r37) (REDUCE (INFIXR) r37) (REDUCE (LOCAL) r37) (REDUCE (NONFIX) r37) (REDUCE (OF) r37) (REDUCE (OPEN) r37) (REDUCE (OVERLOAD) r37) (REDUCE (SIGNATURE) r37) (REDUCE (STRUCTURE) r37) (REDUCE (THEN) r37) (REDUCE (TYPE) r37) (REDUCE (VAL) r37) (REDUCE (COMMA) r37) (REDUCE (RBRACE) r37) (REDUCE (RBRACKET) r37) (REDUCE (RPAREN) r37) (REDUCE (FUNSIG) r37) (REDUCE (AND) r37) (REDUCE (DO) r37) (REDUCE (ELSE) r37) (REDUCE (HANDLE) r37) (REDUCE (ORELSE) r37) (REDUCE (ANDALSO) r37) (REDUCE (COLON) r37) (REDUCE (EOF) r37))
    (STATE s166 (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" "." pat AS pat) (COMMENT rule "=>" "." pat DARROW exp) (COMMENT match "=>" rule BAR "." match) (COMMENT match "=>" "." rule BAR match) (COMMENT match "=>" "." rule) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO match s167) (GOTO rule s98) (GOTO pat s99) (GOTO apat s100) (GOTO apat_prime s101) (GOTO apats s102))
    (STATE s167 (COMMENT match "=>" rule BAR match ".") (REDUCE () r36))
    (STATE s168 (COMMENT quote "=>" BEGINQ ot_list "." ENDQ) (SHIFT (ENDQ) s176))
    (STATE s169 (COMMENT quote "=>" BEGINQ ENDQ ".") (REDUCE () r77))
    (STATE s170 (COMMENT ot_list "=>" OBJL "." aexp ot_list) (COMMENT ot_list "=>" OBJL "." aexp) (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s172) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (HASH) s27) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (GOTO int s1) (GOTO aexp s171) (GOTO quote s6))
    (STATE s171 (COMMENT ot_list "=>" OBJL aexp "." ot_list) (COMMENT ot_list "=>" "." OBJL aexp ot_list) (COMMENT ot_list "=>" OBJL aexp ".") (COMMENT ot_list "=>" "." OBJL aexp) (REDUCE (ENDQ) r79) (SHIFT (OBJL) s170) (GOTO ot_list s175))
    (STATE s172 (COMMENT aexp "=>" ID "." DOT qid) (SHIFT (DOT) s173))
    (STATE s173 (COMMENT aexp "=>" ID DOT "." qid) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s160) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s158) (GOTO qid s174))
    (STATE s174 (COMMENT aexp "=>" ID DOT qid ".") (REDUCE () r58))
    (STATE s175 (COMMENT ot_list "=>" OBJL aexp ot_list ".") (REDUCE () r80))
    (STATE s176 (COMMENT quote "=>" BEGINQ ot_list ENDQ ".") (REDUCE () r78))
    (STATE s177 (COMMENT exp_list "=>" exp "." COMMA exp_list) (COMMENT exp_list "=>" exp ".") (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (SHIFT (COMMA) s181) (REDUCE (RBRACKET) r83) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (SHIFT (ANDALSO) s54) (SHIFT (COLON) s55))
    (STATE s178 (COMMENT aexp "=>" VECTORSTART exp_list "." RBRACKET) (SHIFT (RBRACKET) s180))
    (STATE s179 (COMMENT aexp "=>" VECTORSTART RBRACKET ".") (REDUCE () r73))
    (STATE s180 (COMMENT aexp "=>" VECTORSTART exp_list RBRACKET ".") (REDUCE () r72))
    (STATE s181 (COMMENT exp_list "=>" exp COMMA "." exp_list) (COMMENT exp_list "=>" "." exp COMMA exp_list) (COMMENT exp_list "=>" "." exp) (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s177) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6) (GOTO exp_list s182))
    (STATE s182 (COMMENT exp_list "=>" exp COMMA exp_list ".") (REDUCE () r84))
    (STATE s183 (COMMENT fparamList "=>" "." LPAREN fparam RPAREN fparamList) (COMMENT fparamList "=>" "." LPAREN fparam RPAREN) (COMMENT fsigb "=>" ident "." fparamList EQUALOP sign) (SHIFT (LPAREN) s188) (GOTO fparamList s187))
    (STATE s184 (COMMENT sdec "=>" FUNSIG fsigb ".") (COMMENT fsigb "=>" fsigb "." AND fsigb) (REDUCE (SEMICOLON) r269) (REDUCE (ABSTYPE) r269) (REDUCE (DATATYPE) r269) (REDUCE (END) r269) (REDUCE (EXCEPTION) r269) (REDUCE (FUN) r269) (REDUCE (FUNCTOR) r269) (REDUCE (IN) r269) (REDUCE (INFIX) r269) (REDUCE (INFIXR) r269) (REDUCE (LOCAL) r269) (REDUCE (NONFIX) r269) (REDUCE (OPEN) r269) (REDUCE (OVERLOAD) r269) (REDUCE (SIGNATURE) r269) (REDUCE (STRUCTURE) r269) (REDUCE (TYPE) r269) (REDUCE (VAL) r269) (REDUCE (FUNSIG) r269) (SHIFT (AND) s185) (REDUCE (EOF) r269))
    (STATE s185 (COMMENT fsigb "=>" "." ident fparamList EQUALOP sign) (COMMENT fsigb "=>" fsigb AND "." fsigb) (COMMENT fsigb "=>" "." fsigb AND fsigb) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s183) (GOTO fsigb s186))
    (STATE s186 (COMMENT fsigb "=>" fsigb AND fsigb ".") (COMMENT fsigb "=>" fsigb "." AND fsigb) (REDUCE (SEMICOLON) r241) (REDUCE (ABSTYPE) r241) (REDUCE (DATATYPE) r241) (REDUCE (END) r241) (REDUCE (EXCEPTION) r241) (REDUCE (FUN) r241) (REDUCE (FUNCTOR) r241) (REDUCE (IN) r241) (REDUCE (INFIX) r241) (REDUCE (INFIXR) r241) (REDUCE (LOCAL) r241) (REDUCE (NONFIX) r241) (REDUCE (OPEN) r241) (REDUCE (OVERLOAD) r241) (REDUCE (SIGNATURE) r241) (REDUCE (STRUCTURE) r241) (REDUCE (TYPE) r241) (REDUCE (VAL) r241) (REDUCE (FUNSIG) r241) (SHIFT (AND) s185) (REDUCE (EOF) r241))
    (STATE s187 (COMMENT fsigb "=>" ident fparamList "." EQUALOP sign) (SHIFT (EQUALOP) s327))
    (STATE s188 (COMMENT fparamList "=>" LPAREN "." fparam RPAREN fparamList) (COMMENT fparamList "=>" LPAREN "." fparam RPAREN) (COMMENT fparam "=>" "." spec_s) (COMMENT fparam "=>" "." ID COLON sign) (COMMENT spec "=>" "." INCLUDE ident idents) (COMMENT spec "=>" "." INCLUDE sign) (COMMENT spec "=>" "." SHARING sharespec) (COMMENT spec "=>" "." EXCEPTION exnspec) (COMMENT spec "=>" "." VAL valspec) (COMMENT spec "=>" "." EQTYPE tyspec) (COMMENT spec "=>" "." TYPE tyspec) (COMMENT spec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT spec "=>" "." DATATYPE dbs) (COMMENT spec "=>" "." DATATYPE dtrepl) (COMMENT spec "=>" "." FUNCTOR fctspec) (COMMENT spec "=>" "." STRUCTURE strspec) (COMMENT spec_s "=>" "." SEMICOLON spec_s) (COMMENT spec_s "=>" "." spec spec_s) (COMMENT spec_s "=>" ".") (SHIFT (SEMICOLON) s192) (SHIFT (ID) s193) (SHIFT (DATATYPE) s194) (SHIFT (EQTYPE) s195) (SHIFT (EXCEPTION) s196) (SHIFT (FUNCTOR) s197) (SHIFT (INCLUDE) s198) (SHIFT (SHARING) s199) (SHIFT (STRUCTURE) s200) (SHIFT (TYPE) s201) (SHIFT (VAL) s202) (REDUCE (RPAREN) r192) (GOTO spec_s s189) (GOTO spec s190) (GOTO fparam s191))
    (STATE s189 (COMMENT fparam "=>" spec_s ".") (REDUCE () r276))
    (STATE s190 (COMMENT spec "=>" "." INCLUDE ident idents) (COMMENT spec "=>" "." INCLUDE sign) (COMMENT spec "=>" "." SHARING sharespec) (COMMENT spec "=>" "." EXCEPTION exnspec) (COMMENT spec "=>" "." VAL valspec) (COMMENT spec "=>" "." EQTYPE tyspec) (COMMENT spec "=>" "." TYPE tyspec) (COMMENT spec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT spec "=>" "." DATATYPE dbs) (COMMENT spec "=>" "." DATATYPE dtrepl) (COMMENT spec "=>" "." FUNCTOR fctspec) (COMMENT spec "=>" "." STRUCTURE strspec) (COMMENT spec_s "=>" "." SEMICOLON spec_s) (COMMENT spec_s "=>" spec "." spec_s) (COMMENT spec_s "=>" "." spec spec_s) (COMMENT spec_s "=>" ".") (SHIFT (SEMICOLON) s192) (SHIFT (DATATYPE) s194) (REDUCE (END) r192) (SHIFT (EQTYPE) s195) (SHIFT (EXCEPTION) s196) (SHIFT (FUNCTOR) s197) (SHIFT (INCLUDE) s198) (SHIFT (SHARING) s199) (SHIFT (STRUCTURE) s200) (SHIFT (TYPE) s201) (SHIFT (VAL) s202) (REDUCE (RPAREN) r192) (GOTO spec_s s326) (GOTO spec s190))
    (STATE s191 (COMMENT fparamList "=>" LPAREN fparam "." RPAREN fparamList) (COMMENT fparamList "=>" LPAREN fparam "." RPAREN) (SHIFT (RPAREN) s324))
    (STATE s192 (COMMENT spec "=>" "." INCLUDE ident idents) (COMMENT spec "=>" "." INCLUDE sign) (COMMENT spec "=>" "." SHARING sharespec) (COMMENT spec "=>" "." EXCEPTION exnspec) (COMMENT spec "=>" "." VAL valspec) (COMMENT spec "=>" "." EQTYPE tyspec) (COMMENT spec "=>" "." TYPE tyspec) (COMMENT spec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT spec "=>" "." DATATYPE dbs) (COMMENT spec "=>" "." DATATYPE dtrepl) (COMMENT spec "=>" "." FUNCTOR fctspec) (COMMENT spec "=>" "." STRUCTURE strspec) (COMMENT spec_s "=>" SEMICOLON "." spec_s) (COMMENT spec_s "=>" "." SEMICOLON spec_s) (COMMENT spec_s "=>" "." spec spec_s) (COMMENT spec_s "=>" ".") (SHIFT (SEMICOLON) s192) (SHIFT (DATATYPE) s194) (REDUCE (END) r192) (SHIFT (EQTYPE) s195) (SHIFT (EXCEPTION) s196) (SHIFT (FUNCTOR) s197) (SHIFT (INCLUDE) s198) (SHIFT (SHARING) s199) (SHIFT (STRUCTURE) s200) (SHIFT (TYPE) s201) (SHIFT (VAL) s202) (REDUCE (RPAREN) r192) (GOTO spec_s s323) (GOTO spec s190))
    (STATE s193 (COMMENT fparam "=>" ID "." COLON sign) (SHIFT (COLON) s321))
    (STATE s194 (COMMENT spec "=>" DATATYPE "." dbs WITHTYPE tb) (COMMENT spec "=>" DATATYPE "." dbs) (COMMENT spec "=>" DATATYPE "." dtrepl) (COMMENT db "=>" "." LAZY tyvars ID EQUALOP constrs) (COMMENT db "=>" "." tyvarseq ID EQUALOP constrs) (COMMENT db "=>" "." ID EQUALOP constrs) (COMMENT dbs "=>" "." db AND dbs) (COMMENT dbs "=>" "." db) (COMMENT dtrepl "=>" "." ID EQUALOP DATATYPE tycon) (COMMENT tyvarseq "=>" "." LPAREN tyvar_pc RPAREN) (COMMENT tyvarseq "=>" "." TYVAR) (SHIFT (ID) s285) (SHIFT (TYVAR) s286) (SHIFT (LAZY) s287) (SHIFT (LPAREN) s288) (GOTO tyvarseq s281) (GOTO dtrepl s282) (GOTO dbs s283) (GOTO db s284))
    (STATE s195 (COMMENT tyspec "=>" "." tyvars ID EQUALOP ty) (COMMENT tyspec "=>" "." tyvars ID) (COMMENT tyspec "=>" "." tyspec AND tyspec) (COMMENT spec "=>" EQTYPE "." tyspec) (COMMENT tyvars "=>" ".") (COMMENT tyvars "=>" "." LPAREN tyvar_pc RPAREN) (COMMENT tyvars "=>" "." TYVAR) (REDUCE (ID) r142) (SHIFT (TYVAR) s213) (SHIFT (LPAREN) s214) (GOTO tyvars s211) (GOTO tyspec s280))
    (STATE s196 (COMMENT exnspec "=>" "." ident OF ty) (COMMENT exnspec "=>" "." ident) (COMMENT exnspec "=>" "." exnspec AND exnspec) (COMMENT spec "=>" EXCEPTION "." exnspec) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s274) (GOTO exnspec s275))
    (STATE s197 (COMMENT fctspec "=>" "." ident fsig) (COMMENT fctspec "=>" "." fctspec AND fctspec) (COMMENT spec "=>" FUNCTOR "." fctspec) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s264) (GOTO fctspec s265))
    (STATE s198 (COMMENT sign "=>" "." sign WHERE whspec) (COMMENT sign "=>" "." SIG spec_s END) (COMMENT sign "=>" "." ident) (COMMENT spec "=>" INCLUDE "." ident idents) (COMMENT spec "=>" INCLUDE "." sign) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (SIG) s232) (SHIFT (ASTERISK) s42) (GOTO ident s259) (GOTO sign s260))
    (STATE s199 (COMMENT patheqn "=>" "." qid EQUALOP patheqn) (COMMENT patheqn "=>" "." qid EQUALOP qid) (COMMENT sharespec "=>" "." patheqn) (COMMENT sharespec "=>" "." TYPE patheqn) (COMMENT sharespec "=>" "." sharespec AND sharespec) (COMMENT spec "=>" SHARING "." sharespec) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s160) (SHIFT (EQUALOP) s22) (SHIFT (TYPE) s252) (SHIFT (ASTERISK) s42) (GOTO ident s158) (GOTO qid s249) (GOTO sharespec s250) (GOTO patheqn s251))
    (STATE s200 (COMMENT strspec "=>" "." ident COLON sign EQUALOP qid) (COMMENT strspec "=>" "." ident COLON sign) (COMMENT strspec "=>" "." strspec AND strspec) (COMMENT spec "=>" STRUCTURE "." strspec) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s225) (GOTO strspec s226))
    (STATE s201 (COMMENT tyspec "=>" "." tyvars ID EQUALOP ty) (COMMENT tyspec "=>" "." tyvars ID) (COMMENT tyspec "=>" "." tyspec AND tyspec) (COMMENT spec "=>" TYPE "." tyspec) (COMMENT tyvars "=>" ".") (COMMENT tyvars "=>" "." LPAREN tyvar_pc RPAREN) (COMMENT tyvars "=>" "." TYVAR) (REDUCE (ID) r142) (SHIFT (TYVAR) s213) (SHIFT (LPAREN) s214) (GOTO tyvars s211) (GOTO tyspec s212))
    (STATE s202 (COMMENT valspec "=>" "." op_op ident COLON ty) (COMMENT valspec "=>" "." valspec AND valspec) (COMMENT spec "=>" VAL "." valspec) (COMMENT op_op "=>" ".") (COMMENT op_op "=>" "." OP) (REDUCE (ID) r11) (REDUCE (EQUALOP) r11) (SHIFT (OP) s205) (REDUCE (ASTERISK) r11) (GOTO op_op s203) (GOTO valspec s204))
    (STATE s203 (COMMENT valspec "=>" op_op "." ident COLON ty) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s208))
    (STATE s204 (COMMENT valspec "=>" valspec "." AND valspec) (COMMENT spec "=>" VAL valspec ".") (REDUCE (SEMICOLON) r202) (REDUCE (DATATYPE) r202) (REDUCE (END) r202) (REDUCE (EQTYPE) r202) (REDUCE (EXCEPTION) r202) (REDUCE (FUNCTOR) r202) (REDUCE (INCLUDE) r202) (REDUCE (SHARING) r202) (REDUCE (STRUCTURE) r202) (REDUCE (TYPE) r202) (REDUCE (VAL) r202) (REDUCE (RPAREN) r202) (SHIFT (AND) s206))
    (STATE s205 (COMMENT op_op "=>" OP ".") (REDUCE () r10))
    (STATE s206 (COMMENT valspec "=>" "." op_op ident COLON ty) (COMMENT valspec "=>" valspec AND "." valspec) (COMMENT valspec "=>" "." valspec AND valspec) (COMMENT op_op "=>" ".") (COMMENT op_op "=>" "." OP) (REDUCE (ID) r11) (REDUCE (EQUALOP) r11) (SHIFT (OP) s205) (REDUCE (ASTERISK) r11) (GOTO op_op s203) (GOTO valspec s207))
    (STATE s207 (COMMENT valspec "=>" valspec AND valspec ".") (COMMENT valspec "=>" valspec "." AND valspec) (REDUCE (SEMICOLON) r217) (REDUCE (DATATYPE) r217) (REDUCE (END) r217) (REDUCE (EQTYPE) r217) (REDUCE (EXCEPTION) r217) (REDUCE (FUNCTOR) r217) (REDUCE (INCLUDE) r217) (REDUCE (SHARING) r217) (REDUCE (STRUCTURE) r217) (REDUCE (TYPE) r217) (REDUCE (VAL) r217) (REDUCE (RPAREN) r217) (SHIFT (AND) s206))
    (STATE s208 (COMMENT valspec "=>" op_op ident "." COLON ty) (SHIFT (COLON) s209))
    (STATE s209 (COMMENT valspec "=>" op_op ident COLON "." ty) (COMMENT ty "=>" "." ty_prime) (COMMENT ty "=>" "." ty ARROW ty) (COMMENT ty "=>" "." tuple_ty) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK ty_prime) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK tuple_ty) (COMMENT ty_prime "=>" "." tycon) (COMMENT ty_prime "=>" "." ty_prime tycon) (COMMENT ty_prime "=>" "." LPAREN ty RPAREN) (COMMENT ty_prime "=>" "." LPAREN ty0_pc RPAREN tycon) (COMMENT ty_prime "=>" "." LBRACE RBRACE) (COMMENT ty_prime "=>" "." LBRACE tlabels RBRACE) (COMMENT ty_prime "=>" "." TYVAR) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (SHIFT (TYVAR) s61) (SHIFT (LBRACE) s62) (SHIFT (LPAREN) s63) (GOTO tycon s56) (GOTO ty_prime s57) (GOTO tuple_ty s58) (GOTO ty s210))
    (STATE s210 (COMMENT valspec "=>" op_op ident COLON ty ".") (COMMENT ty "=>" ty "." ARROW ty) (REDUCE (SEMICOLON) r218) (REDUCE (DATATYPE) r218) (REDUCE (END) r218) (REDUCE (EQTYPE) r218) (REDUCE (EXCEPTION) r218) (REDUCE (FUNCTOR) r218) (REDUCE (INCLUDE) r218) (REDUCE (SHARING) r218) (REDUCE (STRUCTURE) r218) (REDUCE (TYPE) r218) (REDUCE (VAL) r218) (REDUCE (RPAREN) r218) (REDUCE (AND) r218) (SHIFT (ARROW) s70))
    (STATE s211 (COMMENT tyspec "=>" tyvars "." ID EQUALOP ty) (COMMENT tyspec "=>" tyvars "." ID) (SHIFT (ID) s222))
    (STATE s212 (COMMENT tyspec "=>" tyspec "." AND tyspec) (COMMENT spec "=>" TYPE tyspec ".") (REDUCE (SEMICOLON) r200) (REDUCE (DATATYPE) r200) (REDUCE (END) r200) (REDUCE (EQTYPE) r200) (REDUCE (EXCEPTION) r200) (REDUCE (FUNCTOR) r200) (REDUCE (INCLUDE) r200) (REDUCE (SHARING) r200) (REDUCE (STRUCTURE) r200) (REDUCE (TYPE) r200) (REDUCE (VAL) r200) (REDUCE (RPAREN) r200) (SHIFT (AND) s220))
    (STATE s213 (COMMENT tyvars "=>" TYVAR ".") (REDUCE () r140))
    (STATE s214 (COMMENT tyvar_pc "=>" "." TYVAR COMMA tyvar_pc) (COMMENT tyvar_pc "=>" "." TYVAR) (COMMENT tyvars "=>" LPAREN "." tyvar_pc RPAREN) (SHIFT (TYVAR) s216) (GOTO tyvar_pc s215))
    (STATE s215 (COMMENT tyvars "=>" LPAREN tyvar_pc "." RPAREN) (SHIFT (RPAREN) s219)) (STATE s216 (COMMENT tyvar_pc "=>" TYVAR "." COMMA tyvar_pc) (COMMENT tyvar_pc "=>" TYVAR ".") (SHIFT (COMMA) s217) (REDUCE (RPAREN) r145)) (STATE s217 (COMMENT tyvar_pc "=>" TYVAR COMMA "." tyvar_pc) (COMMENT tyvar_pc "=>" "." TYVAR COMMA tyvar_pc) (COMMENT tyvar_pc "=>" "." TYVAR) (SHIFT (TYVAR) s216) (GOTO tyvar_pc s218)) (STATE s218 (COMMENT tyvar_pc "=>" TYVAR COMMA tyvar_pc ".") (REDUCE () r146)) (STATE s219 (COMMENT tyvars "=>" LPAREN tyvar_pc RPAREN ".") (REDUCE () r141)) (STATE s220 (COMMENT tyspec "=>" "." tyvars ID EQUALOP ty) (COMMENT tyspec "=>" "." tyvars ID) (COMMENT tyspec "=>" tyspec AND "." tyspec) (COMMENT tyspec "=>" "." tyspec AND tyspec) (COMMENT tyvars "=>" ".") (COMMENT tyvars "=>" "." LPAREN tyvar_pc RPAREN) (COMMENT tyvars "=>" "." TYVAR) (REDUCE (ID) r142) (SHIFT (TYVAR) s213) (SHIFT (LPAREN) s214) (GOTO tyvars s211) (GOTO tyspec s221)) (STATE s221 (COMMENT tyspec "=>" tyspec AND tyspec ".") (COMMENT tyspec "=>" tyspec "." AND tyspec) (REDUCE (SEMICOLON) r214) (REDUCE (DATATYPE) r214) (REDUCE (END) r214) (REDUCE (EQTYPE) r214) (REDUCE (EXCEPTION) r214) (REDUCE (FUNCTOR) r214) (REDUCE (INCLUDE) r214) (REDUCE (SHARING) r214) (REDUCE (STRUCTURE) r214) (REDUCE (TYPE) r214) (REDUCE (VAL) r214) (REDUCE (RPAREN) r214) (SHIFT (AND) s220)) (STATE s222 (COMMENT tyspec "=>" tyvars ID "." EQUALOP ty) (COMMENT tyspec "=>" tyvars ID ".") (REDUCE (SEMICOLON) r215) (REDUCE (DATATYPE) r215) (REDUCE (END) r215) (SHIFT (EQUALOP) s223) (REDUCE (EQTYPE) r215) (REDUCE (EXCEPTION) r215) (REDUCE (FUNCTOR) r215) (REDUCE (INCLUDE) r215) (REDUCE (SHARING) r215) (REDUCE (STRUCTURE) r215) (REDUCE (TYPE) r215) (REDUCE (VAL) r215) (REDUCE (RPAREN) r215) (REDUCE (AND) r215)) (STATE s223 (COMMENT tyspec "=>" tyvars ID EQUALOP "." ty) (COMMENT ty "=>" "." ty_prime) (COMMENT ty "=>" "." ty ARROW ty) (COMMENT ty "=>" "." tuple_ty) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK ty_prime) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK tuple_ty) (COMMENT ty_prime "=>" "." tycon) (COMMENT ty_prime "=>" "." ty_prime tycon) (COMMENT ty_prime "=>" "." LPAREN ty RPAREN) (COMMENT ty_prime "=>" "." LPAREN ty0_pc RPAREN tycon) (COMMENT ty_prime "=>" "." LBRACE RBRACE) (COMMENT ty_prime "=>" "." LBRACE tlabels RBRACE) (COMMENT ty_prime "=>" "." TYVAR) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (SHIFT (TYVAR) s61) (SHIFT (LBRACE) s62) (SHIFT (LPAREN) s63) (GOTO tycon s56) (GOTO ty_prime s57) (GOTO tuple_ty s58) (GOTO ty s224)) (STATE s224 (COMMENT tyspec "=>" tyvars ID EQUALOP ty ".") (COMMENT ty "=>" ty "." ARROW ty) (REDUCE (SEMICOLON) r216) (REDUCE (DATATYPE) r216) (REDUCE (END) r216) (REDUCE (EQTYPE) r216) (REDUCE (EXCEPTION) r216) (REDUCE (FUNCTOR) r216) (REDUCE (INCLUDE) r216) (REDUCE (SHARING) r216) (REDUCE (STRUCTURE) r216) (REDUCE (TYPE) r216) (REDUCE (VAL) r216) (REDUCE (RPAREN) r216) (REDUCE (AND) r216) (SHIFT (ARROW) s70)) (STATE s225 (COMMENT strspec "=>" ident "." COLON sign EQUALOP qid) (COMMENT strspec "=>" ident "." COLON sign) (SHIFT (COLON) s229)) (STATE s226 (COMMENT strspec "=>" strspec "." AND strspec) (COMMENT spec "=>" STRUCTURE strspec ".") (REDUCE (SEMICOLON) r195) (REDUCE (DATATYPE) r195) (REDUCE (END) r195) (REDUCE (EQTYPE) r195) (REDUCE (EXCEPTION) r195) (REDUCE (FUNCTOR) r195) (REDUCE (INCLUDE) r195) (REDUCE (SHARING) r195) (REDUCE (STRUCTURE) r195) (REDUCE (TYPE) r195) (REDUCE (VAL) r195) (REDUCE (RPAREN) r195) (SHIFT (AND) s227)) (STATE s227 (COMMENT strspec "=>" "." ident COLON sign EQUALOP qid) (COMMENT strspec "=>" "." ident COLON sign) (COMMENT strspec "=>" strspec AND "." strspec) (COMMENT strspec "=>" "." strspec AND strspec) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s225) (GOTO strspec s228)) (STATE s228 (COMMENT strspec "=>" strspec AND strspec ".") (COMMENT strspec "=>" strspec "." AND strspec) (REDUCE (SEMICOLON) r209) (REDUCE (DATATYPE) r209) (REDUCE (END) r209) (REDUCE (EQTYPE) r209) (REDUCE (EXCEPTION) r209) (REDUCE (FUNCTOR) r209) (REDUCE (INCLUDE) r209) (REDUCE (SHARING) r209) (REDUCE (STRUCTURE) r209) (REDUCE (TYPE) r209) (REDUCE (VAL) r209) (REDUCE (RPAREN) r209) (SHIFT (AND) s227)) (STATE s229 (COMMENT sign "=>" "." sign WHERE whspec) (COMMENT sign "=>" "." SIG spec_s END) (COMMENT sign "=>" "." ident) (COMMENT strspec "=>" ident COLON "." sign EQUALOP qid) (COMMENT strspec "=>" ident COLON "." sign) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (SIG) s232) (SHIFT (ASTERISK) s42) (GOTO ident s230) (GOTO sign s231)) (STATE s230 (COMMENT sign "=>" ident ".") (REDUCE () r230)) (STATE s231 (COMMENT sign "=>" sign "." WHERE whspec) (COMMENT strspec "=>" ident COLON sign "." EQUALOP qid) (COMMENT strspec "=>" ident COLON sign ".") (REDUCE (SEMICOLON) r210) (REDUCE (DATATYPE) r210) (REDUCE (END) r210) (SHIFT (EQUALOP) s235) (REDUCE (EQTYPE) r210) (REDUCE (EXCEPTION) r210) (REDUCE (FUNCTOR) r210) (REDUCE (INCLUDE) r210) (REDUCE (SHARING) r210) (REDUCE (STRUCTURE) r210) (REDUCE (TYPE) r210) (REDUCE (VAL) r210) (SHIFT (WHERE) s236) (REDUCE (RPAREN) r210) (REDUCE (AND) r210)) (STATE s232 (COMMENT sign "=>" SIG "." spec_s END) (COMMENT spec "=>" "." INCLUDE ident idents) (COMMENT spec "=>" "." INCLUDE sign) (COMMENT spec "=>" "." SHARING sharespec) (COMMENT spec "=>" "." EXCEPTION exnspec) (COMMENT spec "=>" "." VAL valspec) (COMMENT spec "=>" "." EQTYPE tyspec) (COMMENT spec "=>" "." TYPE tyspec) (COMMENT spec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT spec "=>" "." DATATYPE dbs) (COMMENT spec "=>" "." DATATYPE dtrepl) (COMMENT spec "=>" "." FUNCTOR fctspec) (COMMENT spec "=>" "." STRUCTURE strspec) (COMMENT spec_s "=>" "." SEMICOLON spec_s) (COMMENT spec_s "=>" "." spec spec_s) (COMMENT spec_s "=>" ".") (SHIFT (SEMICOLON) s192) (SHIFT (DATATYPE) s194) (REDUCE (END) r192) (SHIFT (EQTYPE) s195) (SHIFT (EXCEPTION) s196) (SHIFT (FUNCTOR) s197) (SHIFT (INCLUDE) s198) (SHIFT (SHARING) s199) (SHIFT (STRUCTURE) s200) (SHIFT (TYPE) s201) (SHIFT (VAL) s202) (GOTO spec_s s233) (GOTO spec s190)) (STATE s233 (COMMENT sign "=>" SIG spec_s "." END) (SHIFT (END) s234)) (STATE s234 (COMMENT sign "=>" SIG spec_s END ".") (REDUCE () r231)) (STATE s235 (COMMENT strspec "=>" ident COLON sign EQUALOP "." qid) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s160) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s158) (GOTO qid s248)) (STATE s236 (COMMENT sign "=>" sign WHERE "." whspec) (COMMENT whspec "=>" "." qid EQUALOP qid) (COMMENT whspec "=>" "." TYPE tyvars qid EQUALOP ty) (COMMENT whspec "=>" "." whspec AND whspec) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s160) (SHIFT (EQUALOP) s22) (SHIFT (TYPE) s239) (SHIFT (ASTERISK) s42) (GOTO ident s158) (GOTO qid s237) (GOTO whspec s238)) (STATE s237 (COMMENT whspec "=>" qid "." EQUALOP qid) (SHIFT (EQUALOP) s246)) (STATE s238 (COMMENT sign "=>" sign WHERE whspec ".") (COMMENT whspec "=>" whspec "." AND whspec) (REDUCE (SEMICOLON) r232) (REDUCE (ABSTYPE) r232) (REDUCE (DATATYPE) r232) (REDUCE (END) r232) (REDUCE (EQUALOP) r232) (REDUCE (EQTYPE) r232) (REDUCE (EXCEPTION) r232) (REDUCE (FUN) r232) (REDUCE (FUNCTOR) r232) (REDUCE (IN) r232) (REDUCE (INCLUDE) r232) (REDUCE (INFIX) r232) (REDUCE (INFIXR) r232) (REDUCE (LOCAL) r232) (REDUCE (NONFIX) r232) (REDUCE (OPEN) r232) (REDUCE (OVERLOAD) r232) (REDUCE (SHARING) r232) (REDUCE (SIGNATURE) r232) (REDUCE (STRUCTURE) r232) (REDUCE (TYPE) r232) (REDUCE (VAL) r232) (REDUCE (WHERE) r232) (REDUCE (COLONGT) r232) (REDUCE (RPAREN) r232) (REDUCE (FUNSIG) r232) (SHIFT (AND) s244) (REDUCE (COLON) r232) (REDUCE (EOF) r232)) (STATE s239 (COMMENT whspec "=>" TYPE "." tyvars qid EQUALOP ty) (COMMENT tyvars "=>" ".") (COMMENT tyvars "=>" "." LPAREN tyvar_pc RPAREN) (COMMENT tyvars "=>" "." TYVAR) (REDUCE (ID) r142) (SHIFT (TYVAR) s213) (REDUCE (EQUALOP) r142) (REDUCE (ASTERISK) r142) (SHIFT (LPAREN) s214) (GOTO tyvars s240)) (STATE s240 (COMMENT whspec "=>" TYPE tyvars "." qid EQUALOP ty) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s160) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s158) (GOTO qid s241)) (STATE s241 (COMMENT whspec "=>" TYPE tyvars qid "." EQUALOP ty) (SHIFT (EQUALOP) s242)) (STATE s242 (COMMENT whspec "=>" TYPE tyvars qid EQUALOP "." ty) (COMMENT ty "=>" "." ty_prime) (COMMENT ty "=>" "." ty ARROW ty) (COMMENT ty "=>" "." tuple_ty) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK ty_prime) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK tuple_ty) (COMMENT ty_prime "=>" "." tycon) (COMMENT ty_prime "=>" "." ty_prime tycon) (COMMENT ty_prime "=>" "." LPAREN ty RPAREN) (COMMENT ty_prime "=>" "." LPAREN ty0_pc RPAREN tycon) (COMMENT ty_prime "=>" "." LBRACE RBRACE) (COMMENT ty_prime "=>" "." LBRACE tlabels RBRACE) (COMMENT ty_prime "=>" "." TYVAR) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (SHIFT (TYVAR) s61) (SHIFT (LBRACE) s62) (SHIFT (LPAREN) s63) (GOTO tycon s56) (GOTO ty_prime s57) (GOTO tuple_ty s58) (GOTO ty s243)) (STATE s243 (COMMENT whspec "=>" TYPE tyvars qid EQUALOP ty ".") (COMMENT ty "=>" ty "." ARROW ty) (REDUCE (SEMICOLON) r228) (REDUCE (ABSTYPE) r228) (REDUCE (DATATYPE) r228) (REDUCE (END) r228) (REDUCE (EQUALOP) r228) (REDUCE (EQTYPE) r228) (REDUCE (EXCEPTION) r228) (REDUCE (FUN) r228) (REDUCE (FUNCTOR) r228) (REDUCE (IN) r228) (REDUCE (INCLUDE) r228) (REDUCE (INFIX) r228) (REDUCE (INFIXR) r228) (REDUCE (LOCAL) r228) (REDUCE (NONFIX) r228) (REDUCE (OPEN) r228) (REDUCE (OVERLOAD) r228) (REDUCE (SHARING) r228) (REDUCE (SIGNATURE) r228) (REDUCE (STRUCTURE) r228) (REDUCE (TYPE) r228) (REDUCE (VAL) r228) (REDUCE (WHERE) r228) (REDUCE (COLONGT) r228) (REDUCE (RPAREN) r228) (REDUCE (FUNSIG) r228) (REDUCE (AND) r228) (SHIFT (ARROW) s70) (REDUCE (COLON) r228) (REDUCE (EOF) r228)) (STATE s244 (COMMENT whspec "=>" "." qid EQUALOP qid) (COMMENT whspec "=>" "." TYPE tyvars qid EQUALOP ty) (COMMENT whspec "=>" whspec AND "." whspec) (COMMENT whspec "=>" "." whspec AND whspec) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s160) (SHIFT (EQUALOP) s22) (SHIFT (TYPE) s239) (SHIFT (ASTERISK) s42) (GOTO ident s158) (GOTO qid s237) (GOTO whspec s245)) (STATE s245 (COMMENT whspec "=>" whspec AND whspec ".") (COMMENT whspec "=>" whspec "." AND whspec) (REDUCE (SEMICOLON) r227) (REDUCE (ABSTYPE) r227) (REDUCE (DATATYPE) r227) (REDUCE (END) r227) (REDUCE (EQUALOP) r227) (REDUCE (EQTYPE) r227) (REDUCE (EXCEPTION) r227) (REDUCE (FUN) r227) (REDUCE (FUNCTOR) r227) (REDUCE (IN) r227) (REDUCE (INCLUDE) r227) (REDUCE (INFIX) r227) (REDUCE (INFIXR) r227) (REDUCE (LOCAL) r227) (REDUCE (NONFIX) r227) (REDUCE (OPEN) r227) (REDUCE (OVERLOAD) r227) (REDUCE (SHARING) r227) (REDUCE (SIGNATURE) r227) (REDUCE (STRUCTURE) r227) (REDUCE (TYPE) r227) (REDUCE (VAL) r227) (REDUCE (WHERE) r227) (REDUCE (COLONGT) r227) (REDUCE (RPAREN) r227) (REDUCE (FUNSIG) r227) (SHIFT (AND) s244) (REDUCE (COLON) r227) (REDUCE (EOF) r227)) (STATE s246 (COMMENT whspec "=>" qid EQUALOP "." qid) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s160) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s158) (GOTO qid s247)) (STATE s247 (COMMENT whspec "=>" qid EQUALOP qid ".") (REDUCE () r229)) (STATE s248 (COMMENT strspec "=>" ident COLON sign EQUALOP qid ".") (REDUCE () r211)) (STATE s249 (COMMENT patheqn "=>" qid "." EQUALOP patheqn) (COMMENT patheqn "=>" qid "." EQUALOP qid) (SHIFT (EQUALOP) s256)) (STATE s250 (COMMENT sharespec "=>" sharespec "." AND sharespec) (COMMENT spec "=>" SHARING sharespec ".") (REDUCE (SEMICOLON) r204) (REDUCE (DATATYPE) r204) (REDUCE (END) r204) (REDUCE (EQTYPE) r204) (REDUCE (EXCEPTION) r204) (REDUCE (FUNCTOR) r204) (REDUCE (INCLUDE) r204) (REDUCE (SHARING) r204) (REDUCE (STRUCTURE) r204) (REDUCE (TYPE) r204) (REDUCE (VAL) r204) (REDUCE (RPAREN) r204) (SHIFT (AND) s254)) (STATE s251 (COMMENT sharespec "=>" patheqn ".") (REDUCE () r224)) (STATE s252 (COMMENT patheqn "=>" "." qid EQUALOP patheqn) (COMMENT patheqn "=>" "." qid EQUALOP qid) (COMMENT sharespec "=>" TYPE "." patheqn) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s160) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s158) (GOTO qid s249) (GOTO patheqn s253)) (STATE s253 (COMMENT sharespec "=>" TYPE patheqn ".") (REDUCE () r223)) (STATE s254 (COMMENT patheqn "=>" "." qid EQUALOP patheqn) (COMMENT patheqn "=>" "." qid EQUALOP qid) (COMMENT sharespec "=>" "." patheqn) (COMMENT sharespec "=>" "." TYPE patheqn) (COMMENT sharespec "=>" sharespec AND "." sharespec) (COMMENT sharespec "=>" "." sharespec AND sharespec) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s160) (SHIFT (EQUALOP) s22) (SHIFT (TYPE) s252) (SHIFT (ASTERISK) s42) (GOTO ident s158) (GOTO qid s249) (GOTO sharespec s255) (GOTO patheqn s251)) (STATE s255 (COMMENT sharespec "=>" sharespec AND sharespec ".") (COMMENT sharespec "=>" sharespec "." AND sharespec) (REDUCE (SEMICOLON) r222) (REDUCE (DATATYPE) r222) (REDUCE (END) r222) (REDUCE (EQTYPE) r222) (REDUCE (EXCEPTION) r222) (REDUCE (FUNCTOR) r222) (REDUCE (INCLUDE) r222) (REDUCE (SHARING) r222) (REDUCE (STRUCTURE) r222) (REDUCE (TYPE) r222) (REDUCE (VAL) r222) (REDUCE (RPAREN) r222) (SHIFT (AND) s254)) (STATE s256 (COMMENT patheqn "=>" qid EQUALOP "." patheqn) (COMMENT patheqn "=>" "." qid EQUALOP patheqn) (COMMENT patheqn "=>" qid EQUALOP "." qid) (COMMENT patheqn "=>" "." qid EQUALOP qid) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s160) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s158) (GOTO qid s257) (GOTO patheqn s258)) (STATE s257 (COMMENT patheqn "=>" qid "." EQUALOP patheqn) (COMMENT patheqn "=>" qid EQUALOP qid ".") (COMMENT patheqn "=>" qid "." EQUALOP qid) (REDUCE (SEMICOLON) r225) (REDUCE (DATATYPE) r225) (REDUCE (END) r225) (SHIFT (EQUALOP) s256) (REDUCE (EQTYPE) r225) (REDUCE (EXCEPTION) r225) (REDUCE (FUNCTOR) r225) (REDUCE (INCLUDE) r225) (REDUCE (SHARING) r225) (REDUCE (STRUCTURE) r225) (REDUCE (TYPE) r225) (REDUCE (VAL) r225) (REDUCE (RPAREN) r225) (REDUCE (AND) r225)) (STATE s258 (COMMENT patheqn "=>" qid EQUALOP patheqn ".") (REDUCE () r226)) (STATE s259 (COMMENT sign "=>" ident ".") (COMMENT idents "=>" "." ident idents) (COMMENT idents "=>" "." ident) (COMMENT spec "=>" INCLUDE ident "." idents) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (REDUCE (SEMICOLON) r230) (SHIFT (ID) s156) (REDUCE (DATATYPE) r230) (REDUCE (END) r230) (SHIFT (EQUALOP) s22) (REDUCE (EQTYPE) r230) (REDUCE (EXCEPTION) r230) (REDUCE (FUNCTOR) r230) (REDUCE (INCLUDE) r230) (REDUCE (SHARING) r230) (REDUCE (STRUCTURE) r230) (REDUCE (TYPE) r230) (REDUCE (VAL) r230) (REDUCE (WHERE) r230) (SHIFT (ASTERISK) s42) (REDUCE (RPAREN) r230) (GOTO ident s261) (GOTO idents s262)) (STATE s260 (COMMENT sign "=>" sign "." WHERE whspec) (COMMENT spec "=>" INCLUDE sign ".") (REDUCE (SEMICOLON) r205) (REDUCE (DATATYPE) r205) (REDUCE (END) r205) (REDUCE (EQTYPE) r205) (REDUCE (EXCEPTION) r205) (REDUCE (FUNCTOR) r205) (REDUCE (INCLUDE) r205) (REDUCE (SHARING) r205) (REDUCE (STRUCTURE) r205) (REDUCE (TYPE) r205) (REDUCE (VAL) r205) (SHIFT (WHERE) s236) (REDUCE (RPAREN) r205)) (STATE s261 (COMMENT idents "=>" ident "." idents) (COMMENT idents "=>" "." ident idents) (COMMENT idents "=>" ident ".") (COMMENT idents "=>" "." ident) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (REDUCE (SEMICOLON) r207) (SHIFT (ID) s156) (REDUCE (DATATYPE) r207) (REDUCE (END) r207) (SHIFT (EQUALOP) s22) (REDUCE (EQTYPE) r207) (REDUCE (EXCEPTION) r207) (REDUCE (FUNCTOR) r207) (REDUCE (INCLUDE) r207) (REDUCE (SHARING) r207) (REDUCE (STRUCTURE) r207) (REDUCE (TYPE) r207) (REDUCE (VAL) r207) (SHIFT (ASTERISK) s42) (REDUCE (RPAREN) r207) (GOTO ident s261) (GOTO idents s263)) (STATE s262 (COMMENT spec "=>" INCLUDE ident idents ".") (REDUCE () r206)) (STATE s263 (COMMENT idents "=>" ident idents ".") (REDUCE () r208)) (STATE s264 (COMMENT fparamList "=>" "." LPAREN fparam RPAREN fparamList) (COMMENT fparamList "=>" "." LPAREN fparam RPAREN) (COMMENT fsig "=>" "." fparamList COLON sign) (COMMENT fsig "=>" "." COLON ident) (COMMENT fctspec "=>" ident "." fsig) (SHIFT (LPAREN) s188) (SHIFT (COLON) s270) (GOTO fsig s268) (GOTO fparamList s269)) (STATE s265 (COMMENT fctspec "=>" fctspec "." AND fctspec) (COMMENT spec "=>" FUNCTOR fctspec ".") (REDUCE (SEMICOLON) r196) (REDUCE (DATATYPE) r196) (REDUCE (END) r196) (REDUCE (EQTYPE) r196) (REDUCE (EXCEPTION) r196) (REDUCE (FUNCTOR) r196) (REDUCE (INCLUDE) r196) (REDUCE (SHARING) r196) (REDUCE (STRUCTURE) r196) (REDUCE (TYPE) r196) (REDUCE (VAL) r196) (REDUCE (RPAREN) r196) (SHIFT (AND) s266)) (STATE s266 (COMMENT fctspec "=>" "." ident fsig) (COMMENT fctspec "=>" fctspec AND "." fctspec) (COMMENT fctspec "=>" "." fctspec AND fctspec) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s264) (GOTO fctspec s267)) (STATE s267 (COMMENT fctspec "=>" fctspec AND fctspec ".") (COMMENT fctspec "=>" fctspec "." AND fctspec) (REDUCE (SEMICOLON) r212) (REDUCE (DATATYPE) r212) (REDUCE (END) r212) (REDUCE (EQTYPE) r212) (REDUCE (EXCEPTION) r212) (REDUCE (FUNCTOR) r212) (REDUCE (INCLUDE) r212) (REDUCE (SHARING) r212) (REDUCE (STRUCTURE) r212) (REDUCE (TYPE) r212) (REDUCE (VAL) r212) (REDUCE (RPAREN) r212) (SHIFT (AND) s266)) (STATE s268 (COMMENT fctspec "=>" ident fsig ".") (REDUCE () r213)) (STATE s269 (COMMENT fsig "=>" fparamList "." COLON sign) (SHIFT (COLON) s272)) (STATE s270 (COMMENT fsig "=>" COLON "." ident) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s271)) (STATE s271 (COMMENT fsig "=>" COLON ident ".") (REDUCE () r243)) (STATE s272 (COMMENT fsig "=>" fparamList COLON "." sign) (COMMENT sign "=>" "." sign WHERE whspec) (COMMENT sign "=>" "." SIG spec_s END) (COMMENT sign "=>" "." ident) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (SIG) s232) (SHIFT (ASTERISK) s42) (GOTO ident s230) (GOTO sign s273)) (STATE s273 (COMMENT fsig "=>" fparamList COLON sign ".") (COMMENT sign "=>" sign "." WHERE whspec) (REDUCE (SEMICOLON) r244) (REDUCE (DATATYPE) r244) (REDUCE (END) r244) (REDUCE (EQTYPE) r244) (REDUCE (EXCEPTION) r244) (REDUCE (FUNCTOR) r244) (REDUCE (INCLUDE) r244) (REDUCE (SHARING) r244) (REDUCE (STRUCTURE) r244) (REDUCE (TYPE) r244) (REDUCE (VAL) r244) (SHIFT (WHERE) s236) (REDUCE (RPAREN) r244) (REDUCE (AND) r244)) (STATE s274 (COMMENT exnspec "=>" ident "." OF ty) (COMMENT exnspec "=>" ident ".") (REDUCE (SEMICOLON) r220) (REDUCE (DATATYPE) r220) (REDUCE (END) r220) (REDUCE (EQTYPE) r220) (REDUCE (EXCEPTION) r220) (REDUCE (FUNCTOR) r220) (REDUCE (INCLUDE) r220) (SHIFT (OF) s278) (REDUCE (SHARING) r220) (REDUCE (STRUCTURE) r220) (REDUCE (TYPE) r220) (REDUCE (VAL) r220) (REDUCE (RPAREN) r220) (REDUCE (AND) r220)) (STATE s275 (COMMENT exnspec "=>" exnspec "." AND exnspec) (COMMENT spec "=>" EXCEPTION exnspec ".") (REDUCE (SEMICOLON) r203) (REDUCE (DATATYPE) r203) (REDUCE (END) r203) (REDUCE (EQTYPE) r203) (REDUCE (EXCEPTION) r203) (REDUCE (FUNCTOR) r203) (REDUCE (INCLUDE) r203) (REDUCE (SHARING) r203) (REDUCE (STRUCTURE) r203) (REDUCE (TYPE) r203) (REDUCE (VAL) r203) (REDUCE (RPAREN) r203) (SHIFT (AND) s276)) (STATE s276 (COMMENT exnspec "=>" "." ident OF ty) (COMMENT exnspec "=>" "." ident) (COMMENT exnspec "=>" exnspec AND "." exnspec) (COMMENT exnspec "=>" "." exnspec AND exnspec) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s274) (GOTO exnspec s277)) (STATE s277 (COMMENT exnspec "=>" exnspec AND exnspec ".") (COMMENT exnspec "=>" exnspec "." AND exnspec) (REDUCE (SEMICOLON) r219) (REDUCE (DATATYPE) r219) (REDUCE (END) r219) (REDUCE (EQTYPE) r219) (REDUCE (EXCEPTION) r219) (REDUCE (FUNCTOR) r219) (REDUCE (INCLUDE) r219) (REDUCE (SHARING) r219) (REDUCE (STRUCTURE) r219) (REDUCE (TYPE) r219) (REDUCE (VAL) r219) (REDUCE (RPAREN) r219) (SHIFT (AND) s276)) (STATE s278 (COMMENT exnspec "=>" ident OF "." ty) (COMMENT ty "=>" "." ty_prime) (COMMENT ty "=>" "." ty ARROW ty) (COMMENT ty "=>" "." tuple_ty) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK ty_prime) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK tuple_ty) (COMMENT ty_prime "=>" "." tycon) (COMMENT ty_prime "=>" "." ty_prime tycon) (COMMENT ty_prime "=>" "." LPAREN ty RPAREN) (COMMENT ty_prime "=>" "." LPAREN ty0_pc RPAREN tycon) (COMMENT ty_prime "=>" "." LBRACE RBRACE) (COMMENT ty_prime "=>" "." LBRACE tlabels RBRACE) (COMMENT ty_prime "=>" "." TYVAR) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (SHIFT (TYVAR) s61) (SHIFT (LBRACE) s62) (SHIFT (LPAREN) s63) (GOTO tycon s56) (GOTO ty_prime s57) (GOTO tuple_ty s58) (GOTO ty s279)) (STATE s279 (COMMENT exnspec "=>" ident OF ty ".") (COMMENT ty "=>" ty "." ARROW ty) (REDUCE (SEMICOLON) r221) (REDUCE (DATATYPE) r221) (REDUCE (END) r221) (REDUCE (EQTYPE) r221) (REDUCE (EXCEPTION) r221) (REDUCE (FUNCTOR) r221) (REDUCE (INCLUDE) r221) (REDUCE (SHARING) r221) (REDUCE (STRUCTURE) r221) (REDUCE (TYPE) r221) (REDUCE (VAL) r221) (REDUCE (RPAREN) r221) (REDUCE (AND) r221) (SHIFT (ARROW) s70)) (STATE s280 (COMMENT tyspec "=>" tyspec "." AND tyspec) (COMMENT spec "=>" EQTYPE tyspec ".") (REDUCE (SEMICOLON) r201) (REDUCE (DATATYPE) r201) (REDUCE (END) r201) (REDUCE (EQTYPE) r201) (REDUCE (EXCEPTION) r201) (REDUCE (FUNCTOR) r201) (REDUCE (INCLUDE) r201) (REDUCE (SHARING) r201) (REDUCE (STRUCTURE) r201) (REDUCE (TYPE) r201) (REDUCE (VAL) r201) (REDUCE (RPAREN) r201) (SHIFT (AND) s220)) (STATE s281 (COMMENT db "=>" tyvarseq "." ID EQUALOP constrs) (SHIFT (ID) s318)) (STATE s282 (COMMENT spec "=>" DATATYPE dtrepl ".") (REDUCE () r197)) (STATE s283 (COMMENT spec "=>" DATATYPE dbs "." WITHTYPE tb) (COMMENT spec "=>" DATATYPE dbs ".") (REDUCE (SEMICOLON) r198) (REDUCE (DATATYPE) r198) (REDUCE (END) r198) (REDUCE (EQTYPE) r198) (REDUCE (EXCEPTION) r198) (REDUCE (FUNCTOR) r198) (REDUCE (INCLUDE) r198) (REDUCE (SHARING) r198) (REDUCE (STRUCTURE) r198) (REDUCE (TYPE) r198) (REDUCE (VAL) r198) (REDUCE (RPAREN) r198) (SHIFT (WITHTYPE) s310)) (STATE s284 (COMMENT dbs "=>" db "." AND dbs) (COMMENT dbs "=>" db ".") (REDUCE (SEMICOLON) r148) (REDUCE (ABSTYPE) r148) (REDUCE (DATATYPE) r148) (REDUCE (END) r148) (REDUCE (EQTYPE) r148) (REDUCE (EXCEPTION) r148) (REDUCE (FUN) r148) (REDUCE (FUNCTOR) r148) (REDUCE (IN) r148) (REDUCE (INCLUDE) r148) (REDUCE (INFIX) r148) (REDUCE (INFIXR) r148) (REDUCE (LOCAL) r148) (REDUCE (NONFIX) r148) (REDUCE (OPEN) r148) (REDUCE (OVERLOAD) r148) (REDUCE (SHARING) r148) (REDUCE (SIGNATURE) r148) (REDUCE (STRUCTURE) r148) (REDUCE (TYPE) r148) (REDUCE (VAL) r148) (REDUCE (WITH) r148) (REDUCE (RPAREN) r148) (REDUCE (FUNSIG) r148) (REDUCE (WITHTYPE) r148) (SHIFT (AND) s306) (REDUCE (EOF) r148)) (STATE s285 (COMMENT db "=>" ID "." EQUALOP constrs) (COMMENT dtrepl "=>" ID "." EQUALOP DATATYPE tycon) (SHIFT (EQUALOP) s302)) (STATE s286 (COMMENT tyvarseq "=>" TYVAR ".") (REDUCE () r143)) (STATE s287 (COMMENT db "=>" LAZY "." tyvars ID EQUALOP constrs) (COMMENT tyvars "=>" ".") (COMMENT tyvars "=>" "." LPAREN tyvar_pc RPAREN) (COMMENT tyvars "=>" "." TYVAR) (REDUCE (ID) r142) (SHIFT (TYVAR) s213) (SHIFT (LPAREN) s214) (GOTO tyvars s291)) (STATE s288 (COMMENT tyvar_pc "=>" "." TYVAR COMMA tyvar_pc) (COMMENT tyvar_pc "=>" "." TYVAR) (COMMENT tyvarseq "=>" LPAREN "." tyvar_pc RPAREN) (SHIFT (TYVAR) s216) (GOTO tyvar_pc s289)) (STATE s289 (COMMENT tyvarseq "=>" LPAREN tyvar_pc "." RPAREN) (SHIFT (RPAREN) s290)) (STATE s290 (COMMENT tyvarseq "=>" LPAREN tyvar_pc RPAREN ".") (REDUCE () r144)) (STATE s291 (COMMENT db "=>" LAZY tyvars "." ID EQUALOP constrs) (SHIFT (ID) s292)) (STATE s292 (COMMENT db "=>" LAZY tyvars ID "." EQUALOP constrs) (SHIFT (EQUALOP) s293)) (STATE s293 (COMMENT constr "=>" "." op_op ident OF ty) (COMMENT constr "=>" "." op_op ident) (COMMENT constrs "=>" "." constr BAR constrs) (COMMENT constrs "=>" "." constr) (COMMENT db "=>" LAZY tyvars ID EQUALOP "." constrs) (COMMENT op_op "=>" ".") (COMMENT op_op "=>" "." OP) (REDUCE (ID) r11) (REDUCE (EQUALOP) r11) (SHIFT (OP) s205) (REDUCE (ASTERISK) r11) (GOTO op_op s294) (GOTO constrs s295) (GOTO constr s296)) (STATE s294 (COMMENT constr "=>" op_op "." ident OF ty) (COMMENT constr "=>" op_op "." ident) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s299)) (STATE s295 (COMMENT db "=>" LAZY tyvars ID EQUALOP constrs ".") (REDUCE () r152)) (STATE s296 (COMMENT constrs "=>" constr "." BAR constrs) (COMMENT constrs "=>" constr ".") (REDUCE (SEMICOLON) r153) (REDUCE (ABSTYPE) r153) (SHIFT (BAR) s297) (REDUCE (DATATYPE) r153) (REDUCE (END) r153) (REDUCE (EQTYPE) r153) (REDUCE (EXCEPTION) r153) (REDUCE (FUN) r153) (REDUCE (FUNCTOR) r153) (REDUCE (IN) r153) (REDUCE (INCLUDE) r153) (REDUCE (INFIX) r153) (REDUCE (INFIXR) r153) (REDUCE (LOCAL) r153) (REDUCE (NONFIX) r153) (REDUCE (OPEN) r153) (REDUCE (OVERLOAD) r153) (REDUCE (SHARING) r153) (REDUCE (SIGNATURE) r153) (REDUCE (STRUCTURE) r153) (REDUCE (TYPE) r153) (REDUCE (VAL) r153) (REDUCE (WITH) r153) (REDUCE (RPAREN) r153) (REDUCE (FUNSIG) r153) (REDUCE (WITHTYPE) r153) (REDUCE (AND) r153) (REDUCE (EOF) r153)) (STATE s297 (COMMENT constr "=>" "." op_op ident OF ty) (COMMENT constr "=>" "." op_op ident) (COMMENT constrs "=>" constr BAR "." constrs) (COMMENT constrs "=>" "." constr BAR constrs) (COMMENT constrs "=>" "." constr) (COMMENT op_op "=>" ".") (COMMENT op_op "=>" "." OP) (REDUCE (ID) r11) (REDUCE (EQUALOP) r11) (SHIFT (OP) s205) (REDUCE (ASTERISK) r11) (GOTO op_op s294) (GOTO constrs s298) (GOTO constr s296)) (STATE s298 (COMMENT constrs "=>" constr BAR constrs ".") (REDUCE () r154)) (STATE s299 (COMMENT constr "=>" op_op ident "." OF ty) (COMMENT constr "=>" op_op ident ".") (REDUCE (SEMICOLON) r155) (REDUCE (ABSTYPE) r155) (REDUCE (BAR) r155) (REDUCE (DATATYPE) r155) (REDUCE (END) r155) (REDUCE (EQTYPE) r155) (REDUCE (EXCEPTION) r155) (REDUCE (FUN) r155) (REDUCE (FUNCTOR) r155) (REDUCE (IN) r155) (REDUCE (INCLUDE) r155) (REDUCE (INFIX) r155) (REDUCE (INFIXR) r155) (REDUCE (LOCAL) r155) (REDUCE (NONFIX) r155) (SHIFT (OF) s300) (REDUCE (OPEN) r155) (REDUCE (OVERLOAD) r155) (REDUCE (SHARING) r155) (REDUCE (SIGNATURE) r155) (REDUCE (STRUCTURE) r155) (REDUCE (TYPE) r155) (REDUCE (VAL) r155) (REDUCE (WITH) r155) (REDUCE (RPAREN) r155) (REDUCE (FUNSIG) r155) (REDUCE (WITHTYPE) r155) (REDUCE (AND) r155) (REDUCE (EOF) r155)) (STATE s300 (COMMENT constr "=>" op_op ident OF "." ty) (COMMENT ty "=>" "." ty_prime) (COMMENT ty "=>" "." ty ARROW ty) (COMMENT ty "=>" "." tuple_ty) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK ty_prime) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK tuple_ty) (COMMENT ty_prime "=>" "." tycon) (COMMENT ty_prime "=>" "." ty_prime tycon) (COMMENT ty_prime "=>" "." LPAREN ty RPAREN) (COMMENT ty_prime "=>" "." LPAREN ty0_pc RPAREN tycon) (COMMENT ty_prime "=>" "." LBRACE RBRACE) (COMMENT ty_prime "=>" "." LBRACE tlabels RBRACE) (COMMENT ty_prime "=>" "." TYVAR) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (SHIFT (TYVAR) s61) (SHIFT (LBRACE) s62) (SHIFT (LPAREN) s63) (GOTO tycon s56) (GOTO ty_prime s57) (GOTO tuple_ty s58) (GOTO ty s301)) (STATE s301 (COMMENT constr "=>" op_op ident OF ty ".") (COMMENT ty "=>" ty "." ARROW ty) (REDUCE (SEMICOLON) r156) (REDUCE (ABSTYPE) r156) (REDUCE (BAR) r156) (REDUCE (DATATYPE) r156) (REDUCE (END) r156) (REDUCE (EQTYPE) r156) (REDUCE (EXCEPTION) r156) (REDUCE (FUN) r156) (REDUCE (FUNCTOR) r156) (REDUCE (IN) r156) (REDUCE (INCLUDE) r156) (REDUCE (INFIX) r156) (REDUCE (INFIXR) r156) (REDUCE (LOCAL) r156) (REDUCE (NONFIX) r156) (REDUCE (OPEN) r156) (REDUCE (OVERLOAD) r156) (REDUCE (SHARING) r156) (REDUCE (SIGNATURE) r156) (REDUCE (STRUCTURE) r156) (REDUCE (TYPE) r156) (REDUCE (VAL) r156) (REDUCE (WITH) r156) (REDUCE (RPAREN) r156) (REDUCE (FUNSIG) r156) (REDUCE (WITHTYPE) r156) (REDUCE (AND) r156) (SHIFT (ARROW) s70) (REDUCE (EOF) r156)) (STATE s302 (COMMENT constr "=>" "." op_op ident OF ty) (COMMENT constr "=>" "." op_op ident) (COMMENT constrs "=>" "." constr BAR constrs) (COMMENT constrs "=>" "." constr) (COMMENT db "=>" ID EQUALOP "." constrs) (COMMENT dtrepl "=>" ID EQUALOP "." DATATYPE tycon) (COMMENT op_op "=>" ".") (COMMENT op_op "=>" "." OP) (REDUCE (ID) r11) (SHIFT (DATATYPE) s304) (REDUCE (EQUALOP) r11) (SHIFT (OP) s205) (REDUCE (ASTERISK) r11) (GOTO op_op s294) (GOTO constrs s303) (GOTO constr s296)) (STATE s303 (COMMENT db "=>" ID EQUALOP constrs ".") (REDUCE () r150)) (STATE s304 (COMMENT dtrepl "=>" ID EQUALOP DATATYPE "." tycon) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (GOTO tycon s305)) (STATE s305 (COMMENT dtrepl "=>" ID EQUALOP DATATYPE tycon ".") (REDUCE () r147)) (STATE s306 (COMMENT db "=>" "." LAZY tyvars ID EQUALOP constrs) (COMMENT db "=>" "." tyvarseq ID EQUALOP constrs) (COMMENT db "=>" "." ID EQUALOP constrs) (COMMENT dbs "=>" db AND "." dbs) (COMMENT dbs "=>" "." db AND dbs) (COMMENT dbs "=>" "." db) (COMMENT tyvarseq "=>" "." LPAREN tyvar_pc RPAREN) (COMMENT tyvarseq "=>" "." TYVAR) (SHIFT (ID) s308) (SHIFT (TYVAR) s286) (SHIFT (LAZY) s287) (SHIFT (LPAREN) s288) (GOTO tyvarseq s281) (GOTO dbs s307) (GOTO db s284)) (STATE s307 (COMMENT dbs "=>" db AND dbs ".") (REDUCE () r149)) (STATE s308 (COMMENT db "=>" ID "." EQUALOP constrs) (SHIFT (EQUALOP) s309)) (STATE s309 (COMMENT constr "=>" "." op_op ident OF ty) (COMMENT constr "=>" "." op_op ident) (COMMENT constrs "=>" "." constr BAR constrs) (COMMENT constrs "=>" "." constr) (COMMENT db "=>" ID EQUALOP "." constrs) (COMMENT op_op "=>" ".") (COMMENT op_op "=>" "." OP) (REDUCE (ID) r11) (REDUCE (EQUALOP) r11) (SHIFT (OP) s205) (REDUCE (ASTERISK) r11) (GOTO op_op s294) (GOTO constrs s303) (GOTO constr s296)) (STATE s310 (COMMENT spec "=>" DATATYPE dbs WITHTYPE "." tb) (COMMENT tyvars "=>" ".") (COMMENT tyvars "=>" "." LPAREN tyvar_pc RPAREN) (COMMENT tyvars "=>" "." TYVAR) (COMMENT tb "=>" "." tb AND tb) (COMMENT tb "=>" "." tyvars ID EQUALOP ty) (REDUCE (ID) r142) (SHIFT (TYVAR) s213) (SHIFT (LPAREN) s214) (GOTO tb s311) (GOTO tyvars s312)) (STATE s311 (COMMENT spec "=>" DATATYPE dbs WITHTYPE tb ".") (COMMENT tb "=>" tb "." AND tb) (REDUCE (SEMICOLON) r199) (REDUCE (DATATYPE) r199) (REDUCE (END) r199) (REDUCE (EQTYPE) r199) (REDUCE (EXCEPTION) r199) (REDUCE (FUNCTOR) r199) (REDUCE (INCLUDE) r199) (REDUCE (SHARING) r199) (REDUCE (STRUCTURE) r199) (REDUCE (TYPE) r199) (REDUCE (VAL) r199) (REDUCE (RPAREN) r199) (SHIFT (AND) s316)) (STATE s312 (COMMENT tb "=>" tyvars "." ID EQUALOP ty) (SHIFT (ID) s313)) (STATE s313 (COMMENT tb "=>" tyvars ID "." EQUALOP ty) (SHIFT (EQUALOP) s314)) (STATE s314 (COMMENT tb "=>" tyvars ID EQUALOP "." ty) (COMMENT ty "=>" "." ty_prime) (COMMENT ty "=>" "." ty ARROW ty) (COMMENT ty "=>" "." tuple_ty) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK ty_prime) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK tuple_ty) (COMMENT ty_prime "=>" "." tycon) (COMMENT ty_prime "=>" "." ty_prime tycon) (COMMENT ty_prime "=>" "." LPAREN ty RPAREN) (COMMENT ty_prime "=>" "." LPAREN ty0_pc RPAREN tycon) (COMMENT ty_prime "=>" "." LBRACE RBRACE) (COMMENT ty_prime "=>" "." LBRACE tlabels RBRACE) (COMMENT ty_prime "=>" "." TYVAR) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (SHIFT (TYVAR) s61) (SHIFT (LBRACE) s62) (SHIFT (LPAREN) s63) (GOTO tycon s56) (GOTO ty_prime s57) (GOTO tuple_ty s58) (GOTO ty s315)) (STATE s315 (COMMENT tb "=>" tyvars ID EQUALOP ty ".") (COMMENT ty "=>" ty "." ARROW ty) (REDUCE (SEMICOLON) r138) (REDUCE (ABSTYPE) r138) (REDUCE (DATATYPE) r138) (REDUCE (END) r138) (REDUCE (EQTYPE) r138) (REDUCE (EXCEPTION) r138) (REDUCE (FUN) r138) (REDUCE (FUNCTOR) r138) (REDUCE (IN) r138) (REDUCE (INCLUDE) r138) (REDUCE (INFIX) r138) (REDUCE (INFIXR) r138) (REDUCE (LOCAL) r138) (REDUCE (NONFIX) r138) (REDUCE (OPEN) r138) (REDUCE (OVERLOAD) r138) (REDUCE (SHARING) r138) (REDUCE (SIGNATURE) r138) (REDUCE (STRUCTURE) r138) (REDUCE (TYPE) r138) (REDUCE (VAL) r138) (REDUCE (WITH) r138) (REDUCE (RPAREN) r138) (REDUCE (FUNSIG) r138) (REDUCE (AND) r138) (SHIFT (ARROW) s70) (REDUCE (EOF) r138)) (STATE s316 (COMMENT tyvars "=>" ".") (COMMENT tyvars "=>" "." LPAREN tyvar_pc RPAREN) (COMMENT tyvars "=>" "." TYVAR) (COMMENT tb "=>" tb AND "." tb) (COMMENT tb "=>" "." tb AND tb) (COMMENT tb "=>" "." tyvars ID EQUALOP ty) (REDUCE (ID) r142) (SHIFT (TYVAR) s213) (SHIFT (LPAREN) s214) (GOTO tb s317) (GOTO tyvars s312)) (STATE s317 (COMMENT tb "=>" tb AND tb ".") (COMMENT tb "=>" tb "." AND tb) (REDUCE (SEMICOLON) r139) (REDUCE (ABSTYPE) r139) (REDUCE (DATATYPE) r139) (REDUCE (END) r139) (REDUCE (EQTYPE) r139) (REDUCE (EXCEPTION) r139) (REDUCE (FUN) r139) (REDUCE (FUNCTOR) r139) (REDUCE (IN) r139) (REDUCE (INCLUDE) r139) (REDUCE (INFIX) r139) (REDUCE (INFIXR) r139) (REDUCE (LOCAL) r139) (REDUCE (NONFIX) r139) (REDUCE (OPEN) r139) (REDUCE (OVERLOAD) r139) (REDUCE (SHARING) r139) (REDUCE (SIGNATURE) r139) (REDUCE (STRUCTURE) r139) (REDUCE (TYPE) r139) (REDUCE (VAL) r139) (REDUCE (WITH) r139) (REDUCE (RPAREN) r139) (REDUCE (FUNSIG) r139) (SHIFT (AND) s316) (REDUCE (EOF) r139)) (STATE s318 (COMMENT db "=>" tyvarseq ID "." EQUALOP constrs) (SHIFT (EQUALOP) s319)) (STATE s319 (COMMENT constr "=>" "." op_op ident OF ty) (COMMENT constr "=>" "." op_op ident) (COMMENT constrs "=>" "." constr BAR constrs) (COMMENT constrs "=>" "." constr) (COMMENT db "=>" tyvarseq ID EQUALOP "." constrs) (COMMENT op_op "=>" ".") (COMMENT op_op "=>" "." OP) (REDUCE (ID) r11) (REDUCE (EQUALOP) r11) (SHIFT (OP) s205) (REDUCE (ASTERISK) r11) (GOTO op_op s294) (GOTO constrs s320) (GOTO constr s296)) (STATE s320 (COMMENT db "=>" tyvarseq ID EQUALOP constrs ".") (REDUCE () r151)) (STATE s321 (COMMENT fparam "=>" ID COLON "." sign) (COMMENT sign "=>" "." sign WHERE whspec) (COMMENT sign "=>" "." SIG spec_s END) (COMMENT sign "=>" "." ident) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (SIG) s232) (SHIFT (ASTERISK) s42) (GOTO ident s230) (GOTO sign s322)) (STATE s322 (COMMENT fparam "=>" ID COLON sign ".") (COMMENT sign "=>" sign "." WHERE whspec) (SHIFT (WHERE) s236) (REDUCE (RPAREN) r275)) (STATE s323 (COMMENT spec_s "=>" SEMICOLON spec_s ".") (REDUCE () r194)) (STATE s324 (COMMENT fparamList "=>" LPAREN fparam RPAREN "." fparamList) (COMMENT fparamList "=>" "." LPAREN fparam RPAREN fparamList) (COMMENT fparamList "=>" LPAREN fparam RPAREN ".") (COMMENT fparamList "=>" "." LPAREN fparam RPAREN) (REDUCE (EQUALOP) r277) (REDUCE (COLONGT) r277) (SHIFT (LPAREN) s188) (REDUCE (COLON) r277) (GOTO fparamList s325)) (STATE s325 (COMMENT fparamList "=>" LPAREN fparam RPAREN fparamList ".") (REDUCE () r278)) (STATE s326 (COMMENT spec_s "=>" spec spec_s ".") (REDUCE () r193)) (STATE s327 (COMMENT fsigb "=>" ident fparamList EQUALOP "." sign) (COMMENT sign "=>" "." sign WHERE whspec) (COMMENT sign "=>" "." SIG spec_s END) (COMMENT sign "=>" "." ident) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (SIG) s232) (SHIFT (ASTERISK) s42) (GOTO ident s230) (GOTO sign s328)) (STATE s328 (COMMENT fsigb "=>" ident fparamList EQUALOP sign ".") (COMMENT sign "=>" sign "." WHERE whspec) (REDUCE (SEMICOLON) r242) (REDUCE (ABSTYPE) r242) (REDUCE (DATATYPE) r242) (REDUCE (END) r242) (REDUCE (EXCEPTION) r242) (REDUCE (FUN) r242) (REDUCE (FUNCTOR) r242) (REDUCE (IN) r242) (REDUCE (INFIX) r242) (REDUCE (INFIXR) r242) (REDUCE (LOCAL) r242) (REDUCE (NONFIX) r242) (REDUCE (OPEN) r242) (REDUCE (OVERLOAD) r242) (REDUCE (SIGNATURE) r242) (REDUCE (STRUCTURE) r242) (REDUCE (TYPE) r242) (REDUCE (VAL) r242) (SHIFT (WHERE) s236) (REDUCE (FUNSIG) r242) (REDUCE (AND) r242) (REDUCE (EOF) r242)) (STATE s329 (COMMENT aexp "=>" LPAREN exp_ps "." RPAREN) (SHIFT (RPAREN) s340)) (STATE s330 (COMMENT exp_2c "=>" exp "." COMMA exp) (COMMENT exp_2c "=>" exp "." COMMA exp_2c) (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (COMMENT exp_ps "=>" exp "." SEMICOLON exp_ps) (COMMENT exp_ps "=>" exp ".") (SHIFT (SEMICOLON) s334) (SHIFT (COMMA) s335) (REDUCE (RPAREN) r41) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (SHIFT (ANDALSO) s54) (SHIFT (COLON) s55)) (STATE s331 (COMMENT aexp "=>" LPAREN exp_2c "." RPAREN) (SHIFT (RPAREN) s333)) (STATE s332 (COMMENT aexp "=>" LPAREN RPAREN ".") (REDUCE () r67)) (STATE s333 (COMMENT aexp "=>" LPAREN exp_2c RPAREN ".") (REDUCE () r69)) (STATE s334 (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT exp_ps "=>" exp SEMICOLON "." exp_ps) (COMMENT exp_ps "=>" "." exp SEMICOLON exp_ps) (COMMENT exp_ps "=>" "." exp) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp_ps s338) (GOTO exp s339) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6)) (STATE s335 (COMMENT exp_2c "=>" exp COMMA "." exp) (COMMENT exp_2c "=>" "." exp COMMA exp) (COMMENT exp_2c "=>" exp COMMA "." exp_2c) (COMMENT exp_2c "=>" "." exp COMMA exp_2c) (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s336) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6) (GOTO exp_2c s337)) (STATE s336 (COMMENT exp_2c "=>" exp COMMA exp ".") (COMMENT exp_2c "=>" exp "." COMMA exp) (COMMENT exp_2c "=>" exp "." COMMA exp_2c) (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (SHIFT (COMMA) s335) (REDUCE (RPAREN) r82) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (SHIFT (ANDALSO) s54) (SHIFT (COLON) s55)) (STATE s337 (COMMENT exp_2c "=>" exp COMMA exp_2c ".") (REDUCE () r81)) (STATE s338 (COMMENT exp_ps "=>" exp SEMICOLON exp_ps ".") (REDUCE () r42)) (STATE s339 (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (COMMENT exp_ps "=>" exp "." SEMICOLON exp_ps) (COMMENT exp_ps "=>" exp ".") (SHIFT (SEMICOLON) s334) (REDUCE (END) r41) (REDUCE (RPAREN) r41) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (SHIFT (ANDALSO) s54) (SHIFT (COLON) s55)) (STATE s340 (COMMENT aexp "=>" LPAREN exp_ps RPAREN ".") (REDUCE () r68)) (STATE s341 (COMMENT aexp "=>" LBRACKET exp_list "." RBRACKET) (SHIFT (RBRACKET) s343)) (STATE s342 (COMMENT aexp "=>" LBRACKET RBRACKET ".") (REDUCE () r71)) (STATE s343 (COMMENT aexp "=>" LBRACKET exp_list RBRACKET ".") (REDUCE () r70)) (STATE s344 (COMMENT elabel "=>" selector "." EQUALOP exp) (SHIFT (EQUALOP) s351)) (STATE s345 (COMMENT elabels "=>" elabel ".") (COMMENT elabels "=>" elabel "." COMMA elabels) (SHIFT (COMMA) s349) (REDUCE (RBRACE) r40)) (STATE s346 (COMMENT aexp "=>" LBRACE elabels "." RBRACE) (SHIFT (RBRACE) s348)) (STATE s347 (COMMENT aexp "=>" LBRACE RBRACE ".") (REDUCE () r66)) (STATE s348 (COMMENT aexp "=>" LBRACE elabels RBRACE ".") (REDUCE () r65)) (STATE s349 (COMMENT elabels "=>" "." elabel) (COMMENT elabels "=>" elabel COMMA "." elabels) (COMMENT elabels "=>" "." elabel COMMA elabels) (COMMENT elabel "=>" "." selector EQUALOP exp) (COMMENT selector "=>" "." INT) (COMMENT selector "=>" "." id) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (SHIFT (ID) s78) (SHIFT (INT) s79) (SHIFT (ASTERISK) s80) (GOTO id s74) (GOTO selector s344) (GOTO elabel s345) (GOTO elabels s350)) (STATE s350 (COMMENT elabels "=>" elabel COMMA elabels ".") (REDUCE () r39)) (STATE s351 (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT elabel "=>" selector EQUALOP "." exp) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s352) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6)) (STATE s352 (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (COMMENT elabel "=>" selector EQUALOP exp ".") (REDUCE (COMMA) r38) (REDUCE (RBRACE) r38) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (SHIFT (ANDALSO) s54) (SHIFT (COLON) s55)) (STATE s353 (COMMENT exp "=>" WHILE exp "." DO exp) (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (SHIFT (DO) s354) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (SHIFT (ANDALSO) s54) (SHIFT (COLON) s55)) (STATE s354 (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" WHILE exp DO "." exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s355) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6)) (STATE s355 (COMMENT exp "=>" WHILE exp DO exp ".") (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (REDUCE (SEMICOLON) r50) (REDUCE (ABSTYPE) r50) (REDUCE (BAR) r50) (REDUCE (DATATYPE) r50) (REDUCE (END) r50) (REDUCE (EXCEPTION) r50) (REDUCE (FUN) r50) (REDUCE (FUNCTOR) r50) (REDUCE (IN) r50) (REDUCE (INFIX) r50) (REDUCE (INFIXR) r50) (REDUCE (LOCAL) r50) (REDUCE (NONFIX) r50) (REDUCE (OF) r50) (REDUCE (OPEN) r50) (REDUCE (OVERLOAD) r50) (REDUCE (SIGNATURE) r50) (REDUCE (STRUCTURE) r50) (REDUCE (THEN) r50) (REDUCE (TYPE) r50) (REDUCE (VAL) r50) (REDUCE (COMMA) r50) (REDUCE (RBRACE) r50) (REDUCE (RBRACKET) r50) (REDUCE (RPAREN) r50) (REDUCE (FUNSIG) r50) (REDUCE (AND) r50) (REDUCE (DO) r50) (REDUCE (ELSE) r50) (REDUCE (HANDLE) r50) (REDUCE (ORELSE) r50) (REDUCE (ANDALSO) r50) (REDUCE (COLON) r50) (REDUCE (EOF) r50)) (STATE s356 (COMMENT vb "=>" pat "." EQUALOP exp) (COMMENT pat "=>" pat "." COLON ty) (COMMENT pat "=>" pat "." AS pat) (SHIFT (EQUALOP) s394) (SHIFT (AS) s118) (SHIFT (COLON) s119)) (STATE s357 (COMMENT ldec "=>" VAL vb ".") (COMMENT vb "=>" vb "." AND vb) (REDUCE (SEMICOLON) r168) (REDUCE (ABSTYPE) r168) (REDUCE (DATATYPE) r168) (REDUCE (END) r168) (REDUCE (EXCEPTION) r168) (REDUCE (FUN) r168) (REDUCE (FUNCTOR) r168) (REDUCE (IN) r168) (REDUCE (INFIX) r168) (REDUCE (INFIXR) r168) (REDUCE (LOCAL) r168) (REDUCE (NONFIX) r168) (REDUCE (OPEN) r168) (REDUCE (OVERLOAD) r168) (REDUCE (SIGNATURE) r168) (REDUCE (STRUCTURE) r168) (REDUCE (TYPE) r168) (REDUCE (VAL) r168) (REDUCE (RPAREN) r168) (REDUCE (FUNSIG) r168) (SHIFT (AND) s392) (REDUCE (EOF) r168)) (STATE s358 (COMMENT ldec "=>" VAL tyvarseq "." vb) (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT vb "=>" "." pat EQUALOP exp) (COMMENT vb "=>" "." LAZY pat EQUALOP exp) (COMMENT vb "=>" "." vb AND vb) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" "." pat AS pat) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (LAZY) s359) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO pat s356) (GOTO apat s100) (GOTO apat_prime s101) (GOTO vb s391) (GOTO apats s102)) (STATE s359 (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT vb "=>" LAZY "." pat EQUALOP exp) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" "." pat AS pat) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO pat s388) (GOTO apat s100) (GOTO apat_prime s101) (GOTO apats s102)) (STATE s360 (COMMENT ldec "=>" VAL REC "." tyvarseq rvb) (COMMENT ldec "=>" VAL REC "." rvb) (COMMENT tyvarseq "=>" "." LPAREN tyvar_pc RPAREN) (COMMENT tyvarseq "=>" "." TYVAR) (COMMENT rvb "=>" "." LAZY OP id constraint EQUALOP exp) (COMMENT rvb "=>" "." LAZY id constraint EQUALOP exp) (COMMENT rvb "=>" "." rvb AND rvb) (COMMENT rvb "=>" "." OP id constraint EQUALOP exp) (COMMENT rvb "=>" "." id constraint EQUALOP exp) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (SHIFT (ID) s78) (SHIFT (TYVAR) s286) (SHIFT (LAZY) s365) (SHIFT (OP) s366) (SHIFT (ASTERISK) s80) (SHIFT (LPAREN) s288) (GOTO id s362) (GOTO rvb s363) (GOTO tyvarseq s364)) (STATE s361 (COMMENT tyvar_pc "=>" "." TYVAR COMMA tyvar_pc) (COMMENT tyvar_pc "=>" "." TYVAR) (COMMENT tyvarseq "=>" LPAREN "." tyvar_pc RPAREN) (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" LPAREN "." pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" LPAREN "." pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" LPAREN "." RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" LPAREN "." pat RPAREN) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" "." pat AS pat) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (TYVAR) s216) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (RPAREN) s124) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO pat s123) (GOTO apat s100) (GOTO apat_prime s101) (GOTO apats s102) (GOTO tyvar_pc s289)) (STATE s362 (COMMENT rvb "=>" id "." constraint EQUALOP exp) (COMMENT constraint "=>" "." COLON ty) (COMMENT constraint "=>" ".") (REDUCE (EQUALOP) r122) (SHIFT (COLON) s369) (GOTO constraint s385)) (STATE s363 (COMMENT ldec "=>" VAL REC rvb ".") (COMMENT rvb "=>" rvb "." AND rvb) (REDUCE (SEMICOLON) r170) (REDUCE (ABSTYPE) r170) (REDUCE (DATATYPE) r170) (REDUCE (END) r170) (REDUCE (EXCEPTION) r170) (REDUCE (FUN) r170) (REDUCE (FUNCTOR) r170) (REDUCE (IN) r170) (REDUCE (INFIX) r170) (REDUCE (INFIXR) r170) (REDUCE (LOCAL) r170) (REDUCE (NONFIX) r170) (REDUCE (OPEN) r170) (REDUCE (OVERLOAD) r170) (REDUCE (SIGNATURE) r170) (REDUCE (STRUCTURE) r170) (REDUCE (TYPE) r170) (REDUCE (VAL) r170) (REDUCE (RPAREN) r170) (REDUCE (FUNSIG) r170) (SHIFT (AND) s383) (REDUCE (EOF) r170)) (STATE s364 (COMMENT ldec "=>" VAL REC tyvarseq "." rvb) (COMMENT rvb "=>" "." LAZY OP id constraint EQUALOP exp) (COMMENT rvb "=>" "." LAZY id constraint EQUALOP exp) (COMMENT rvb "=>" "." rvb AND rvb) (COMMENT rvb "=>" "." OP id constraint EQUALOP exp) (COMMENT rvb "=>" "." id constraint EQUALOP exp) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (SHIFT (ID) s78) (SHIFT (LAZY) s365) (SHIFT (OP) s366) (SHIFT (ASTERISK) s80) (GOTO id s362) (GOTO rvb s382)) (STATE s365 (COMMENT rvb "=>" LAZY "." OP id constraint EQUALOP exp) (COMMENT rvb "=>" LAZY "." id constraint EQUALOP exp) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (SHIFT (ID) s78) (SHIFT (OP) s374) (SHIFT (ASTERISK) s80) (GOTO id s373)) (STATE s366 (COMMENT rvb "=>" OP "." id constraint EQUALOP exp) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (SHIFT (ID) s78) (SHIFT (ASTERISK) s80) (GOTO id s367)) (STATE s367 (COMMENT rvb "=>" OP id "." constraint EQUALOP exp) (COMMENT constraint "=>" "." COLON ty) (COMMENT constraint "=>" ".") (REDUCE (EQUALOP) r122) (SHIFT (COLON) s369) (GOTO constraint s368)) (STATE s368 (COMMENT rvb "=>" OP id constraint "." EQUALOP exp) (SHIFT (EQUALOP) s371)) (STATE s369 (COMMENT constraint "=>" COLON "." ty) (COMMENT ty "=>" "." ty_prime) (COMMENT ty "=>" "." ty ARROW ty) (COMMENT ty "=>" "." tuple_ty) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK ty_prime) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK tuple_ty) (COMMENT ty_prime "=>" "." tycon) (COMMENT ty_prime "=>" "." ty_prime tycon) (COMMENT ty_prime "=>" "." LPAREN ty RPAREN) (COMMENT ty_prime "=>" "." LPAREN ty0_pc RPAREN tycon) (COMMENT ty_prime "=>" "." LBRACE RBRACE) (COMMENT ty_prime "=>" "." LBRACE tlabels RBRACE) (COMMENT ty_prime "=>" "." TYVAR) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (SHIFT (TYVAR) s61) (SHIFT (LBRACE) s62) (SHIFT (LPAREN) s63) (GOTO tycon s56) (GOTO ty_prime s57) (GOTO tuple_ty s58) (GOTO ty s370)) (STATE s370 (COMMENT constraint "=>" COLON ty ".") (COMMENT ty "=>" ty "." ARROW ty) (REDUCE (EQUALOP) r123) (SHIFT (ARROW) s70)) (STATE s371 (COMMENT rvb "=>" OP id constraint EQUALOP "." exp) (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s372) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6)) (STATE s372 (COMMENT rvb "=>" OP id constraint EQUALOP exp ".") (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (REDUCE (SEMICOLON) r125) (REDUCE (ABSTYPE) r125) (REDUCE (DATATYPE) r125) (REDUCE (END) r125) (REDUCE (EXCEPTION) r125) (REDUCE (FUN) r125) (REDUCE (FUNCTOR) r125) (REDUCE (IN) r125) (REDUCE (INFIX) r125) (REDUCE (INFIXR) r125) (REDUCE (LOCAL) r125) (REDUCE (NONFIX) r125) (REDUCE (OPEN) r125) (REDUCE (OVERLOAD) r125) (REDUCE (SIGNATURE) r125) (REDUCE (STRUCTURE) r125) (REDUCE (TYPE) r125) (REDUCE (VAL) r125) (REDUCE (RPAREN) r125) (REDUCE (FUNSIG) r125) (REDUCE (AND) r125) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (SHIFT (ANDALSO) s54) (SHIFT (COLON) s55) (REDUCE (EOF) r125)) (STATE s373 (COMMENT rvb "=>" LAZY id "." constraint EQUALOP exp) (COMMENT constraint "=>" "." COLON ty) (COMMENT constraint "=>" ".") (REDUCE (EQUALOP) r122) (SHIFT (COLON) s369) (GOTO constraint s379)) (STATE s374 (COMMENT rvb "=>" LAZY OP "." id constraint EQUALOP exp) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (SHIFT (ID) s78) (SHIFT (ASTERISK) s80) (GOTO id s375)) (STATE s375 (COMMENT rvb "=>" LAZY OP id "." constraint EQUALOP exp) (COMMENT constraint "=>" "." COLON ty) (COMMENT constraint "=>" ".") (REDUCE (EQUALOP) r122) (SHIFT (COLON) s369) (GOTO constraint s376)) (STATE s376 (COMMENT rvb "=>" LAZY OP id constraint "." EQUALOP exp) (SHIFT (EQUALOP) s377)) (STATE s377 (COMMENT rvb "=>" LAZY OP id constraint EQUALOP "." exp) (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s378) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6)) (STATE s378 (COMMENT rvb "=>" LAZY OP id constraint EQUALOP exp ".") (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (REDUCE (SEMICOLON) r128) (REDUCE (ABSTYPE) r128) (REDUCE (DATATYPE) r128) (REDUCE (END) r128) (REDUCE (EXCEPTION) r128) (REDUCE (FUN) r128) (REDUCE (FUNCTOR) r128) (REDUCE (IN) r128) (REDUCE (INFIX) r128) (REDUCE (INFIXR) r128) (REDUCE (LOCAL) r128) (REDUCE (NONFIX) r128) (REDUCE (OPEN) r128) (REDUCE (OVERLOAD) r128) (REDUCE (SIGNATURE) r128) (REDUCE (STRUCTURE) r128) (REDUCE (TYPE) r128) (REDUCE (VAL) r128) (REDUCE (RPAREN) r128) (REDUCE (FUNSIG) r128) (REDUCE (AND) r128) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (SHIFT (ANDALSO) s54) (SHIFT (COLON) s55) (REDUCE (EOF) r128)) (STATE s379 (COMMENT rvb "=>" LAZY id constraint "." EQUALOP exp) (SHIFT (EQUALOP) s380)) (STATE s380 (COMMENT rvb "=>" LAZY id constraint EQUALOP "." exp) (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s381) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6)) (STATE s381 (COMMENT rvb "=>" LAZY id constraint EQUALOP exp ".") (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (REDUCE (SEMICOLON) r127) (REDUCE (ABSTYPE) r127) (REDUCE (DATATYPE) r127) (REDUCE (END) r127) (REDUCE (EXCEPTION) r127) (REDUCE (FUN) r127) (REDUCE (FUNCTOR) r127) (REDUCE (IN) r127) (REDUCE (INFIX) r127) (REDUCE (INFIXR) r127) (REDUCE (LOCAL) r127) (REDUCE (NONFIX) r127) (REDUCE (OPEN) r127) (REDUCE (OVERLOAD) r127) (REDUCE (SIGNATURE) r127) (REDUCE (STRUCTURE) r127) (REDUCE (TYPE) r127) (REDUCE (VAL) r127) (REDUCE (RPAREN) r127) (REDUCE (FUNSIG) r127) (REDUCE (AND) r127) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (SHIFT (ANDALSO) s54) (SHIFT (COLON) s55) (REDUCE (EOF) r127)) (STATE s382 (COMMENT ldec "=>" VAL REC tyvarseq rvb ".") (COMMENT rvb "=>" rvb "." AND rvb) (REDUCE (SEMICOLON) r171) (REDUCE (ABSTYPE) r171) (REDUCE (DATATYPE) r171) (REDUCE (END) r171) (REDUCE (EXCEPTION) r171) (REDUCE (FUN) r171) (REDUCE (FUNCTOR) r171) (REDUCE (IN) r171) (REDUCE (INFIX) r171) (REDUCE (INFIXR) r171) (REDUCE (LOCAL) r171) (REDUCE (NONFIX) r171) (REDUCE (OPEN) r171) (REDUCE (OVERLOAD) r171) (REDUCE (SIGNATURE) r171) (REDUCE (STRUCTURE) r171) (REDUCE (TYPE) r171) (REDUCE (VAL) r171) (REDUCE (RPAREN) r171) (REDUCE (FUNSIG) r171) (SHIFT (AND) s383) (REDUCE (EOF) r171)) (STATE s383 (COMMENT rvb "=>" "." LAZY OP id constraint EQUALOP exp) (COMMENT rvb "=>" "." LAZY id constraint EQUALOP exp) (COMMENT rvb "=>" rvb AND "." rvb) (COMMENT rvb "=>" "." rvb AND rvb) (COMMENT rvb "=>" "." OP id constraint EQUALOP exp) (COMMENT rvb "=>" "." id constraint EQUALOP exp) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (SHIFT (ID) s78) (SHIFT (LAZY) s365) (SHIFT (OP) s366) (SHIFT (ASTERISK) s80) (GOTO id s362) (GOTO rvb s384)) (STATE s384 (COMMENT rvb "=>" rvb AND rvb ".") (COMMENT rvb "=>" rvb "." AND rvb) (REDUCE (SEMICOLON) r126) (REDUCE (ABSTYPE) r126) (REDUCE (DATATYPE) r126) (REDUCE (END) r126) (REDUCE (EXCEPTION) r126) (REDUCE (FUN) r126) (REDUCE (FUNCTOR) r126) (REDUCE (IN) r126) (REDUCE (INFIX) r126) (REDUCE (INFIXR) r126) (REDUCE (LOCAL) r126) (REDUCE (NONFIX) r126) (REDUCE (OPEN) r126) (REDUCE (OVERLOAD) r126) (REDUCE (SIGNATURE) r126) (REDUCE (STRUCTURE) r126) (REDUCE (TYPE) r126) (REDUCE (VAL) r126) (REDUCE (RPAREN) r126) (REDUCE (FUNSIG) r126) (SHIFT (AND) s383) (REDUCE (EOF) r126)) (STATE s385 (COMMENT rvb "=>" id constraint "." EQUALOP exp) (SHIFT (EQUALOP) s386)) (STATE s386 (COMMENT rvb "=>" id constraint EQUALOP "." exp) (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s387) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6)) (STATE s387 (COMMENT rvb "=>" id constraint EQUALOP exp ".") (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (REDUCE (SEMICOLON) r124) (REDUCE (ABSTYPE) r124) (REDUCE (DATATYPE) r124) (REDUCE (END) r124) (REDUCE (EXCEPTION) r124) (REDUCE (FUN) r124) (REDUCE (FUNCTOR) r124) (REDUCE (IN) r124) (REDUCE (INFIX) r124) (REDUCE (INFIXR) r124) (REDUCE (LOCAL) r124) (REDUCE (NONFIX) r124) (REDUCE (OPEN) r124) (REDUCE (OVERLOAD) r124) (REDUCE (SIGNATURE) r124) (REDUCE (STRUCTURE) r124) (REDUCE (TYPE) r124) (REDUCE (VAL) r124) (REDUCE (RPAREN) r124) (REDUCE (FUNSIG) r124) (REDUCE (AND) r124) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (SHIFT (ANDALSO) s54) (SHIFT (COLON) s55) (REDUCE (EOF) r124)) (STATE s388 (COMMENT vb "=>" LAZY pat "." EQUALOP exp) (COMMENT pat "=>" pat "." COLON ty) (COMMENT pat "=>" pat "." AS pat) (SHIFT (EQUALOP) s389) (SHIFT (AS) s118) (SHIFT (COLON) s119)) (STATE s389 (COMMENT vb "=>" LAZY pat EQUALOP "." exp) (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s390) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6)) (STATE s390 (COMMENT vb "=>" LAZY pat EQUALOP exp ".") (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (REDUCE (SEMICOLON) r120) (REDUCE (ABSTYPE) r120) (REDUCE (DATATYPE) r120) (REDUCE (END) r120) (REDUCE (EXCEPTION) r120) (REDUCE (FUN) r120) (REDUCE (FUNCTOR) r120) (REDUCE (IN) r120) (REDUCE (INFIX) r120) (REDUCE (INFIXR) r120) (REDUCE (LOCAL) r120) (REDUCE (NONFIX) r120) (REDUCE (OPEN) r120) (REDUCE (OVERLOAD) r120) (REDUCE (SIGNATURE) r120) (REDUCE (STRUCTURE) r120) (REDUCE (TYPE) r120) (REDUCE (VAL) r120) (REDUCE (RPAREN) r120) (REDUCE (FUNSIG) r120) (REDUCE (AND) r120) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (SHIFT (ANDALSO) s54) (SHIFT (COLON) s55) (REDUCE (EOF) r120)) (STATE s391 (COMMENT ldec "=>" VAL tyvarseq vb ".") (COMMENT vb "=>" vb "." AND vb) (REDUCE (SEMICOLON) r169) (REDUCE (ABSTYPE) r169) (REDUCE (DATATYPE) r169) (REDUCE (END) r169) (REDUCE (EXCEPTION) r169) (REDUCE (FUN) r169) (REDUCE (FUNCTOR) r169) (REDUCE (IN) r169) (REDUCE (INFIX) r169) (REDUCE (INFIXR) r169) (REDUCE (LOCAL) r169) (REDUCE (NONFIX) r169) (REDUCE (OPEN) r169) (REDUCE (OVERLOAD) r169) (REDUCE (SIGNATURE) r169) (REDUCE (STRUCTURE) r169) (REDUCE (TYPE) r169) (REDUCE (VAL) r169) (REDUCE (RPAREN) r169) (REDUCE (FUNSIG) r169) (SHIFT (AND) s392) (REDUCE (EOF) r169)) (STATE s392 (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT vb "=>" "." pat EQUALOP exp) (COMMENT vb "=>" "." LAZY pat EQUALOP exp) (COMMENT vb "=>" vb AND "." vb) (COMMENT vb "=>" "." vb AND vb) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" "." pat AS pat) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (LAZY) s359) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO pat s356) (GOTO apat s100) (GOTO apat_prime s101) (GOTO vb s393) (GOTO apats s102)) (STATE s393 (COMMENT vb "=>" vb AND vb ".") (COMMENT vb "=>" vb "." AND vb) (REDUCE (SEMICOLON) r119) (REDUCE (ABSTYPE) r119) (REDUCE (DATATYPE) r119) (REDUCE (END) r119) (REDUCE (EXCEPTION) r119) (REDUCE (FUN) r119) (REDUCE (FUNCTOR) r119) (REDUCE (IN) r119) (REDUCE (INFIX) r119) (REDUCE (INFIXR) r119) (REDUCE (LOCAL) r119) (REDUCE (NONFIX) r119) (REDUCE (OPEN) r119) (REDUCE (OVERLOAD) r119) (REDUCE (SIGNATURE) r119) (REDUCE (STRUCTURE) r119) (REDUCE (TYPE) r119) (REDUCE (VAL) r119) (REDUCE (RPAREN) r119) (REDUCE (FUNSIG) r119) (SHIFT (AND) s392) (REDUCE (EOF) r119)) (STATE s394 (COMMENT vb "=>" pat EQUALOP "." exp) (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s395) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6)) (STATE s395 (COMMENT vb "=>" pat EQUALOP exp ".") (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (REDUCE (SEMICOLON) r121) (REDUCE (ABSTYPE) r121) (REDUCE (DATATYPE) r121) (REDUCE (END) r121) (REDUCE (EXCEPTION) r121) (REDUCE (FUN) r121) (REDUCE (FUNCTOR) r121) (REDUCE (IN) r121) (REDUCE (INFIX) r121) (REDUCE (INFIXR) r121) (REDUCE (LOCAL) r121) (REDUCE (NONFIX) r121) (REDUCE (OPEN) r121) (REDUCE (OVERLOAD) r121) (REDUCE (SIGNATURE) r121) (REDUCE (STRUCTURE) r121) (REDUCE (TYPE) r121) (REDUCE (VAL) r121) (REDUCE (RPAREN) r121) (REDUCE (FUNSIG) r121) (REDUCE (AND) r121) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (SHIFT (ANDALSO) s54) (SHIFT (COLON) s55) (REDUCE (EOF) r121)) (STATE s396 (COMMENT ldec "=>" TYPE tb ".") (COMMENT tb "=>" tb "." AND tb) (REDUCE (SEMICOLON) r174) (REDUCE (ABSTYPE) r174) (REDUCE (DATATYPE) r174) (REDUCE (END) r174) (REDUCE (EXCEPTION) r174) (REDUCE (FUN) r174) (REDUCE (FUNCTOR) r174) (REDUCE (IN) r174) (REDUCE (INFIX) r174) (REDUCE (INFIXR) r174) (REDUCE (LOCAL) r174) (REDUCE (NONFIX) r174) (REDUCE (OPEN) r174) (REDUCE (OVERLOAD) r174) (REDUCE (SIGNATURE) r174) (REDUCE (STRUCTURE) r174) (REDUCE (TYPE) r174) (REDUCE (VAL) r174) (REDUCE (RPAREN) r174) (REDUCE (FUNSIG) r174) (SHIFT (AND) s316) (REDUCE (EOF) r174)) (STATE s397 (COMMENT strb "=>" ident "." sigconstraint_op EQUALOP str) (COMMENT sigconstraint_op "=>" "." COLONGT sign) (COMMENT sigconstraint_op "=>" "." COLON sign) (COMMENT sigconstraint_op "=>" ".") (REDUCE (EQUALOP) r233) (SHIFT (COLONGT) s402) (SHIFT (COLON) s403) (GOTO sigconstraint_op s401)) (STATE s398 (COMMENT strb "=>" strb "." AND strb) (COMMENT sdec "=>" STRUCTURE strb ".") (REDUCE (SEMICOLON) r267) (REDUCE (ABSTYPE) r267) (REDUCE (DATATYPE) r267) (REDUCE (END) r267) (REDUCE (EXCEPTION) r267) (REDUCE (FUN) r267) (REDUCE (FUNCTOR) r267) (REDUCE (IN) r267) (REDUCE (INFIX) r267) (REDUCE (INFIXR) r267) (REDUCE (LOCAL) r267) (REDUCE (NONFIX) r267) (REDUCE (OPEN) r267) (REDUCE (OVERLOAD) r267) (REDUCE (SIGNATURE) r267) (REDUCE (STRUCTURE) r267) (REDUCE (TYPE) r267) (REDUCE (VAL) r267) (REDUCE (FUNSIG) r267) (SHIFT (AND) s399) (REDUCE (EOF) r267)) (STATE s399 (COMMENT strb "=>" strb AND "." strb) (COMMENT strb "=>" "." strb AND strb) (COMMENT strb "=>" "." ident sigconstraint_op EQUALOP str) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s397) (GOTO strb s400)) (STATE s400 (COMMENT strb "=>" strb AND strb ".") (COMMENT strb "=>" strb "." AND strb) (REDUCE (SEMICOLON) r274) (REDUCE (ABSTYPE) r274) (REDUCE (DATATYPE) r274) (REDUCE (END) r274) (REDUCE (EXCEPTION) r274) (REDUCE (FUN) r274) (REDUCE (FUNCTOR) r274) (REDUCE (IN) r274) (REDUCE (INFIX) r274) (REDUCE (INFIXR) r274) (REDUCE (LOCAL) r274) (REDUCE (NONFIX) r274) (REDUCE (OPEN) r274) (REDUCE (OVERLOAD) r274) (REDUCE (SIGNATURE) r274) (REDUCE (STRUCTURE) r274) (REDUCE (TYPE) r274) (REDUCE (VAL) r274) (REDUCE (RPAREN) r274) (REDUCE (FUNSIG) r274) (SHIFT (AND) s399) (REDUCE (EOF) r274)) (STATE s401 (COMMENT strb "=>" ident sigconstraint_op "." EQUALOP str) (SHIFT (EQUALOP) s406)) (STATE s402 (COMMENT sigconstraint_op "=>" COLONGT "." sign) (COMMENT sign "=>" "." sign WHERE whspec) (COMMENT sign "=>" "." SIG spec_s END) (COMMENT sign "=>" "." ident) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (SIG) s232) (SHIFT (ASTERISK) s42) (GOTO ident s230) (GOTO sign s405)) (STATE s403 (COMMENT sigconstraint_op "=>" COLON "." sign) (COMMENT sign "=>" "." sign WHERE whspec) (COMMENT sign "=>" "." SIG spec_s END) (COMMENT sign "=>" "." ident) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (SIG) s232) (SHIFT (ASTERISK) s42) (GOTO ident s230) (GOTO sign s404)) (STATE s404 (COMMENT sigconstraint_op "=>" COLON sign ".") (COMMENT sign "=>" sign "." WHERE whspec) (REDUCE (EQUALOP) r234) (SHIFT (WHERE) s236)) (STATE s405 (COMMENT sigconstraint_op "=>" COLONGT sign ".") (COMMENT sign "=>" sign "." WHERE whspec) (REDUCE (EQUALOP) r235) (SHIFT (WHERE) s236)) (STATE s406 (COMMENT strb "=>" ident sigconstraint_op EQUALOP "." str) (COMMENT str "=>" "." str COLONGT sign) (COMMENT str "=>" "." str COLON sign) (COMMENT str "=>" "." LET strdecs IN str END) (COMMENT str "=>" "." qid arg_fct) (COMMENT str "=>" "." STRUCT strdecs END) (COMMENT str "=>" "." qid) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s160) (SHIFT (EQUALOP) s22) (SHIFT (LET) s409) (SHIFT (STRUCT) s410) (SHIFT (ASTERISK) s42) (GOTO ident s158) (GOTO qid s407) (GOTO str s408)) (STATE s407 (COMMENT arg_fct "=>" "." LPAREN strdecs RPAREN) (COMMENT arg_fct "=>" "." LPAREN str RPAREN) (COMMENT arg_fct "=>" "." LPAREN str RPAREN arg_fct) (COMMENT arg_fct "=>" "." LPAREN strdecs RPAREN arg_fct) (COMMENT str "=>" qid "." arg_fct) (COMMENT str "=>" qid ".") (REDUCE (SEMICOLON) r245) (REDUCE (ABSTYPE) r245) (REDUCE (DATATYPE) r245) (REDUCE (END) r245) (REDUCE (EXCEPTION) r245) (REDUCE (FUN) r245) (REDUCE (FUNCTOR) r245) (REDUCE (IN) r245) (REDUCE (INFIX) r245) (REDUCE (INFIXR) r245) (REDUCE (LOCAL) r245) (REDUCE (NONFIX) r245) (REDUCE (OPEN) r245) (REDUCE (OVERLOAD) r245) (REDUCE (SIGNATURE) r245) (REDUCE (STRUCTURE) r245) (REDUCE (TYPE) r245) (REDUCE (VAL) r245) (REDUCE (COLONGT) r245) (SHIFT (LPAREN) s449) (REDUCE (RPAREN) r245) (REDUCE (FUNSIG) r245) (REDUCE (AND) r245) (REDUCE (COLON) r245) (REDUCE (EOF) r245) (GOTO arg_fct s463)) (STATE s408 (COMMENT strb "=>" ident sigconstraint_op EQUALOP str ".") (COMMENT str "=>" str "." COLONGT sign) (COMMENT str "=>" str "." COLON sign) (REDUCE (SEMICOLON) r273) (REDUCE (ABSTYPE) r273) (REDUCE (DATATYPE) r273) (REDUCE (END) r273) (REDUCE (EXCEPTION) r273) (REDUCE (FUN) r273) (REDUCE (FUNCTOR) r273) (REDUCE (IN) r273) (REDUCE (INFIX) r273) (REDUCE (INFIXR) r273) (REDUCE (LOCAL) r273) (REDUCE (NONFIX) r273) (REDUCE (OPEN) r273) (REDUCE (OVERLOAD) r273) (REDUCE (SIGNATURE) r273) (REDUCE (STRUCTURE) r273) (REDUCE (TYPE) r273) (REDUCE (VAL) r273) (SHIFT (COLONGT) s436) (REDUCE (RPAREN) r273) (REDUCE (FUNSIG) r273) (REDUCE (AND) r273) (SHIFT (COLON) s437) (REDUCE (EOF) r273)) (STATE s409 (COMMENT strdec "=>" "." ldec) (COMMENT strdec "=>" "." LOCAL strdecs IN strdecs END) (COMMENT strdec "=>" "." FUNCTOR fctb) (COMMENT strdec "=>" "." STRUCTURE strb) (COMMENT strdecs "=>" ".") (COMMENT strdecs "=>" "." SEMICOLON strdecs) (COMMENT strdecs "=>" "." strdec strdecs) (COMMENT str "=>" LET "." strdecs IN str END) (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (SHIFT (SEMICOLON) s414) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (SHIFT (FUNCTOR) s415) (REDUCE (IN) r257) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s416) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (STRUCTURE) s417) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (GOTO fixity s7) (GOTO ldec s411) (GOTO strdecs s459) (GOTO strdec s413)) (STATE s410 (COMMENT strdec "=>" "." ldec) (COMMENT strdec "=>" "." LOCAL strdecs IN strdecs END) (COMMENT strdec "=>" "." FUNCTOR fctb) (COMMENT strdec "=>" "." STRUCTURE strb) (COMMENT strdecs "=>" ".") (COMMENT strdecs "=>" "." SEMICOLON strdecs) (COMMENT strdecs "=>" "." strdec strdecs) (COMMENT str "=>" STRUCT "." strdecs END) (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (SHIFT (SEMICOLON) s414) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (REDUCE (END) r257) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (SHIFT (FUNCTOR) s415) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s416) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (STRUCTURE) s417) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (GOTO fixity s7) (GOTO ldec s411) (GOTO strdecs s412) (GOTO strdec s413)) (STATE s411 (COMMENT strdec "=>" ldec ".") (REDUCE () r266)) (STATE s412 (COMMENT str "=>" STRUCT strdecs "." END) (SHIFT (END) s458)) (STATE s413 (COMMENT strdec "=>" "." ldec) (COMMENT strdec "=>" "." LOCAL strdecs IN strdecs END) (COMMENT strdec "=>" "." FUNCTOR fctb) (COMMENT strdec "=>" "." STRUCTURE strb) (COMMENT strdecs "=>" ".") (COMMENT strdecs "=>" "." SEMICOLON strdecs) (COMMENT strdecs "=>" strdec "." strdecs) (COMMENT strdecs "=>" "." strdec strdecs) (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (SHIFT (SEMICOLON) s414) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (REDUCE (END) r257) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (SHIFT (FUNCTOR) s415) (REDUCE (IN) r257) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s416) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (STRUCTURE) s417) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (REDUCE (RPAREN) r257) (GOTO fixity s7) (GOTO ldec s411) (GOTO strdecs s457) (GOTO strdec s413)) (STATE s414 (COMMENT strdec "=>" "." ldec) (COMMENT strdec "=>" "." LOCAL strdecs IN strdecs END) (COMMENT strdec "=>" "." FUNCTOR fctb) (COMMENT strdec "=>" "." STRUCTURE strb) (COMMENT strdecs "=>" ".") (COMMENT strdecs "=>" SEMICOLON "." strdecs) (COMMENT strdecs "=>" "." SEMICOLON strdecs) (COMMENT strdecs "=>" "." strdec strdecs) (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (SHIFT (SEMICOLON) s414) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (REDUCE (END) r257) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (SHIFT (FUNCTOR) s415) (REDUCE (IN) r257) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s416) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (STRUCTURE) s417) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (REDUCE (RPAREN) r257) (GOTO fixity s7) (GOTO ldec s411) (GOTO strdecs s456) (GOTO strdec s413)) (STATE s415 (COMMENT fctb "=>" "." fctb AND fctb) (COMMENT fctb "=>" "." ident fsigconstraint_op EQUALOP fct_exp) (COMMENT fctb "=>" "." ident fparamList sigconstraint_op EQUALOP str) (COMMENT strdec "=>" FUNCTOR "." fctb) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s423) (GOTO fctb s424)) (STATE s416 (COMMENT strdec "=>" "." ldec) (COMMENT strdec "=>" LOCAL "." strdecs IN strdecs END) (COMMENT strdec "=>" "." LOCAL strdecs IN strdecs END) (COMMENT strdec "=>" "." FUNCTOR fctb) (COMMENT strdec "=>" "." STRUCTURE strb) (COMMENT strdecs "=>" ".") (COMMENT strdecs "=>" "." SEMICOLON strdecs) (COMMENT strdecs "=>" "." strdec strdecs) (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (SHIFT (SEMICOLON) s414) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (SHIFT (FUNCTOR) s415) (REDUCE (IN) r257) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s416) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (STRUCTURE) s417) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (GOTO fixity s7) (GOTO ldec s411) (GOTO strdecs s419) (GOTO strdec s413)) (STATE s417 (COMMENT strb "=>" "." strb AND strb) (COMMENT strb "=>" "." ident sigconstraint_op EQUALOP str) (COMMENT strdec "=>" STRUCTURE "." strb) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s397) (GOTO strb s418)) (STATE s418 (COMMENT strb "=>" strb "." AND strb) (COMMENT strdec "=>" STRUCTURE strb ".") (REDUCE (SEMICOLON) r263) (REDUCE (ABSTYPE) r263) (REDUCE (DATATYPE) r263) (REDUCE (END) r263) (REDUCE (EXCEPTION) r263) (REDUCE (FUN) r263) (REDUCE (FUNCTOR) r263) (REDUCE (IN) r263) (REDUCE (INFIX) r263) (REDUCE (INFIXR) r263) (REDUCE (LOCAL) r263) (REDUCE (NONFIX) r263) (REDUCE (OPEN) r263) (REDUCE (OVERLOAD) r263) (REDUCE (STRUCTURE) r263) (REDUCE (TYPE) r263) (REDUCE (VAL) r263) (REDUCE (RPAREN) r263) (SHIFT (AND) s399)) (STATE s419 (COMMENT strdec "=>" LOCAL strdecs "." IN strdecs END) (SHIFT (IN) s420)) (STATE s420 (COMMENT strdec "=>" "." ldec) (COMMENT strdec "=>" LOCAL strdecs IN "." strdecs END) (COMMENT strdec "=>" "." LOCAL strdecs IN strdecs END) (COMMENT strdec "=>" "." FUNCTOR fctb) (COMMENT strdec "=>" "." STRUCTURE strb) (COMMENT strdecs "=>" ".") (COMMENT strdecs "=>" "." SEMICOLON strdecs) (COMMENT strdecs "=>" "." strdec strdecs) (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (SHIFT (SEMICOLON) s414) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (REDUCE (END) r257) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (SHIFT (FUNCTOR) s415) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s416) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (STRUCTURE) s417) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (GOTO fixity s7) (GOTO ldec s411) (GOTO strdecs s421) (GOTO strdec s413)) (STATE s421 (COMMENT strdec "=>" LOCAL strdecs IN strdecs "." END) (SHIFT (END) s422)) (STATE s422 (COMMENT strdec "=>" LOCAL strdecs IN strdecs END ".") (REDUCE () r265)) (STATE s423 (COMMENT fctb "=>" ident "." fsigconstraint_op EQUALOP fct_exp) (COMMENT fctb "=>" ident "." fparamList sigconstraint_op EQUALOP str) (COMMENT fparamList "=>" "." LPAREN fparam RPAREN fparamList) (COMMENT fparamList "=>" "." LPAREN fparam RPAREN) (COMMENT fsigconstraint_op "=>" "." COLONGT ident) (COMMENT fsigconstraint_op "=>" "." COLON ident) (COMMENT fsigconstraint_op "=>" ".") (REDUCE (EQUALOP) r236) (SHIFT (COLONGT) s429) (SHIFT (LPAREN) s188) (SHIFT (COLON) s430) (GOTO fsigconstraint_op s427) (GOTO fparamList s428)) (STATE s424 (COMMENT fctb "=>" fctb "." AND fctb) (COMMENT strdec "=>" FUNCTOR fctb ".") (REDUCE (SEMICOLON) r264) (REDUCE (ABSTYPE) r264) (REDUCE (DATATYPE) r264) (REDUCE (END) r264) (REDUCE (EXCEPTION) r264) (REDUCE (FUN) r264) (REDUCE (FUNCTOR) r264) (REDUCE (IN) r264) (REDUCE (INFIX) r264) (REDUCE (INFIXR) r264) (REDUCE (LOCAL) r264) (REDUCE (NONFIX) r264) (REDUCE (OPEN) r264) (REDUCE (OVERLOAD) r264) (REDUCE (STRUCTURE) r264) (REDUCE (TYPE) r264) (REDUCE (VAL) r264) (REDUCE (RPAREN) r264) (SHIFT (AND) s425)) (STATE s425 (COMMENT fctb "=>" fctb AND "." fctb) (COMMENT fctb "=>" "." fctb AND fctb) (COMMENT fctb "=>" "." ident fsigconstraint_op EQUALOP fct_exp) (COMMENT fctb "=>" "." ident fparamList sigconstraint_op EQUALOP str) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s423) (GOTO fctb s426)) (STATE s426 (COMMENT fctb "=>" fctb AND fctb ".") (COMMENT fctb "=>" fctb "." AND fctb) (REDUCE (SEMICOLON) r281) (REDUCE (ABSTYPE) r281) (REDUCE (DATATYPE) r281) (REDUCE (END) r281) (REDUCE (EXCEPTION) r281) (REDUCE (FUN) r281) (REDUCE (FUNCTOR) r281) (REDUCE (IN) r281) (REDUCE (INFIX) r281) (REDUCE (INFIXR) r281) (REDUCE (LOCAL) r281) (REDUCE (NONFIX) r281) (REDUCE (OPEN) r281) (REDUCE (OVERLOAD) r281) (REDUCE (SIGNATURE) r281) (REDUCE (STRUCTURE) r281) (REDUCE (TYPE) r281) (REDUCE (VAL) r281) (REDUCE (RPAREN) r281) (REDUCE (FUNSIG) r281) (SHIFT (AND) s425) (REDUCE (EOF) r281)) (STATE s427 (COMMENT fctb "=>" ident fsigconstraint_op "." EQUALOP fct_exp) (SHIFT (EQUALOP) s440)) (STATE s428 (COMMENT fctb "=>" ident fparamList "." sigconstraint_op EQUALOP str) (COMMENT sigconstraint_op "=>" "." COLONGT sign) (COMMENT sigconstraint_op "=>" "." COLON sign) (COMMENT sigconstraint_op "=>" ".") (REDUCE (EQUALOP) r233) (SHIFT (COLONGT) s402) (SHIFT (COLON) s403) (GOTO sigconstraint_op s433)) (STATE s429 (COMMENT fsigconstraint_op "=>" COLONGT "." ident) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s432)) (STATE s430 (COMMENT fsigconstraint_op "=>" COLON "." ident) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s431)) (STATE s431 (COMMENT fsigconstraint_op "=>" COLON ident ".") (REDUCE () r237)) (STATE s432 (COMMENT fsigconstraint_op "=>" COLONGT ident ".") (REDUCE () r238)) (STATE s433 (COMMENT fctb "=>" ident fparamList sigconstraint_op "." EQUALOP str) (SHIFT (EQUALOP) s434)) (STATE s434 (COMMENT fctb "=>" ident fparamList sigconstraint_op EQUALOP "." str) (COMMENT str "=>" "." str COLONGT sign) (COMMENT str "=>" "." str COLON sign) (COMMENT str "=>" "." LET strdecs IN str END) (COMMENT str "=>" "." qid arg_fct) (COMMENT str "=>" "." STRUCT strdecs END) (COMMENT str "=>" "." qid) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s160) (SHIFT (EQUALOP) s22) (SHIFT (LET) s409) (SHIFT (STRUCT) s410) (SHIFT (ASTERISK) s42) (GOTO ident s158) (GOTO qid s407) (GOTO str s435)) (STATE s435 (COMMENT fctb "=>" ident fparamList sigconstraint_op EQUALOP str ".") (COMMENT str "=>" str "." COLONGT sign) (COMMENT str "=>" str "." COLON sign) (REDUCE (SEMICOLON) r279) (REDUCE (ABSTYPE) r279) (REDUCE (DATATYPE) r279) (REDUCE (END) r279) (REDUCE (EXCEPTION) r279) (REDUCE (FUN) r279) (REDUCE (FUNCTOR) r279) (REDUCE (IN) r279) (REDUCE (INFIX) r279) (REDUCE (INFIXR) r279) (REDUCE (LOCAL) r279) (REDUCE (NONFIX) r279) (REDUCE (OPEN) r279) (REDUCE (OVERLOAD) r279) (REDUCE (SIGNATURE) r279) (REDUCE (STRUCTURE) r279) (REDUCE (TYPE) r279) (REDUCE (VAL) r279) (SHIFT (COLONGT) s436) (REDUCE (RPAREN) r279) (REDUCE (FUNSIG) r279) (REDUCE (AND) r279) (SHIFT (COLON) s437) (REDUCE (EOF) r279)) (STATE s436 (COMMENT str "=>" str COLONGT "." sign) (COMMENT sign "=>" "." sign WHERE whspec) (COMMENT sign "=>" "." SIG spec_s END) (COMMENT sign "=>" "." ident) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (SIG) s232) (SHIFT (ASTERISK) s42) (GOTO ident s230) (GOTO sign s439)) (STATE s437 (COMMENT str "=>" str COLON "." sign) (COMMENT sign "=>" "." sign WHERE whspec) (COMMENT sign "=>" "." SIG spec_s END) (COMMENT sign "=>" "." ident) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (SIG) s232) (SHIFT (ASTERISK) s42) (GOTO ident s230) (GOTO sign s438)) (STATE s438 (COMMENT str "=>" str COLON sign ".") (COMMENT sign "=>" sign "." WHERE whspec) (REDUCE (SEMICOLON) r249) (REDUCE (ABSTYPE) r249) (REDUCE (DATATYPE) r249) (REDUCE (END) r249) (REDUCE (EXCEPTION) r249) (REDUCE (FUN) r249) (REDUCE (FUNCTOR) r249) (REDUCE (IN) r249) (REDUCE (INFIX) r249) (REDUCE (INFIXR) r249) (REDUCE (LOCAL) r249) (REDUCE (NONFIX) r249) (REDUCE (OPEN) r249) (REDUCE (OVERLOAD) r249) (REDUCE (SIGNATURE) r249) (REDUCE (STRUCTURE) r249) (REDUCE (TYPE) r249) (REDUCE (VAL) r249) (SHIFT (WHERE) s236) (REDUCE (COLONGT) r249) (REDUCE (RPAREN) r249) (REDUCE (FUNSIG) r249) (REDUCE (AND) r249) (REDUCE (COLON) r249) (REDUCE (EOF) r249)) (STATE s439 (COMMENT str "=>" str COLONGT sign ".") (COMMENT sign "=>" sign "." WHERE whspec) (REDUCE (SEMICOLON) r250) (REDUCE (ABSTYPE) r250) (REDUCE (DATATYPE) r250) (REDUCE (END) r250) (REDUCE (EXCEPTION) r250) (REDUCE (FUN) r250) (REDUCE (FUNCTOR) r250) (REDUCE (IN) r250) (REDUCE (INFIX) r250) (REDUCE (INFIXR) r250) (REDUCE (LOCAL) r250) (REDUCE (NONFIX) r250) (REDUCE (OPEN) r250) (REDUCE (OVERLOAD) r250) (REDUCE (SIGNATURE) r250) (REDUCE (STRUCTURE) r250) (REDUCE (TYPE) r250) (REDUCE (VAL) r250) (SHIFT (WHERE) s236) (REDUCE (COLONGT) r250) (REDUCE (RPAREN) r250) (REDUCE (FUNSIG) r250) (REDUCE (AND) r250) (REDUCE (COLON) r250) (REDUCE (EOF) r250)) (STATE s440 (COMMENT fct_exp "=>" "." LET strdecs IN fct_exp END) (COMMENT fct_exp "=>" "." qid arg_fct) (COMMENT fct_exp "=>" "." qid) (COMMENT fctb "=>" ident fsigconstraint_op EQUALOP "." fct_exp) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s160) (SHIFT (EQUALOP) s22) (SHIFT (LET) s443) (SHIFT (ASTERISK) s42) (GOTO ident s158) (GOTO qid s441) (GOTO fct_exp s442)) (STATE s441 (COMMENT fct_exp "=>" qid "." arg_fct) (COMMENT fct_exp "=>" qid ".") (COMMENT arg_fct "=>" "." LPAREN strdecs RPAREN) (COMMENT arg_fct "=>" "." LPAREN str RPAREN) (COMMENT arg_fct "=>" "." LPAREN str RPAREN arg_fct) (COMMENT arg_fct "=>" "." LPAREN strdecs RPAREN arg_fct) (REDUCE (SEMICOLON) r282) (REDUCE (ABSTYPE) r282) (REDUCE (DATATYPE) r282) (REDUCE (END) r282) (REDUCE (EXCEPTION) r282) (REDUCE (FUN) r282) (REDUCE (FUNCTOR) r282) (REDUCE (IN) r282) (REDUCE (INFIX) r282) (REDUCE (INFIXR) r282) (REDUCE (LOCAL) r282) (REDUCE (NONFIX) r282) (REDUCE (OPEN) r282) (REDUCE (OVERLOAD) r282) (REDUCE (SIGNATURE) r282) (REDUCE (STRUCTURE) r282) (REDUCE (TYPE) r282) (REDUCE (VAL) r282) (SHIFT (LPAREN) s449) (REDUCE (RPAREN) r282) (REDUCE (FUNSIG) r282) (REDUCE (AND) r282) (REDUCE (EOF) r282) (GOTO arg_fct s448)) (STATE s442 (COMMENT fctb "=>" ident fsigconstraint_op EQUALOP fct_exp ".") (REDUCE () r280)) (STATE s443 (COMMENT fct_exp "=>" LET "." strdecs IN fct_exp END) (COMMENT strdec "=>" "." ldec) (COMMENT strdec "=>" "." LOCAL strdecs IN strdecs END) (COMMENT strdec "=>" "." FUNCTOR fctb) (COMMENT strdec "=>" "." STRUCTURE strb) (COMMENT strdecs "=>" ".") (COMMENT strdecs "=>" "." SEMICOLON strdecs) (COMMENT strdecs "=>" "." strdec strdecs) (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (SHIFT (SEMICOLON) s414) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (SHIFT (FUNCTOR) s415) (REDUCE (IN) r257) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s416) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (STRUCTURE) s417) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (GOTO fixity s7) (GOTO ldec s411) (GOTO strdecs s444) (GOTO strdec s413)) (STATE s444 (COMMENT fct_exp "=>" LET strdecs "." IN fct_exp END) (SHIFT (IN) s445)) (STATE s445 (COMMENT fct_exp "=>" LET strdecs IN "." fct_exp END) (COMMENT fct_exp "=>" "." LET strdecs IN fct_exp END) (COMMENT fct_exp "=>" "." qid arg_fct) (COMMENT fct_exp "=>" "." qid) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s160) (SHIFT (EQUALOP) s22) (SHIFT (LET) s443) (SHIFT (ASTERISK) s42) (GOTO ident s158) (GOTO qid s441) (GOTO fct_exp s446)) (STATE s446 (COMMENT fct_exp "=>" LET strdecs IN fct_exp "." END) (SHIFT (END) s447)) (STATE s447 (COMMENT fct_exp "=>" LET strdecs IN fct_exp END ".") (REDUCE () r284)) (STATE s448 (COMMENT fct_exp "=>" qid arg_fct ".") (REDUCE () r283)) (STATE s449 (COMMENT strdec "=>" "." ldec) (COMMENT strdec "=>" "." LOCAL strdecs IN strdecs END) (COMMENT strdec "=>" "." FUNCTOR fctb) (COMMENT strdec "=>" "." STRUCTURE strb) (COMMENT strdecs "=>" ".") (COMMENT strdecs "=>" "." SEMICOLON strdecs) (COMMENT strdecs "=>" "." strdec strdecs) (COMMENT arg_fct "=>" LPAREN "." strdecs RPAREN) (COMMENT arg_fct "=>" LPAREN "." str RPAREN) (COMMENT arg_fct "=>" LPAREN "." str RPAREN arg_fct) (COMMENT arg_fct "=>" LPAREN "." strdecs RPAREN arg_fct) (COMMENT str "=>" "." str COLONGT sign) (COMMENT str "=>" "." str COLON sign) (COMMENT str "=>" "." LET strdecs IN str END) (COMMENT str "=>" "." qid arg_fct) (COMMENT str "=>" "." STRUCT strdecs END) (COMMENT str "=>" "." qid) (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (SEMICOLON) s414) (SHIFT (ID) s160) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (SHIFT (EQUALOP) s22) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (SHIFT (FUNCTOR) s415) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LET) s409) (SHIFT (LOCAL) s416) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (STRUCT) s410) (SHIFT (STRUCTURE) s417) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (SHIFT (ASTERISK) s42) (REDUCE (RPAREN) r257) (GOTO ident s158) (GOTO qid s407) (GOTO fixity s7) (GOTO ldec s411) (GOTO str s450) (GOTO strdecs s451) (GOTO strdec s413)) (STATE s450 (COMMENT arg_fct "=>" LPAREN str "." RPAREN) (COMMENT arg_fct "=>" LPAREN str "." RPAREN arg_fct) (COMMENT str "=>" str "." COLONGT sign) (COMMENT str "=>" str "." COLON sign) (SHIFT (COLONGT) s436) (SHIFT (RPAREN) s454) (SHIFT (COLON) s437)) (STATE s451 (COMMENT arg_fct "=>" LPAREN strdecs "." RPAREN) (COMMENT arg_fct "=>" LPAREN strdecs "." RPAREN arg_fct) (SHIFT (RPAREN) s452)) (STATE s452 (COMMENT arg_fct "=>" LPAREN strdecs RPAREN ".") (COMMENT arg_fct "=>" "." LPAREN strdecs RPAREN) (COMMENT arg_fct "=>" "." LPAREN str RPAREN) (COMMENT arg_fct "=>" "." LPAREN str RPAREN arg_fct) (COMMENT arg_fct "=>" LPAREN strdecs RPAREN "." arg_fct) (COMMENT arg_fct "=>" "." LPAREN strdecs RPAREN arg_fct) (REDUCE (SEMICOLON) r254) (REDUCE (ABSTYPE) r254) (REDUCE (DATATYPE) r254) (REDUCE (END) r254) (REDUCE (EXCEPTION) r254) (REDUCE (FUN) r254) (REDUCE (FUNCTOR) r254) (REDUCE (IN) r254) (REDUCE (INFIX) r254) (REDUCE (INFIXR) r254) (REDUCE (LOCAL) r254) (REDUCE (NONFIX) r254) (REDUCE (OPEN) r254) (REDUCE (OVERLOAD) r254) (REDUCE (SIGNATURE) r254) (REDUCE (STRUCTURE) r254) (REDUCE (TYPE) r254) (REDUCE (VAL) r254) (REDUCE (COLONGT) r254) (SHIFT (LPAREN) s449) (REDUCE (RPAREN) r254) (REDUCE (FUNSIG) r254) (REDUCE (AND) r254) (REDUCE (COLON) r254) (REDUCE (EOF) r254) (GOTO arg_fct s453)) (STATE s453 (COMMENT arg_fct "=>" LPAREN strdecs RPAREN arg_fct ".") (REDUCE () r251)) (STATE s454 (COMMENT arg_fct "=>" "." LPAREN strdecs RPAREN) (COMMENT arg_fct "=>" LPAREN str RPAREN ".") (COMMENT arg_fct "=>" "." LPAREN str RPAREN) (COMMENT arg_fct "=>" LPAREN str RPAREN "." arg_fct) (COMMENT arg_fct "=>" "." LPAREN str RPAREN arg_fct) (COMMENT arg_fct "=>" "." LPAREN strdecs RPAREN arg_fct) (REDUCE (SEMICOLON) r253) (REDUCE (ABSTYPE) r253) (REDUCE (DATATYPE) r253) (REDUCE (END) r253) (REDUCE (EXCEPTION) r253) (REDUCE (FUN) r253) (REDUCE (FUNCTOR) r253) (REDUCE (IN) r253) (REDUCE (INFIX) r253) (REDUCE (INFIXR) r253) (REDUCE (LOCAL) r253) (REDUCE (NONFIX) r253) (REDUCE (OPEN) r253) (REDUCE (OVERLOAD) r253) (REDUCE (SIGNATURE) r253) (REDUCE (STRUCTURE) r253) (REDUCE (TYPE) r253) (REDUCE (VAL) r253) (REDUCE (COLONGT) r253) (SHIFT (LPAREN) s449) (REDUCE (RPAREN) r253) (REDUCE (FUNSIG) r253) (REDUCE (AND) r253) (REDUCE (COLON) r253) (REDUCE (EOF) r253) (GOTO arg_fct s455)) (STATE s455 (COMMENT arg_fct "=>" LPAREN str RPAREN arg_fct ".") (REDUCE () r252)) (STATE s456 (COMMENT strdecs "=>" SEMICOLON strdecs ".") (REDUCE () r256)) (STATE s457 (COMMENT strdecs "=>" strdec strdecs ".") (REDUCE () r255)) (STATE s458 (COMMENT str "=>" STRUCT strdecs END ".") (REDUCE () r246)) (STATE s459 (COMMENT str "=>" LET strdecs "." IN str END) (SHIFT (IN) s460)) (STATE s460 (COMMENT str "=>" "." str COLONGT sign) (COMMENT str "=>" "." str COLON sign) (COMMENT str "=>" LET strdecs IN "." str END) (COMMENT str "=>" "." LET strdecs IN str END) (COMMENT str "=>" "." qid arg_fct) (COMMENT str "=>" "." STRUCT strdecs END) (COMMENT str "=>" "." qid) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s160) (SHIFT (EQUALOP) s22) (SHIFT (LET) s409) (SHIFT (STRUCT) s410) (SHIFT (ASTERISK) s42) (GOTO ident s158) (GOTO qid s407) (GOTO str s461)) (STATE s461 (COMMENT str "=>" str "." COLONGT sign) (COMMENT str "=>" str "." COLON sign) (COMMENT str "=>" LET strdecs IN str "." END) (SHIFT (END) s462) (SHIFT (COLONGT) s436) (SHIFT (COLON) s437)) (STATE s462 (COMMENT str "=>" LET strdecs IN str END ".") (REDUCE () r248)) (STATE s463 (COMMENT str "=>" qid arg_fct ".") (REDUCE () r247)) (STATE s464 (COMMENT sigb "=>" ident "." EQUALOP sign) (SHIFT (EQUALOP) s468)) (STATE s465 (COMMENT sdec "=>" SIGNATURE sigb ".") (COMMENT sigb "=>" sigb "." AND sigb) (REDUCE (SEMICOLON) r268) (REDUCE (ABSTYPE) r268) (REDUCE (DATATYPE) r268) (REDUCE (END) r268) (REDUCE (EXCEPTION) r268) (REDUCE (FUN) r268) (REDUCE (FUNCTOR) r268) (REDUCE (IN) r268) (REDUCE (INFIX) r268) (REDUCE (INFIXR) r268) (REDUCE (LOCAL) r268) (REDUCE (NONFIX) r268) (REDUCE (OPEN) r268) (REDUCE (OVERLOAD) r268) (REDUCE (SIGNATURE) r268) (REDUCE (STRUCTURE) r268) (REDUCE (TYPE) r268) (REDUCE (VAL) r268) (REDUCE (FUNSIG) r268) (SHIFT (AND) s466) (REDUCE (EOF) r268)) (STATE s466 (COMMENT sigb "=>" "." ident EQUALOP sign) (COMMENT sigb "=>" sigb AND "." sigb) (COMMENT sigb "=>" "." sigb AND sigb) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s464) (GOTO sigb s467)) (STATE s467 (COMMENT sigb "=>" sigb AND sigb ".") (COMMENT sigb "=>" sigb "." AND sigb) (REDUCE (SEMICOLON) r239) (REDUCE (ABSTYPE) r239) (REDUCE (DATATYPE) r239) (REDUCE (END) r239) (REDUCE (EXCEPTION) r239) (REDUCE (FUN) r239) (REDUCE (FUNCTOR) r239) (REDUCE (IN) r239) (REDUCE (INFIX) r239) (REDUCE (INFIXR) r239) (REDUCE (LOCAL) r239) (REDUCE (NONFIX) r239) (REDUCE (OPEN) r239) (REDUCE (OVERLOAD) r239) (REDUCE (SIGNATURE) r239) (REDUCE (STRUCTURE) r239) (REDUCE (TYPE) r239) (REDUCE (VAL) r239) (REDUCE (FUNSIG) r239) (SHIFT (AND) s466) (REDUCE (EOF) r239)) (STATE s468 (COMMENT sigb "=>" ident EQUALOP "." sign) (COMMENT sign "=>" "." sign WHERE whspec) (COMMENT sign "=>" "." SIG spec_s END) (COMMENT sign "=>" "." ident) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (SIG) s232) (SHIFT (ASTERISK) s42) (GOTO ident s230) (GOTO sign s469)) (STATE s469 (COMMENT sigb "=>" ident EQUALOP sign ".") (COMMENT sign "=>" sign "." WHERE whspec) (REDUCE (SEMICOLON) r240) (REDUCE (ABSTYPE) r240) (REDUCE (DATATYPE) r240) (REDUCE (END) r240) (REDUCE (EXCEPTION) r240) (REDUCE (FUN) r240) (REDUCE (FUNCTOR) r240) (REDUCE (IN) r240) (REDUCE (INFIX) r240) (REDUCE (INFIXR) r240) (REDUCE (LOCAL) r240) (REDUCE (NONFIX) r240) (REDUCE (OPEN) r240) (REDUCE (OVERLOAD) r240) (REDUCE (SIGNATURE) r240) (REDUCE (STRUCTURE) r240) (REDUCE (TYPE) r240) (REDUCE (VAL) r240) (SHIFT (WHERE) s236) (REDUCE (FUNSIG) r240) (REDUCE (AND) r240) (REDUCE (EOF) r240)) (STATE s470 (COMMENT ldec "=>" OVERLOAD ident "." COLON ty AS exp_pa) (SHIFT (COLON) s471)) (STATE s471 (COMMENT ldec "=>" OVERLOAD ident COLON "." ty AS exp_pa) (COMMENT ty "=>" "." ty_prime) (COMMENT ty "=>" "." ty ARROW ty) (COMMENT ty "=>" "." tuple_ty) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK ty_prime) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK tuple_ty) (COMMENT ty_prime "=>" "." tycon) (COMMENT ty_prime "=>" "." ty_prime tycon) (COMMENT ty_prime "=>" "." LPAREN ty RPAREN) (COMMENT ty_prime "=>" "." LPAREN ty0_pc RPAREN tycon) (COMMENT ty_prime "=>" "." LBRACE RBRACE) (COMMENT ty_prime "=>" "." LBRACE tlabels RBRACE) (COMMENT ty_prime "=>" "." TYVAR) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (SHIFT (TYVAR) s61) (SHIFT (LBRACE) s62) (SHIFT (LPAREN) s63) (GOTO tycon s56) (GOTO ty_prime s57) (GOTO tuple_ty s58) (GOTO ty s472)) (STATE s472 (COMMENT ldec "=>" OVERLOAD ident COLON ty "." AS exp_pa) (COMMENT ty "=>" ty "." ARROW ty) (SHIFT (ARROW) s70) (SHIFT (AS) s473)) (STATE s473 (COMMENT exp_pa "=>" "." exp AND exp_pa) (COMMENT exp_pa "=>" "." exp) (COMMENT ldec "=>" OVERLOAD ident COLON ty AS "." exp_pa) (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s474) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6) (GOTO exp_pa s475)) (STATE s474 (COMMENT exp_pa "=>" exp "." AND exp_pa) (COMMENT exp_pa "=>" exp ".") (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (REDUCE (SEMICOLON) r184) (REDUCE (ABSTYPE) r184) (REDUCE (DATATYPE) r184) (REDUCE (END) r184) (REDUCE (EXCEPTION) r184) (REDUCE (FUN) r184) (REDUCE (FUNCTOR) r184) (REDUCE (IN) r184) (REDUCE (INFIX) r184) (REDUCE (INFIXR) r184) (REDUCE (LOCAL) r184) (REDUCE (NONFIX) r184) (REDUCE (OPEN) r184) (REDUCE (OVERLOAD) r184) (REDUCE (SIGNATURE) r184) (REDUCE (STRUCTURE) r184) (REDUCE (TYPE) r184) (REDUCE (VAL) r184) (REDUCE (RPAREN) r184) (REDUCE (FUNSIG) r184) (SHIFT (AND) s476) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (SHIFT (ANDALSO) s54) (SHIFT (COLON) s55) (REDUCE (EOF) r184)) (STATE s475 (COMMENT ldec "=>" OVERLOAD ident COLON ty AS exp_pa ".") (REDUCE () r183)) (STATE s476 (COMMENT exp_pa "=>" exp AND "." exp_pa) (COMMENT exp_pa "=>" "." exp AND exp_pa) (COMMENT exp_pa "=>" "." exp) (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s474) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6) (GOTO exp_pa s477)) (STATE s477 (COMMENT exp_pa "=>" exp AND exp_pa ".") (REDUCE () r185)) (STATE s478 (COMMENT qid_p "=>" qid "." qid_p) (COMMENT qid_p "=>" "." qid qid_p) (COMMENT qid_p "=>" qid ".") (COMMENT qid_p "=>" "." qid) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (REDUCE (SEMICOLON) r161) (SHIFT (ID) s160) (REDUCE (ABSTYPE) r161) (REDUCE (DATATYPE) r161) (REDUCE (END) r161) (SHIFT (EQUALOP) s22) (REDUCE (EXCEPTION) r161) (REDUCE (FUN) r161) (REDUCE (FUNCTOR) r161) (REDUCE (IN) r161) (REDUCE (INFIX) r161) (REDUCE (INFIXR) r161) (REDUCE (LOCAL) r161) (REDUCE (NONFIX) r161) (REDUCE (OPEN) r161) (REDUCE (OVERLOAD) r161) (REDUCE (SIGNATURE) r161) (REDUCE (STRUCTURE) r161) (REDUCE (TYPE) r161) (REDUCE (VAL) r161) (SHIFT (ASTERISK) s42) (REDUCE (RPAREN) r161) (REDUCE (FUNSIG) r161) (REDUCE (EOF) r161) (GOTO ident s158) (GOTO qid s478) (GOTO qid_p s480)) (STATE s479 (COMMENT ldec "=>" OPEN qid_p ".") (REDUCE () r181)) (STATE s480 (COMMENT qid_p "=>" qid qid_p ".") (REDUCE () r162)) (STATE s481 (COMMENT aexp "=>" OP ident ".") (REDUCE () r57)) (STATE s482 (COMMENT sdec "=>" LOCAL sdecs "." IN sdecs END) (SHIFT (IN) s487)) (STATE s483 (COMMENT sdec "=>" "." ldec) (COMMENT sdec "=>" "." LOCAL sdecs IN sdecs END) (COMMENT sdec "=>" "." FUNCTOR fctb) (COMMENT sdec "=>" "." FUNSIG fsigb) (COMMENT sdec "=>" "." SIGNATURE sigb) (COMMENT sdec "=>" "." STRUCTURE strb) (COMMENT sdecs "=>" ".") (COMMENT sdecs "=>" "." SEMICOLON sdecs) (COMMENT sdecs "=>" sdec "." sdecs) (COMMENT sdecs "=>" "." sdec sdecs) (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (SHIFT (SEMICOLON) s484) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (REDUCE (END) r260) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (SHIFT (FUNCTOR) s26) (REDUCE (IN) r260) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s32) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (SIGNATURE) s37) (SHIFT (STRUCTURE) s38) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (SHIFT (FUNSIG) s46) (GOTO fixity s7) (GOTO ldec s8) (GOTO sdecs s486) (GOTO sdec s483)) (STATE s484 (COMMENT sdec "=>" "." ldec) (COMMENT sdec "=>" "." LOCAL sdecs IN sdecs END) (COMMENT sdec "=>" "." FUNCTOR fctb) (COMMENT sdec "=>" "." FUNSIG fsigb) (COMMENT sdec "=>" "." SIGNATURE sigb) (COMMENT sdec "=>" "." STRUCTURE strb) (COMMENT sdecs "=>" ".") (COMMENT sdecs "=>" SEMICOLON "." sdecs) (COMMENT sdecs "=>" "." SEMICOLON sdecs) (COMMENT sdecs "=>" "." sdec sdecs) (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (SHIFT (SEMICOLON) s484) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (REDUCE (END) r260) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (SHIFT (FUNCTOR) s26) (REDUCE (IN) r260) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s32) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (SIGNATURE) s37) (SHIFT (STRUCTURE) s38) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (SHIFT (FUNSIG) s46) (GOTO fixity s7) (GOTO ldec s8) (GOTO sdecs s485) (GOTO sdec s483)) (STATE s485 (COMMENT sdecs "=>" SEMICOLON sdecs ".") (REDUCE () r259)) (STATE s486 (COMMENT sdecs "=>" sdec sdecs ".") (REDUCE () r258)) (STATE s487 (COMMENT sdec "=>" "." ldec) (COMMENT sdec "=>" LOCAL sdecs IN "." sdecs END) (COMMENT sdec "=>" "." LOCAL sdecs IN sdecs END) (COMMENT sdec "=>" "." FUNCTOR fctb) (COMMENT sdec "=>" "." FUNSIG fsigb) (COMMENT sdec "=>" "." SIGNATURE sigb) (COMMENT sdec "=>" "." STRUCTURE strb) (COMMENT sdecs "=>" ".") (COMMENT sdecs "=>" "." SEMICOLON sdecs) (COMMENT sdecs "=>" "." sdec sdecs) (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (SHIFT (SEMICOLON) s484) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (REDUCE (END) r260) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (SHIFT (FUNCTOR) s26) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s32) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (SIGNATURE) s37) (SHIFT (STRUCTURE) s38) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (SHIFT (FUNSIG) s46) (GOTO fixity s7) (GOTO ldec s8) (GOTO sdecs s488) (GOTO sdec s483)) (STATE s488 (COMMENT sdec "=>" LOCAL sdecs IN sdecs "." END) (SHIFT (END) s489)) (STATE s489 (COMMENT sdec "=>" LOCAL sdecs IN sdecs END ".") (REDUCE () r271)) (STATE s490 (COMMENT ldecs "=>" "." LOCAL ldecs IN ldecs END ldecs) (COMMENT ldecs "=>" "." SEMICOLON ldecs) (COMMENT ldecs "=>" ldec "." ldecs) (COMMENT ldecs "=>" "." ldec ldecs) (COMMENT ldecs "=>" ".") (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (SHIFT (SEMICOLON) s492) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (REDUCE (END) r186) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (REDUCE (IN) r186) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s493) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (GOTO fixity s7) (GOTO ldec s490) (GOTO ldecs s503)) (STATE s491 (COMMENT aexp "=>" LET ldecs "." IN exp_ps END) (SHIFT (IN) s500)) (STATE s492 (COMMENT ldecs "=>" "." LOCAL ldecs IN ldecs END ldecs) (COMMENT ldecs "=>" SEMICOLON "." ldecs) (COMMENT ldecs "=>" "." SEMICOLON ldecs) (COMMENT ldecs "=>" "." ldec ldecs) (COMMENT ldecs "=>" ".") (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (SHIFT (SEMICOLON) s492) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (REDUCE (END) r186) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (REDUCE (IN) r186) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s493) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (GOTO fixity s7) (GOTO ldec s490) (GOTO ldecs s499)) (STATE s493 (COMMENT ldecs "=>" LOCAL "." ldecs IN ldecs END ldecs) (COMMENT ldecs "=>" "." LOCAL ldecs IN ldecs END ldecs) (COMMENT ldecs "=>" "." SEMICOLON ldecs) (COMMENT ldecs "=>" "." ldec ldecs) (COMMENT ldecs "=>" ".") (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (SHIFT (SEMICOLON) s492) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (REDUCE (IN) r186) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s493) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (GOTO fixity s7) (GOTO ldec s490) (GOTO ldecs s494)) (STATE s494 (COMMENT ldecs "=>" LOCAL ldecs "." IN ldecs END ldecs) (SHIFT (IN) s495)) (STATE s495 (COMMENT ldecs "=>" LOCAL ldecs IN "." ldecs END ldecs) (COMMENT ldecs "=>" "." LOCAL ldecs IN ldecs END ldecs) (COMMENT ldecs "=>" "." SEMICOLON ldecs) (COMMENT ldecs "=>" "." ldec ldecs) (COMMENT ldecs "=>" ".") (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (SHIFT (SEMICOLON) s492) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (REDUCE (END) r186) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s493) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (GOTO fixity s7) (GOTO ldec s490) (GOTO ldecs s496)) (STATE s496 (COMMENT ldecs "=>" LOCAL ldecs IN ldecs "." END ldecs) (SHIFT (END) s497)) (STATE s497 (COMMENT ldecs "=>" LOCAL ldecs IN ldecs END "." ldecs) (COMMENT ldecs "=>" "." LOCAL ldecs IN ldecs END ldecs) (COMMENT ldecs "=>" "." SEMICOLON ldecs) (COMMENT ldecs "=>" "." ldec ldecs) (COMMENT ldecs "=>" ".") (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (SHIFT (SEMICOLON) s492) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (REDUCE (END) r186) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (REDUCE (IN) r186) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s493) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (GOTO fixity s7) (GOTO ldec s490) (GOTO ldecs s498)) (STATE s498 (COMMENT ldecs "=>" LOCAL ldecs IN ldecs END ldecs ".") (REDUCE () r189)) (STATE s499 (COMMENT ldecs "=>" SEMICOLON ldecs ".") (REDUCE () r188)) (STATE s500 (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" LET ldecs IN "." exp_ps END) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT exp_ps "=>" "." exp SEMICOLON exp_ps) (COMMENT exp_ps "=>" "." exp) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp_ps s501) (GOTO exp s339) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6)) (STATE s501 (COMMENT aexp "=>" LET ldecs IN exp_ps "." END) (SHIFT (END) s502)) (STATE s502 (COMMENT aexp "=>" LET ldecs IN exp_ps END ".") (REDUCE () r74)) (STATE s503 (COMMENT ldecs "=>" ldec ldecs ".") (REDUCE () r187)) (STATE s504 (COMMENT fixity "=>" INFIXR int ".") (REDUCE () r166)) (STATE s505 (COMMENT fixity "=>" INFIX int ".") (REDUCE () r164)) (STATE s506 (COMMENT exp "=>" IF exp "." THEN exp ELSE exp) (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (SHIFT (THEN) s507) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (SHIFT (ANDALSO) s54) (SHIFT (COLON) s55)) (STATE s507 (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" IF exp THEN "." exp ELSE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s508) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6)) (STATE s508 (COMMENT exp "=>" IF exp THEN exp "." ELSE exp) (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (SHIFT (ELSE) s509) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (SHIFT (ANDALSO) s54) (SHIFT (COLON) s55)) (STATE s509 (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" IF exp THEN exp ELSE "." exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s510) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6)) (STATE s510 (COMMENT exp "=>" IF exp THEN exp ELSE exp ".") (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (REDUCE (SEMICOLON) r51) (REDUCE (ABSTYPE) r51) (REDUCE (BAR) r51) (REDUCE (DATATYPE) r51) (REDUCE (END) r51) (REDUCE (EXCEPTION) r51) (REDUCE (FUN) r51) (REDUCE (FUNCTOR) r51) (REDUCE (IN) r51) (REDUCE (INFIX) r51) (REDUCE (INFIXR) r51) (REDUCE (LOCAL) r51) (REDUCE (NONFIX) r51) (REDUCE (OF) r51) (REDUCE (OPEN) r51) (REDUCE (OVERLOAD) r51) (REDUCE (SIGNATURE) r51) (REDUCE (STRUCTURE) r51) (REDUCE (THEN) r51) (REDUCE (TYPE) r51) (REDUCE (VAL) r51) (REDUCE (COMMA) r51) (REDUCE (RBRACE) r51) (REDUCE (RBRACKET) r51) (REDUCE (RPAREN) r51) (REDUCE (FUNSIG) r51) (REDUCE (AND) r51) (REDUCE (DO) r51) (REDUCE (ELSE) r51) (REDUCE (HANDLE) r51) (REDUCE (ORELSE) r51) (REDUCE (ANDALSO) r51) (REDUCE (COLON) r51) (REDUCE (EOF) r51)) (STATE s511 (COMMENT aexp "=>" HASH selector ".") (REDUCE () r64)) (STATE s512 (COMMENT fctb "=>" fctb "." AND fctb) (COMMENT sdec "=>" FUNCTOR fctb ".") (REDUCE (SEMICOLON) r270) (REDUCE (ABSTYPE) r270) (REDUCE (DATATYPE) r270) (REDUCE (END) r270) (REDUCE (EXCEPTION) r270) (REDUCE (FUN) r270) (REDUCE (FUNCTOR) r270) (REDUCE (IN) r270) (REDUCE (INFIX) r270) (REDUCE (INFIXR) r270) (REDUCE (LOCAL) r270) (REDUCE (NONFIX) r270) (REDUCE (OPEN) r270) (REDUCE (OVERLOAD) r270) (REDUCE (SIGNATURE) r270) (REDUCE (STRUCTURE) r270) (REDUCE (TYPE) r270) (REDUCE (VAL) r270) (REDUCE (FUNSIG) r270) (SHIFT (AND) s425) (REDUCE (EOF) r270)) (STATE s513 (COMMENT fb "=>" fb_prime "." AND fb) (COMMENT fb "=>" fb_prime ".") (REDUCE (SEMICOLON) r131) (REDUCE (ABSTYPE) r131) (REDUCE (DATATYPE) r131) (REDUCE (END) r131) (REDUCE (EXCEPTION) r131) (REDUCE (FUN) r131) (REDUCE (FUNCTOR) r131) (REDUCE (IN) r131) (REDUCE (INFIX) r131) (REDUCE (INFIXR) r131) (REDUCE (LOCAL) r131) (REDUCE (NONFIX) r131) (REDUCE (OPEN) r131) (REDUCE (OVERLOAD) r131) (REDUCE (SIGNATURE) r131) (REDUCE (STRUCTURE) r131) (REDUCE (TYPE) r131) (REDUCE (VAL) r131) (REDUCE (RPAREN) r131) (REDUCE (FUNSIG) r131) (SHIFT (AND) s528) (REDUCE (EOF) r131)) (STATE s514 (COMMENT ldec "=>" FUN fb ".") (REDUCE () r172)) (STATE s515 (COMMENT clause "=>" apats "." constraint EQUALOP exp) (COMMENT constraint "=>" "." COLON ty) (COMMENT constraint "=>" ".") (REDUCE (EQUALOP) r122) (SHIFT (COLON) s369) (GOTO constraint s525)) (STATE s516 (COMMENT fb_prime "=>" clause "." BAR fb_prime) (COMMENT fb_prime "=>" clause ".") (REDUCE (SEMICOLON) r129) (REDUCE (ABSTYPE) r129) (SHIFT (BAR) s523) (REDUCE (DATATYPE) r129) (REDUCE (END) r129) (REDUCE (EXCEPTION) r129) (REDUCE (FUN) r129) (REDUCE (FUNCTOR) r129) (REDUCE (IN) r129) (REDUCE (INFIX) r129) (REDUCE (INFIXR) r129) (REDUCE (LOCAL) r129) (REDUCE (NONFIX) r129) (REDUCE (OPEN) r129) (REDUCE (OVERLOAD) r129) (REDUCE (SIGNATURE) r129) (REDUCE (STRUCTURE) r129) (REDUCE (TYPE) r129) (REDUCE (VAL) r129) (REDUCE (RPAREN) r129) (REDUCE (FUNSIG) r129) (REDUCE (AND) r129) (REDUCE (EOF) r129)) (STATE s517 (COMMENT ldec "=>" FUN tyvarseq "." fb) (COMMENT clause "=>" "." apats constraint EQUALOP exp) (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT fb "=>" "." LAZY fb_prime AND fb) (COMMENT fb "=>" "." fb_prime AND fb) (COMMENT fb "=>" "." LAZY fb_prime) (COMMENT fb "=>" "." fb_prime) (COMMENT fb_prime "=>" "." clause BAR fb_prime) (COMMENT fb_prime "=>" "." clause) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (LAZY) s518) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO apat s100) (GOTO apat_prime s101) (GOTO fb_prime s513) (GOTO fb s522) (GOTO apats s515) (GOTO clause s516)) (STATE s518 (COMMENT clause "=>" "." apats constraint EQUALOP exp) (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT fb "=>" LAZY "." fb_prime AND fb) (COMMENT fb "=>" LAZY "." fb_prime) (COMMENT fb_prime "=>" "." clause BAR fb_prime) (COMMENT fb_prime "=>" "." clause) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO apat s100) (GOTO apat_prime s101) (GOTO fb_prime s519) (GOTO apats s515) (GOTO clause s516)) (STATE s519 (COMMENT fb "=>" LAZY fb_prime "." AND fb) (COMMENT fb "=>" LAZY fb_prime ".") (REDUCE (SEMICOLON) r132) (REDUCE (ABSTYPE) r132) (REDUCE (DATATYPE) r132) (REDUCE (END) r132) (REDUCE (EXCEPTION) r132) (REDUCE (FUN) r132) (REDUCE (FUNCTOR) r132) (REDUCE (IN) r132) (REDUCE (INFIX) r132) (REDUCE (INFIXR) r132) (REDUCE (LOCAL) r132) (REDUCE (NONFIX) r132) (REDUCE (OPEN) r132) (REDUCE (OVERLOAD) r132) (REDUCE (SIGNATURE) r132) (REDUCE (STRUCTURE) r132) (REDUCE (TYPE) r132) (REDUCE (VAL) r132) (REDUCE (RPAREN) r132) (REDUCE (FUNSIG) r132) (SHIFT (AND) s520) (REDUCE (EOF) r132)) (STATE s520 (COMMENT clause "=>" "." apats constraint EQUALOP exp) (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT fb "=>" LAZY fb_prime AND "." fb) (COMMENT fb "=>" "." LAZY fb_prime AND fb) (COMMENT fb "=>" "." fb_prime AND fb) (COMMENT fb "=>" "." LAZY fb_prime) (COMMENT fb "=>" "." fb_prime) (COMMENT fb_prime "=>" "." clause BAR fb_prime) (COMMENT fb_prime "=>" "." clause) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (LAZY) s518) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO apat s100) (GOTO apat_prime s101) (GOTO fb_prime s513) (GOTO fb s521) (GOTO apats s515) (GOTO clause s516)) (STATE s521 (COMMENT fb "=>" LAZY fb_prime AND fb ".") (REDUCE () r134)) (STATE s522 (COMMENT ldec "=>" FUN tyvarseq fb ".") (REDUCE () r173)) (STATE s523 (COMMENT clause "=>" "." apats constraint EQUALOP exp) (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT fb_prime "=>" clause BAR "." fb_prime) (COMMENT fb_prime "=>" "." clause BAR fb_prime) (COMMENT fb_prime "=>" "." clause) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO apat s100) (GOTO apat_prime s101) (GOTO fb_prime s524) (GOTO apats s515) (GOTO clause s516)) (STATE s524 (COMMENT fb_prime "=>" clause BAR fb_prime ".") (REDUCE () r130)) (STATE s525 (COMMENT clause "=>" apats constraint "." EQUALOP exp) (SHIFT (EQUALOP) s526)) (STATE s526 (COMMENT clause "=>" apats constraint EQUALOP "." exp) (COMMENT quote "=>" "." BEGINQ ot_list ENDQ) (COMMENT quote "=>" "." BEGINQ ENDQ) (COMMENT aexp "=>" "." quote) (COMMENT aexp "=>" "." AQID) (COMMENT aexp "=>" "." LET ldecs IN exp_ps END) (COMMENT aexp "=>" "." VECTORSTART RBRACKET) (COMMENT aexp "=>" "." VECTORSTART exp_list RBRACKET) (COMMENT aexp "=>" "." LBRACKET RBRACKET) (COMMENT aexp "=>" "." LBRACKET exp_list RBRACKET) (COMMENT aexp "=>" "." LPAREN exp_2c RPAREN) (COMMENT aexp "=>" "." LPAREN exp_ps RPAREN) (COMMENT aexp "=>" "." LPAREN RPAREN) (COMMENT aexp "=>" "." LBRACE RBRACE) (COMMENT aexp "=>" "." LBRACE elabels RBRACE) (COMMENT aexp "=>" "." HASH selector) (COMMENT aexp "=>" "." CHAR) (COMMENT aexp "=>" "." STRING) (COMMENT aexp "=>" "." REAL) (COMMENT aexp "=>" "." WORD) (COMMENT aexp "=>" "." int) (COMMENT aexp "=>" "." ID DOT qid) (COMMENT aexp "=>" "." OP ident) (COMMENT app_exp "=>" "." ident app_exp) (COMMENT app_exp "=>" "." aexp app_exp) (COMMENT app_exp "=>" "." ident) (COMMENT app_exp "=>" "." aexp) (COMMENT exp "=>" "." RAISE exp) (COMMENT exp "=>" "." IF exp THEN exp ELSE exp) (COMMENT exp "=>" "." WHILE exp DO exp) (COMMENT exp "=>" "." CASE exp OF match) (COMMENT exp "=>" "." FN match) (COMMENT exp "=>" "." app_exp) (COMMENT exp "=>" "." exp COLON ty) (COMMENT exp "=>" "." exp ANDALSO exp) (COMMENT exp "=>" "." exp ORELSE exp) (COMMENT exp "=>" "." exp HANDLE match) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s12) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s15) (SHIFT (REAL) s16) (SHIFT (STRING) s17) (SHIFT (CHAR) s18) (SHIFT (CASE) s20) (SHIFT (EQUALOP) s22) (SHIFT (FN) s24) (SHIFT (HASH) s27) (SHIFT (IF) s28) (SHIFT (LET) s31) (SHIFT (OP) s34) (SHIFT (WHILE) s41) (SHIFT (ASTERISK) s42) (SHIFT (LBRACE) s43) (SHIFT (LBRACKET) s44) (SHIFT (LPAREN) s45) (SHIFT (VECTORSTART) s47) (SHIFT (BEGINQ) s48) (SHIFT (AQID) s49) (SHIFT (RAISE) s50) (GOTO int s1) (GOTO ident s2) (GOTO exp s527) (GOTO app_exp s4) (GOTO aexp s5) (GOTO quote s6)) (STATE s527 (COMMENT clause "=>" apats constraint EQUALOP exp ".") (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (REDUCE (SEMICOLON) r137) (REDUCE (ABSTYPE) r137) (REDUCE (BAR) r137) (REDUCE (DATATYPE) r137) (REDUCE (END) r137) (REDUCE (EXCEPTION) r137) (REDUCE (FUN) r137) (REDUCE (FUNCTOR) r137) (REDUCE (IN) r137) (REDUCE (INFIX) r137) (REDUCE (INFIXR) r137) (REDUCE (LOCAL) r137) (REDUCE (NONFIX) r137) (REDUCE (OPEN) r137) (REDUCE (OVERLOAD) r137) (REDUCE (SIGNATURE) r137) (REDUCE (STRUCTURE) r137) (REDUCE (TYPE) r137) (REDUCE (VAL) r137) (REDUCE (RPAREN) r137) (REDUCE (FUNSIG) r137) (REDUCE (AND) r137) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (SHIFT (ANDALSO) s54) (SHIFT (COLON) s55) (REDUCE (EOF) r137)) (STATE s528 (COMMENT clause "=>" "." apats constraint EQUALOP exp) (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT fb "=>" "." LAZY fb_prime AND fb) (COMMENT fb "=>" fb_prime AND "." fb) (COMMENT fb "=>" "." fb_prime AND fb) (COMMENT fb "=>" "." LAZY fb_prime) (COMMENT fb "=>" "." fb_prime) (COMMENT fb_prime "=>" "." clause BAR fb_prime) (COMMENT fb_prime "=>" "." clause) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (LAZY) s518) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO apat s100) (GOTO apat_prime s101) (GOTO fb_prime s513) (GOTO fb s529) (GOTO apats s515) (GOTO clause s516)) (STATE s529 (COMMENT fb "=>" fb_prime AND fb ".") (REDUCE () r133)) (STATE s530 (COMMENT exp "=>" FN match ".") (REDUCE () r48)) (STATE s531 (COMMENT eb "=>" op_op "." ident EQUALOP qid) (COMMENT eb "=>" op_op "." ident OF ty) (COMMENT eb "=>" op_op "." ident) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s156) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s535)) (STATE s532 (COMMENT ldec "=>" EXCEPTION eb ".") (COMMENT eb "=>" eb "." AND eb) (REDUCE (SEMICOLON) r180) (REDUCE (ABSTYPE) r180) (REDUCE (DATATYPE) r180) (REDUCE (END) r180) (REDUCE (EXCEPTION) r180) (REDUCE (FUN) r180) (REDUCE (FUNCTOR) r180) (REDUCE (IN) r180) (REDUCE (INFIX) r180) (REDUCE (INFIXR) r180) (REDUCE (LOCAL) r180) (REDUCE (NONFIX) r180) (REDUCE (OPEN) r180) (REDUCE (OVERLOAD) r180) (REDUCE (SIGNATURE) r180) (REDUCE (STRUCTURE) r180) (REDUCE (TYPE) r180) (REDUCE (VAL) r180) (REDUCE (RPAREN) r180) (REDUCE (FUNSIG) r180) (SHIFT (AND) s533) (REDUCE (EOF) r180)) (STATE s533 (COMMENT eb "=>" eb AND "." eb) (COMMENT eb "=>" "." eb AND eb) (COMMENT eb "=>" "." op_op ident EQUALOP qid) (COMMENT eb "=>" "." op_op ident OF ty) (COMMENT eb "=>" "." op_op ident) (COMMENT op_op "=>" ".") (COMMENT op_op "=>" "." OP) (REDUCE (ID) r11) (REDUCE (EQUALOP) r11) (SHIFT (OP) s205) (REDUCE (ASTERISK) r11) (GOTO op_op s531) (GOTO eb s534)) (STATE s534 (COMMENT eb "=>" eb AND eb ".") (COMMENT eb "=>" eb "." AND eb) (REDUCE (SEMICOLON) r160) (REDUCE (ABSTYPE) r160) (REDUCE (DATATYPE) r160) (REDUCE (END) r160) (REDUCE (EXCEPTION) r160) (REDUCE (FUN) r160) (REDUCE (FUNCTOR) r160) (REDUCE (IN) r160) (REDUCE (INFIX) r160) (REDUCE (INFIXR) r160) (REDUCE (LOCAL) r160) (REDUCE (NONFIX) r160) (REDUCE (OPEN) r160) (REDUCE (OVERLOAD) r160) (REDUCE (SIGNATURE) r160) (REDUCE (STRUCTURE) r160) (REDUCE (TYPE) r160) (REDUCE (VAL) r160) (REDUCE (RPAREN) r160) (REDUCE (FUNSIG) r160) (SHIFT (AND) s533) (REDUCE (EOF) r160)) (STATE s535 (COMMENT eb "=>" op_op ident "." EQUALOP qid) (COMMENT eb "=>" op_op ident "." OF ty) (COMMENT eb "=>" op_op ident ".") (REDUCE (SEMICOLON) r157) (REDUCE (ABSTYPE) r157) (REDUCE (DATATYPE) r157) (REDUCE (END) r157) (SHIFT (EQUALOP) s536) (REDUCE (EXCEPTION) r157) (REDUCE (FUN) r157) (REDUCE (FUNCTOR) r157) (REDUCE (IN) r157) (REDUCE (INFIX) r157) (REDUCE (INFIXR) r157) (REDUCE (LOCAL) r157) (REDUCE (NONFIX) r157) (SHIFT (OF) s537) (REDUCE (OPEN) r157) (REDUCE (OVERLOAD) r157) (REDUCE (SIGNATURE) r157) (REDUCE (STRUCTURE) r157) (REDUCE (TYPE) r157) (REDUCE (VAL) r157) (REDUCE (RPAREN) r157) (REDUCE (FUNSIG) r157) (REDUCE (AND) r157) (REDUCE (EOF) r157)) (STATE s536 (COMMENT eb "=>" op_op ident EQUALOP "." qid) (COMMENT qid "=>" "." ident) (COMMENT qid "=>" "." ID DOT qid) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (SHIFT (ID) s160) (SHIFT (EQUALOP) s22) (SHIFT (ASTERISK) s42) (GOTO ident s158) (GOTO qid s539)) (STATE s537 (COMMENT eb "=>" op_op ident OF "." ty) (COMMENT ty "=>" "." ty_prime) (COMMENT ty "=>" "." ty ARROW ty) (COMMENT ty "=>" "." tuple_ty) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK ty_prime) (COMMENT tuple_ty "=>" "." ty_prime ASTERISK tuple_ty) (COMMENT ty_prime "=>" "." tycon) (COMMENT ty_prime "=>" "." ty_prime tycon) (COMMENT ty_prime "=>" "." LPAREN ty RPAREN) (COMMENT ty_prime "=>" "." LPAREN ty0_pc RPAREN tycon) (COMMENT ty_prime "=>" "." LBRACE RBRACE) (COMMENT ty_prime "=>" "." LBRACE tlabels RBRACE) (COMMENT ty_prime "=>" "." TYVAR) (COMMENT tycon "=>" "." ID) (COMMENT tycon "=>" "." ID DOT tycon) (SHIFT (ID) s60) (SHIFT (TYVAR) s61) (SHIFT (LBRACE) s62) (SHIFT (LPAREN) s63) (GOTO tycon s56) (GOTO ty_prime s57) (GOTO tuple_ty s58) (GOTO ty s538)) (STATE s538 (COMMENT eb "=>" op_op ident OF ty ".") (COMMENT ty "=>" ty "." ARROW ty) (REDUCE (SEMICOLON) r158) (REDUCE (ABSTYPE) r158) (REDUCE (DATATYPE) r158) (REDUCE (END) r158) (REDUCE (EXCEPTION) r158) (REDUCE (FUN) r158) (REDUCE (FUNCTOR) r158) (REDUCE (IN) r158) (REDUCE (INFIX) r158) (REDUCE (INFIXR) r158) (REDUCE (LOCAL) r158) (REDUCE (NONFIX) r158) (REDUCE (OPEN) r158) (REDUCE (OVERLOAD) r158) (REDUCE (SIGNATURE) r158) (REDUCE (STRUCTURE) r158) (REDUCE (TYPE) r158) (REDUCE (VAL) r158) (REDUCE (RPAREN) r158) (REDUCE (FUNSIG) r158) (REDUCE (AND) r158) (SHIFT (ARROW) s70) (REDUCE (EOF) r158)) (STATE s539 (COMMENT eb "=>" op_op ident EQUALOP qid ".") (REDUCE () r159)) (STATE s540 (COMMENT ldec "=>" DATATYPE dtrepl ".") (REDUCE () r175)) (STATE s541 (COMMENT ldec "=>" DATATYPE dbs "." WITHTYPE tb) (COMMENT ldec "=>" DATATYPE dbs ".") (REDUCE (SEMICOLON) r176) (REDUCE (ABSTYPE) r176) (REDUCE (DATATYPE) r176) (REDUCE (END) r176) (REDUCE (EXCEPTION) r176) (REDUCE (FUN) r176) (REDUCE (FUNCTOR) r176) (REDUCE (IN) r176) (REDUCE (INFIX) r176) (REDUCE (INFIXR) r176) (REDUCE (LOCAL) r176) (REDUCE (NONFIX) r176) (REDUCE (OPEN) r176) (REDUCE (OVERLOAD) r176) (REDUCE (SIGNATURE) r176) (REDUCE (STRUCTURE) r176) (REDUCE (TYPE) r176) (REDUCE (VAL) r176) (REDUCE (RPAREN) r176) (REDUCE (FUNSIG) r176) (SHIFT (WITHTYPE) s542) (REDUCE (EOF) r176)) (STATE s542 (COMMENT ldec "=>" DATATYPE dbs WITHTYPE "." tb) (COMMENT tyvars "=>" ".") (COMMENT tyvars "=>" "." LPAREN tyvar_pc RPAREN) (COMMENT tyvars "=>" "." TYVAR) (COMMENT tb "=>" "." tb AND tb) (COMMENT tb "=>" "." tyvars ID EQUALOP ty) (REDUCE (ID) r142) (SHIFT (TYVAR) s213) (SHIFT (LPAREN) s214) (GOTO tb s543) (GOTO tyvars s312)) (STATE s543 (COMMENT ldec "=>" DATATYPE dbs WITHTYPE tb ".") (COMMENT tb "=>" tb "." AND tb) (REDUCE (SEMICOLON) r177) (REDUCE (ABSTYPE) r177) (REDUCE (DATATYPE) r177) (REDUCE (END) r177) (REDUCE (EXCEPTION) r177) (REDUCE (FUN) r177) (REDUCE (FUNCTOR) r177) (REDUCE (IN) r177) (REDUCE (INFIX) r177) (REDUCE (INFIXR) r177) (REDUCE (LOCAL) r177) (REDUCE (NONFIX) r177) (REDUCE (OPEN) r177) (REDUCE (OVERLOAD) r177) (REDUCE (SIGNATURE) r177) (REDUCE (STRUCTURE) r177) (REDUCE (TYPE) r177) (REDUCE (VAL) r177) (REDUCE (RPAREN) r177) (REDUCE (FUNSIG) r177) (SHIFT (AND) s316) (REDUCE (EOF) r177)) (STATE s544 (COMMENT exp "=>" CASE exp "." OF match) (COMMENT exp "=>" exp "." COLON ty) (COMMENT exp "=>" exp "." ANDALSO exp) (COMMENT exp "=>" exp "." ORELSE exp) (COMMENT exp "=>" exp "." HANDLE match) (SHIFT (OF) s545) (SHIFT (HANDLE) s52) (SHIFT (ORELSE) s53) (SHIFT (ANDALSO) s54) (SHIFT (COLON) s55)) (STATE s545 (COMMENT apats "=>" "." apat apats) (COMMENT apats "=>" "." apat) (COMMENT apat_prime "=>" "." LBRACE plabels RBRACE) (COMMENT apat_prime "=>" "." LBRACE RBRACE) (COMMENT apat_prime "=>" "." VECTORSTART pat_list RBRACKET) (COMMENT apat_prime "=>" "." VECTORSTART RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET pat_list RBRACKET) (COMMENT apat_prime "=>" "." LBRACKET RBRACKET) (COMMENT apat_prime "=>" "." WILD) (COMMENT apat_prime "=>" "." CHAR) (COMMENT apat_prime "=>" "." STRING) (COMMENT apat_prime "=>" "." WORD) (COMMENT apat_prime "=>" "." int) (COMMENT apat_prime "=>" "." ID DOT qid) (COMMENT apat_prime "=>" "." OP ident) (COMMENT apat "=>" "." LPAREN pat BAR or_pat_list RPAREN) (COMMENT apat "=>" "." LPAREN pat COMMA pat_list RPAREN) (COMMENT apat "=>" "." LPAREN RPAREN) (COMMENT apat "=>" "." id) (COMMENT apat "=>" "." LPAREN pat RPAREN) (COMMENT apat "=>" "." apat_prime) (COMMENT pat "=>" "." apats) (COMMENT pat "=>" "." pat COLON ty) (COMMENT pat "=>" "." pat AS pat) (COMMENT exp "=>" CASE exp OF "." match) (COMMENT rule "=>" "." pat DARROW exp) (COMMENT match "=>" "." rule BAR match) (COMMENT match "=>" "." rule) (COMMENT id "=>" "." ASTERISK) (COMMENT id "=>" "." ID) (COMMENT int "=>" "." INT0) (COMMENT int "=>" "." INT) (SHIFT (ID) s103) (SHIFT (INT) s13) (SHIFT (INT0) s14) (SHIFT (WORD) s104) (SHIFT (STRING) s105) (SHIFT (CHAR) s106) (SHIFT (OP) s107) (SHIFT (WILD) s108) (SHIFT (ASTERISK) s80) (SHIFT (LBRACE) s109) (SHIFT (LBRACKET) s110) (SHIFT (LPAREN) s111) (SHIFT (VECTORSTART) s112) (GOTO int s95) (GOTO id s96) (GOTO match s546) (GOTO rule s98) (GOTO pat s99) (GOTO apat s100) (GOTO apat_prime s101) (GOTO apats s102)) (STATE s546 (COMMENT exp "=>" CASE exp OF match ".") (REDUCE () r49)) (STATE s547 (COMMENT ldec "=>" ABSTYPE dbs "." WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" ABSTYPE dbs "." WITH ldecs END) (SHIFT (WITH) s548) (SHIFT (WITHTYPE) s549)) (STATE s548 (COMMENT ldecs "=>" "." LOCAL ldecs IN ldecs END ldecs) (COMMENT ldecs "=>" "." SEMICOLON ldecs) (COMMENT ldecs "=>" "." ldec ldecs) (COMMENT ldecs "=>" ".") (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" ABSTYPE dbs WITH "." ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (SHIFT (SEMICOLON) s492) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (REDUCE (END) r186) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s493) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (GOTO fixity s7) (GOTO ldec s490) (GOTO ldecs s554)) (STATE s549 (COMMENT ldec "=>" ABSTYPE dbs WITHTYPE "." tb WITH ldecs END) (COMMENT tyvars "=>" ".") (COMMENT tyvars "=>" "." LPAREN tyvar_pc RPAREN) (COMMENT tyvars "=>" "." TYVAR) (COMMENT tb "=>" "." tb AND tb) (COMMENT tb "=>" "." tyvars ID EQUALOP ty) (REDUCE (ID) r142) (SHIFT (TYVAR) s213) (SHIFT (LPAREN) s214) (GOTO tb s550) (GOTO tyvars s312)) (STATE s550 (COMMENT ldec "=>" ABSTYPE dbs WITHTYPE tb "." WITH ldecs END) (COMMENT tb "=>" tb "." AND tb) (SHIFT (WITH) s551) (SHIFT (AND) s316)) (STATE s551 (COMMENT ldecs "=>" "." LOCAL ldecs IN ldecs END ldecs) (COMMENT ldecs "=>" "." SEMICOLON ldecs) (COMMENT ldecs "=>" "." ldec ldecs) (COMMENT ldecs "=>" ".") (COMMENT ldec "=>" "." OVERLOAD ident COLON ty AS exp_pa) (COMMENT ldec "=>" "." fixity ops) (COMMENT ldec "=>" "." OPEN qid_p) (COMMENT ldec "=>" "." EXCEPTION eb) (COMMENT ldec "=>" ABSTYPE dbs WITHTYPE tb WITH "." ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITHTYPE tb WITH ldecs END) (COMMENT ldec "=>" "." ABSTYPE dbs WITH ldecs END) (COMMENT ldec "=>" "." DATATYPE dbs WITHTYPE tb) (COMMENT ldec "=>" "." DATATYPE dbs) (COMMENT ldec "=>" "." DATATYPE dtrepl) (COMMENT ldec "=>" "." TYPE tb) (COMMENT ldec "=>" "." FUN tyvarseq fb) (COMMENT ldec "=>" "." FUN fb) (COMMENT ldec "=>" "." VAL REC tyvarseq rvb) (COMMENT ldec "=>" "." VAL REC rvb) (COMMENT ldec "=>" "." VAL tyvarseq vb) (COMMENT ldec "=>" "." VAL vb) (COMMENT fixity "=>" "." NONFIX) (COMMENT fixity "=>" "." INFIXR int) (COMMENT fixity "=>" "." INFIXR) (COMMENT fixity "=>" "." INFIX int) (COMMENT fixity "=>" "." INFIX) (SHIFT (SEMICOLON) s492) (SHIFT (ABSTYPE) s19) (SHIFT (DATATYPE) s21) (REDUCE (END) r186) (SHIFT (EXCEPTION) s23) (SHIFT (FUN) s25) (SHIFT (INFIX) s29) (SHIFT (INFIXR) s30) (SHIFT (LOCAL) s493) (SHIFT (NONFIX) s33) (SHIFT (OPEN) s35) (SHIFT (OVERLOAD) s36) (SHIFT (TYPE) s39) (SHIFT (VAL) s40) (GOTO fixity s7) (GOTO ldec s490) (GOTO ldecs s552)) (STATE s552 (COMMENT ldec "=>" ABSTYPE dbs WITHTYPE tb WITH ldecs "." END) (SHIFT (END) s553)) (STATE s553 (COMMENT ldec "=>" ABSTYPE dbs WITHTYPE tb WITH ldecs END ".") (REDUCE () r179)) (STATE s554 (COMMENT ldec "=>" ABSTYPE dbs WITH ldecs "." END) (SHIFT (END) s555)) (STATE s555 (COMMENT ldec "=>" ABSTYPE dbs WITH ldecs END ".") (REDUCE () r178)) (STATE s556 (COMMENT *start "=>" interdec SEMICOLON ".") (REDUCE () r2)) (STATE s557 (COMMENT *start "=>" interdec EOF ".") (REDUCE () r1)) (STATE s558 (COMMENT sdecs_prime "=>" sdec sdecs_prime ".") (REDUCE () r261)) (STATE s559 (COMMENT ops "=>" ident "." ops) (COMMENT ops "=>" "." ident ops) (COMMENT ops "=>" ident ".") (COMMENT ops "=>" "." ident) (COMMENT ident "=>" "." EQUALOP) (COMMENT ident "=>" "." ASTERISK) (COMMENT ident "=>" "." ID) (REDUCE (SEMICOLON) r190) (SHIFT (ID) s156) (REDUCE (ABSTYPE) r190) (REDUCE (DATATYPE) r190) (REDUCE (END) r190) (SHIFT (EQUALOP) s22) (REDUCE (EXCEPTION) r190) (REDUCE (FUN) r190) (REDUCE (FUNCTOR) r190) (REDUCE (IN) r190) (REDUCE (INFIX) r190) (REDUCE (INFIXR) r190) (REDUCE (LOCAL) r190) (REDUCE (NONFIX) r190) (REDUCE (OPEN) r190) (REDUCE (OVERLOAD) r190) (REDUCE (SIGNATURE) r190) (REDUCE (STRUCTURE) r190) (REDUCE (TYPE) r190) (REDUCE (VAL) r190) (SHIFT (ASTERISK) s42) (REDUCE (RPAREN) r190) (REDUCE (FUNSIG) r190) (REDUCE (EOF) r190) (GOTO ident s559) (GOTO ops s561)) (STATE s560 (COMMENT ldec "=>" fixity ops ".") (REDUCE () r182)) (STATE s561 (COMMENT ops "=>" ident ops ".") (REDUCE () r191)) (STATE s562 (COMMENT app_exp "=>" aexp app_exp ".") (REDUCE () r55)) (STATE s563 (COMMENT app_exp "=>" ident app_exp ".") (REDUCE () r56)))
)

; (write ml-pda-risc)